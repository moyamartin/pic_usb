

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jan 03 20:02:50 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataBANK0
    44  00150E                     __pidataBANK0:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _DutyCycle
    48  00150E  000A               	dw	10
    49                           
    50                           	psect	smallconst
    51  000800                     __psmallconst:
    52                           	opt stack 0
    53  000800  00                 	db	0
    54  000801                     _LCD_ROW_ADDRESS:
    55                           	opt stack 0
    56  000801  80                 	db	128
    57  000802  C0                 	db	192
    58  000803  94                 	db	148
    59  000804  D4                 	db	212
    60  000805                     __end_of_LCD_ROW_ADDRESS:
    61                           	opt stack 0
    62  0000                     _CCP1CON	set	4029
    63  0000                     _CCPR1L	set	4030
    64  0000                     _INTCONbits	set	4082
    65  0000                     _LATDbits	set	3980
    66  0000                     _PIE1	set	3997
    67  0000                     _PIE1bits	set	3997
    68  0000                     _PIR1bits	set	3998
    69  0000                     _PR2	set	4043
    70  0000                     _RCREG	set	4014
    71  0000                     _RCSTA	set	4011
    72  0000                     _RCSTAbits	set	4011
    73  0000                     _SPBRG	set	4015
    74  0000                     _SPBRGH	set	4016
    75  0000                     _T2CON	set	4042
    76  0000                     _T2CONbits	set	4042
    77  0000                     _TRISC	set	3988
    78  0000                     _TRISCbits	set	3988
    79  0000                     _TRISD	set	3989
    80  0000                     _TXREG	set	4013
    81  0000                     _TXSTA	set	4012
    82  0000                     _TXSTAbits	set	4012
    83  0000                     _PEIE	set	32662
    84  0000                     _RCIE	set	31981
    85  0000                     _RCIF	set	31989
    86  0000                     _RCIP	set	31997
    87  000805                     __stringdata:
    88                           	opt stack 0
    89  000805                     STR_2:
    90  000805  4D                 	db	77	;'M'
    91  000806  6F                 	db	111	;'o'
    92  000807  64                 	db	100	;'d'
    93  000808  69                 	db	105	;'i'
    94  000809  66                 	db	102	;'f'
    95  00080A  69                 	db	105	;'i'
    96  00080B  63                 	db	99	;'c'
    97  00080C  61                 	db	97	;'a'
    98  00080D  64                 	db	100	;'d'
    99  00080E  6F                 	db	111	;'o'
   100  00080F  20                 	db	32
   101  000810  65                 	db	101	;'e'
   102  000811  6C                 	db	108	;'l'
   103  000812  20                 	db	32
   104  000813  53                 	db	83	;'S'
   105  000814  65                 	db	101	;'e'
   106  000815  74                 	db	116	;'t'
   107  000816  50                 	db	80	;'P'
   108  000817  6F                 	db	111	;'o'
   109  000818  69                 	db	105	;'i'
   110  000819  6E                 	db	110	;'n'
   111  00081A  74                 	db	116	;'t'
   112  00081B  20                 	db	32
   113  00081C  61                 	db	97	;'a'
   114  00081D  3A                 	db	58	;':'
   115  00081E  20                 	db	32
   116  00081F  00                 	db	0
   117  000820                     STR_4:
   118  000820  45                 	db	69	;'E'
   119  000821  72                 	db	114	;'r'
   120  000822  72                 	db	114	;'r'
   121  000823  6F                 	db	111	;'o'
   122  000824  72                 	db	114	;'r'
   123  000825  20                 	db	32
   124  000826  6D                 	db	109	;'m'
   125  000827  61                 	db	97	;'a'
   126  000828  71                 	db	113	;'q'
   127  000829  75                 	db	117	;'u'
   128  00082A  69                 	db	105	;'i'
   129  00082B  6E                 	db	110	;'n'
   130  00082C  6F                 	db	111	;'o'
   131  00082D  6C                 	db	108	;'l'
   132  00082E  61                 	db	97	;'a'
   133  00082F  0A                 	db	10
   134  000830  00                 	db	0
   135  000831                     STR_1:
   136  000831  44                 	db	68	;'D'
   137  000832  75                 	db	117	;'u'
   138  000833  74                 	db	116	;'t'
   139  000834  79                 	db	121	;'y'
   140  000835  20                 	db	32
   141  000836  43                 	db	67	;'C'
   142  000837  79                 	db	121	;'y'
   143  000838  63                 	db	99	;'c'
   144  000839  6C                 	db	108	;'l'
   145  00083A  65                 	db	101	;'e'
   146  00083B  3A                 	db	58	;':'
   147  00083C  20                 	db	32
   148  00083D  00                 	db	0
   149  00083E                     __end_of__stringdata:
   150                           	opt stack 0
   151                           
   152                           ; #config settings
   153  00083E  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           	psect	cinit
   156  001216                     __pcinit:
   157                           	opt stack 0
   158  001216                     start_initialization:
   159                           	opt stack 0
   160  001216                     __initialization:
   161                           	opt stack 0
   162                           
   163                           ; Clear objects allocated to BANK3 (200 bytes)
   164  001216  EE03  F000         	lfsr	0,__pbssBANK3
   165  00121A  0EC8               	movlw	200
   166  00121C                     clear_0:
   167  00121C  6AEE               	clrf	postinc0,c
   168  00121E  06E8               	decf	wreg,f,c
   169  001220  E1FD               	bnz	clear_0
   170                           
   171                           ; Clear objects allocated to BANK2 (200 bytes)
   172  001222  EE02  F000         	lfsr	0,__pbssBANK2
   173  001226  0EC8               	movlw	200
   174  001228                     clear_1:
   175  001228  6AEE               	clrf	postinc0,c
   176  00122A  06E8               	decf	wreg,f,c
   177  00122C  E1FD               	bnz	clear_1
   178                           
   179                           ; Clear objects allocated to BANK1 (200 bytes)
   180  00122E  EE01  F000         	lfsr	0,__pbssBANK1
   181  001232  0EC8               	movlw	200
   182  001234                     clear_2:
   183  001234  6AEE               	clrf	postinc0,c
   184  001236  06E8               	decf	wreg,f,c
   185  001238  E1FD               	bnz	clear_2
   186                           
   187                           ; Clear objects allocated to BANK0 (16 bytes)
   188  00123A  EE00  F073         	lfsr	0,__pbssBANK0
   189  00123E  0E10               	movlw	16
   190  001240                     clear_3:
   191  001240  6AEE               	clrf	postinc0,c
   192  001242  06E8               	decf	wreg,f,c
   193  001244  E1FD               	bnz	clear_3
   194                           
   195                           ; Clear objects allocated to COMRAM (34 bytes)
   196  001246  EE00  F02B         	lfsr	0,__pbssCOMRAM
   197  00124A  0E22               	movlw	34
   198  00124C                     clear_4:
   199  00124C  6AEE               	clrf	postinc0,c
   200  00124E  06E8               	decf	wreg,f,c
   201  001250  E1FD               	bnz	clear_4
   202                           
   203                           ; Initialize objects allocated to BANK0 (2 bytes)
   204                           ; load TBLPTR registers with __pidataBANK0
   205  001252  0E0E               	movlw	low __pidataBANK0
   206  001254  6EF6               	movwf	tblptrl,c
   207  001256  0E15               	movlw	high __pidataBANK0
   208  001258  6EF7               	movwf	tblptrh,c
   209  00125A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   210  00125C  6EF8               	movwf	tblptru,c
   211  00125E  0009               	tblrd		*+	;fetch initializer
   212  001260  CFF5 F083          	movff	tablat,__pdataBANK0
   213  001264  0009               	tblrd		*+	;fetch initializer
   214  001266  CFF5 F084          	movff	tablat,__pdataBANK0+1
   215  00126A                     end_of_initialization:
   216                           	opt stack 0
   217  00126A                     __end_of__initialization:
   218                           	opt stack 0
   219  00126A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  00126C  6EF8               	movwf	tblptru,c
   221  00126E  0100               	movlb	0
   222  001270  EFAB  F005         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230                           	psect	bssCOMRAM
   231  00002B                     __pbssCOMRAM:
   232                           	opt stack 0
   233  00002B                     _lcd_lower_display_buffer:
   234                           	opt stack 0
   235  00002B                     	ds	16
   236  00003B                     _cantidadLetrasDOWN:
   237                           	opt stack 0
   238  00003B                     	ds	2
   239  00003D                     _cantidadLetrasUP:
   240                           	opt stack 0
   241  00003D                     	ds	2
   242  00003F                     _i:
   243                           	opt stack 0
   244  00003F                     	ds	2
   245  000041                     _k:
   246                           	opt stack 0
   247  000041                     	ds	2
   248  000043                     _USART_Status:
   249                           	opt stack 0
   250  000043                     	ds	1
   251  000044                     _c:
   252                           	opt stack 0
   253  000044                     	ds	1
   254  000045                     _flag_newline:
   255                           	opt stack 0
   256  000045                     	ds	1
   257  000046                     _lcd_x:
   258                           	opt stack 0
   259  000046                     	ds	1
   260  000047                     _lcd_y:
   261                           	opt stack 0
   262  000047                     	ds	1
   263  000048                     _DC_str:
   264                           	opt stack 0
   265  000048                     	ds	5
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	bssBANK0
   274  000073                     __pbssBANK0:
   275                           	opt stack 0
   276  000073                     _lcd_upper_display_buffer:
   277                           	opt stack 0
   278  000073                     	ds	16
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	dataBANK0
   287  000083                     __pdataBANK0:
   288                           	opt stack 0
   289  000083                     _DutyCycle:
   290                           	opt stack 0
   291  000083                     	ds	2
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	bssBANK1
   300  000100                     __pbssBANK1:
   301                           	opt stack 0
   302  000100                     _MessageBuffer:
   303                           	opt stack 0
   304  000100                     	ds	200
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	bssBANK2
   313  000200                     __pbssBANK2:
   314                           	opt stack 0
   315  000200                     _lcd_upper_row_buffer:
   316                           	opt stack 0
   317  000200                     	ds	200
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	bssBANK3
   326  000300                     __pbssBANK3:
   327                           	opt stack 0
   328  000300                     _lcd_lower_row_buffer:
   329                           	opt stack 0
   330  000300                     	ds	200
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           
   338                           	psect	cstackBANK0
   339  000060                     __pcstackBANK0:
   340                           	opt stack 0
   341  000060                     ?___lwdiv:
   342                           	opt stack 0
   343  000060                     lcd_write_nibble@is_data:
   344                           	opt stack 0
   345  000060                     OpenPWM1@period:
   346                           	opt stack 0
   347  000060                     SetDCPWM1@dutycycle:
   348                           	opt stack 0
   349  000060                     OpenUSART@spbrg:
   350                           	opt stack 0
   351  000060                     ___lwdiv@dividend:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x0
   355  000060                     	ds	1
   356  000061                     ??_lcd_write_nibble:
   357                           
   358                           ; 0 bytes @ 0x1
   359  000061                     	ds	1
   360  000062                     ??_OpenUSART:
   361  000062                     ??_SetDCPWM1:
   362  000062                     lcd_write_nibble@nibble:
   363                           	opt stack 0
   364  000062                     ___lwdiv@divisor:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000062                     	ds	1
   369  000063                     lcd_write_byte@is_data:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x3
   373  000063                     	ds	1
   374  000064                     lcd_write_byte@byte:
   375                           	opt stack 0
   376  000064                     ___lwdiv@counter:
   377                           	opt stack 0
   378  000064                     SetDCPWM1@DCycle:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x4
   382  000064                     	ds	1
   383  000065                     ??_lcd_init:
   384  000065                     lcd_gotoxy@y:
   385                           	opt stack 0
   386  000065                     OpenUSART@config:
   387                           	opt stack 0
   388  000065                     ___lwdiv@quotient:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x5
   392  000065                     	ds	1
   393  000066                     lcd_gotoxy@addr:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x6
   397  000066                     	ds	1
   398  000067                     lcd_gotoxy@x:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x7
   402  000067                     	ds	1
   403  000068                     lcd_putnum@num:
   404                           	opt stack 0
   405  000068                     lcd_puts@str:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x8
   409  000068                     	ds	2
   410  00006A                     lcd_putnum@len:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0xA
   414  00006A                     	ds	1
   415  00006B                     lcd_putnum@x:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0xB
   419  00006B                     	ds	1
   420  00006C                     lcd_putnum@y:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0xC
   424  00006C                     	ds	1
   425  00006D                     lcd_putnum@dec:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0xD
   429  00006D                     	ds	1
   430  00006E                     lcd_putnum@r:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xE
   434  00006E                     	ds	2
   435  000070                     ??_main:
   436                           
   437                           ; 0 bytes @ 0x10
   438  000070                     	ds	1
   439  000071                     main@config:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x11
   443  000071                     	ds	1
   444  000072                     main@spbrg:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x12
   448  000072                     	ds	1
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           
   456                           	psect	cstackCOMRAM
   457  000001                     __pcstackCOMRAM:
   458                           	opt stack 0
   459  000001                     ??_isdigit:
   460  000001                     ?___wmul:
   461                           	opt stack 0
   462  000001                     ?___lwmod:
   463                           	opt stack 0
   464  000001                     ?i2___lwdiv:
   465                           	opt stack 0
   466  000001                     ReadUSART@data:
   467                           	opt stack 0
   468  000001                     WriteUSART@data:
   469                           	opt stack 0
   470  000001                     ___wmul@multiplier:
   471                           	opt stack 0
   472  000001                     ___lwmod@dividend:
   473                           	opt stack 0
   474  000001                     strncpy@to:
   475                           	opt stack 0
   476  000001                     i2___lwdiv@dividend:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x0
   480  000001                     	ds	1
   481  000002                     _isdigit$1328:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x1
   485  000002                     	ds	1
   486  000003                     isdigit@c:
   487                           	opt stack 0
   488  000003                     ___wmul@multiplicand:
   489                           	opt stack 0
   490  000003                     ___lwmod@divisor:
   491                           	opt stack 0
   492  000003                     strncpy@from:
   493                           	opt stack 0
   494  000003                     i2___lwdiv@divisor:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x2
   498  000003                     	ds	2
   499  000005                     ___lwmod@counter:
   500                           	opt stack 0
   501  000005                     ___wmul@product:
   502                           	opt stack 0
   503  000005                     strncpy@size:
   504                           	opt stack 0
   505  000005                     i2___lwdiv@quotient:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x4
   509  000005                     	ds	2
   510  000007                     ?_atoi:
   511                           	opt stack 0
   512  000007                     i2___lwdiv@counter:
   513                           	opt stack 0
   514  000007                     atoi@s:
   515                           	opt stack 0
   516  000007                     strncpy@cp:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x6
   520  000007                     	ds	1
   521  000008                     utoa@buf:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x7
   525  000008                     	ds	1
   526  000009                     ??_atoi:
   527                           
   528                           ; 0 bytes @ 0x8
   529  000009                     	ds	1
   530  00000A                     utoa@val:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x9
   534  00000A                     	ds	1
   535  00000B                     atoi@sign:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0xA
   539  00000B                     	ds	1
   540  00000C                     atoi@a:
   541                           	opt stack 0
   542  00000C                     utoa@base:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0xB
   546  00000C                     	ds	2
   547  00000E                     utoa@v:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xD
   551  00000E                     	ds	2
   552  000010                     utoa@c:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0xF
   556  000010                     	ds	1
   557  000011                     ?_itoa:
   558                           	opt stack 0
   559  000011                     itoa@buf:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x10
   563  000011                     	ds	2
   564  000013                     itoa@val:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x12
   568  000013                     	ds	2
   569  000015                     itoa@base:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x14
   573  000015                     	ds	2
   574  000017                     itoa@cp:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x16
   578  000017                     	ds	2
   579  000019                     putsUSART@data:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x18
   583  000019                     	ds	2
   584  00001B                     ??_putsUSART:
   585                           
   586                           ; 0 bytes @ 0x1A
   587  00001B                     	ds	2
   588  00001D                     ??_ISR:
   589                           
   590                           ; 0 bytes @ 0x1C
   591  00001D                     	ds	14
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           
   599 ;;
   600 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   601 ;;
   602 ;; *************** function _main *****************
   603 ;; Defined at:
   604 ;;		line 46 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  spbrg           1   18[BANK0 ] unsigned char 
   609 ;;  config          1   17[BANK0 ] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;		None               void
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         0       2       0       0       0       0       0       0       0
   621 ;;      Temps:          0       1       0       0       0       0       0       0       0
   622 ;;      Totals:         0       3       0       0       0       0       0       0       0
   623 ;;Total ram usage:        3 bytes
   624 ;; Hardware stack levels required when called:    8
   625 ;; This function calls:
   626 ;;		_OpenPWM1
   627 ;;		_OpenUSART
   628 ;;		_SetDCPWM1
   629 ;;		_lcd_gotoxy
   630 ;;		_lcd_init
   631 ;;		_lcd_putnum
   632 ;;		_lcd_puts
   633 ;;		_lcd_write_byte
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640  000B56                     __ptext0:
   641                           	opt stack 0
   642  000B56                     _main:
   643                           	opt stack 23
   644                           
   645                           ;main.c: 48: unsigned char config = 0, spbrg = 0;
   646                           
   647                           ;incstack = 0
   648  000B56  0E00               	movlw	0
   649  000B58  0100               	movlb	0	; () banked
   650  000B5A  6F71               	movwf	main@config& (0+255),b
   651  000B5C  0E00               	movlw	0
   652  000B5E  0100               	movlb	0	; () banked
   653  000B60  6F72               	movwf	main@spbrg& (0+255),b
   654                           
   655                           ;main.c: 50: TRISC = 0b10000000;
   656  000B62  0E80               	movlw	128
   657  000B64  6E94               	movwf	3988,c	;volatile
   658                           
   659                           ;main.c: 51: TRISD = 0b00000000;
   660  000B66  0E00               	movlw	0
   661  000B68  6E95               	movwf	3989,c	;volatile
   662                           
   663                           ; BSR set to: 0
   664                           ;main.c: 56: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   665  000B6A  0E4F               	movlw	79
   666  000B6C  16AB               	andwf	4011,f,c	;volatile
   667                           
   668                           ; BSR set to: 0
   669  000B6E  9AAC               	bcf	4012,5,c	;volatile
   670                           
   671                           ; BSR set to: 0
   672  000B70  0ECF               	movlw	207
   673  000B72  169D               	andwf	3997,f,c	;volatile
   674                           
   675                           ;main.c: 57: config = 0b01111111& 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111;
   676  000B74  0E7C               	movlw	124
   677  000B76  0100               	movlb	0	; () banked
   678  000B78  6F71               	movwf	main@config& (0+255),b
   679                           
   680                           ;main.c: 58: spbrg = 77;
   681  000B7A  0E4D               	movlw	77
   682  000B7C  0100               	movlb	0	; () banked
   683  000B7E  6F72               	movwf	main@spbrg& (0+255),b
   684                           
   685                           ; BSR set to: 0
   686                           ;main.c: 59: OpenUSART(config, spbrg);
   687  000B80  0100               	movlb	0	; () banked
   688  000B82  C072  F060         	movff	main@spbrg,OpenUSART@spbrg
   689  000B86  0100               	movlb	0	; () banked
   690  000B88  6B61               	clrf	(OpenUSART@spbrg+1)& (0+255),b
   691  000B8A  0100               	movlb	0	; () banked
   692  000B8C  5171               	movf	main@config& (0+255),w,b
   693  000B8E  EC1B  F008         	call	_OpenUSART
   694                           
   695                           ;main.c: 60: RCIF = 0;
   696  000B92  9A9E               	bcf	3998,5,c	;volatile
   697                           
   698                           ;main.c: 61: RCIP = 0;
   699  000B94  9A9F               	bcf	3999,5,c	;volatile
   700                           
   701                           ;main.c: 62: RCIE = 1;
   702  000B96  8A9D               	bsf	3997,5,c	;volatile
   703                           
   704                           ;main.c: 63: PEIE = 1;
   705  000B98  8CF2               	bsf	intcon,6,c	;volatile
   706                           
   707                           ;main.c: 64: PIR1bits.RCIF = 0;
   708  000B9A  9A9E               	bcf	3998,5,c	;volatile
   709                           
   710                           ;main.c: 65: (INTCONbits.GIE = 1);
   711  000B9C  8EF2               	bsf	intcon,7,c	;volatile
   712                           
   713                           ;main.c: 69: T2CON = 0b00000111 ;
   714  000B9E  0E07               	movlw	7
   715  000BA0  6ECA               	movwf	4042,c	;volatile
   716                           
   717                           ;main.c: 70: OpenPWM1(0b10111011);
   718  000BA2  0EBB               	movlw	187
   719  000BA4  EC74  F00A         	call	_OpenPWM1
   720                           
   721                           ;main.c: 72: SetDCPWM1(DutyCycle);
   722  000BA8  C083  F060         	movff	_DutyCycle,SetDCPWM1@dutycycle
   723  000BAC  C084  F061         	movff	_DutyCycle+1,SetDCPWM1@dutycycle+1
   724  000BB0  ECED  F009         	call	_SetDCPWM1	;wreg free
   725                           
   726                           ;main.c: 75: lcd_init();
   727  000BB4  EC42  F006         	call	_lcd_init	;wreg free
   728                           
   729                           ;main.c: 76: {lcd_write_byte(0x01, 0); { _delay((unsigned long)((5000)*(12000000/4000000
      +                          .0))); };};
   730  000BB8  0E00               	movlw	0
   731  000BBA  0100               	movlb	0	; () banked
   732  000BBC  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
   733  000BBE  0E01               	movlw	1
   734  000BC0  EC45  F00A         	call	_lcd_write_byte
   735  000BC4  0E14               	movlw	20
   736  000BC6  0100               	movlb	0	; () banked
   737  000BC8  6F70               	movwf	??_main& (0+255),b
   738  000BCA  0E7A               	movlw	122
   739  000BCC                     u1877:
   740  000BCC  2EE8               	decfsz	wreg,f,c
   741  000BCE  D7FE               	goto	u1877
   742  000BD0  2F70               	decfsz	??_main& (0+255),f,b
   743  000BD2  D7FC               	goto	u1877
   744                           
   745                           ;main.c: 77: lcd_gotoxy(0,0);
   746  000BD4  0E00               	movlw	0
   747  000BD6  0100               	movlb	0	; () banked
   748  000BD8  6F65               	movwf	lcd_gotoxy@y& (0+255),b
   749  000BDA  0E00               	movlw	0
   750  000BDC  ECD1  F008         	call	_lcd_gotoxy
   751  000BE0                     l2270:
   752                           
   753                           ;main.c: 79: {
   754                           ;main.c: 80: SetDCPWM1(DutyCycle);
   755  000BE0  C083  F060         	movff	_DutyCycle,SetDCPWM1@dutycycle
   756  000BE4  C084  F061         	movff	_DutyCycle+1,SetDCPWM1@dutycycle+1
   757  000BE8  ECED  F009         	call	_SetDCPWM1	;wreg free
   758                           
   759                           ;main.c: 82: lcd_gotoxy(0,0);
   760  000BEC  0E00               	movlw	0
   761  000BEE  0100               	movlb	0	; () banked
   762  000BF0  6F65               	movwf	lcd_gotoxy@y& (0+255),b
   763  000BF2  0E00               	movlw	0
   764  000BF4  ECD1  F008         	call	_lcd_gotoxy
   765                           
   766                           ;main.c: 83: lcd_puts("Duty Cycle: ");
   767  000BF8  0E08               	movlw	high STR_1
   768  000BFA  0100               	movlb	0	; () banked
   769  000BFC  6F69               	movwf	(lcd_puts@str+1)& (0+255),b
   770  000BFE  0E31               	movlw	low STR_1
   771  000C00  0100               	movlb	0	; () banked
   772  000C02  6F68               	movwf	lcd_puts@str& (0+255),b
   773  000C04  ECD2  F007         	call	_lcd_puts	;wreg free
   774                           
   775                           ;main.c: 84: lcd_putnum(DutyCycle, 4, 0, 1);
   776  000C08  C083  F068         	movff	_DutyCycle,lcd_putnum@num
   777  000C0C  C084  F069         	movff	_DutyCycle+1,lcd_putnum@num+1
   778  000C10  0E04               	movlw	4
   779  000C12  0100               	movlb	0	; () banked
   780  000C14  6F6A               	movwf	lcd_putnum@len& (0+255),b
   781  000C16  0E00               	movlw	0
   782  000C18  0100               	movlb	0	; () banked
   783  000C1A  6F6B               	movwf	lcd_putnum@x& (0+255),b
   784  000C1C  0E01               	movlw	1
   785  000C1E  0100               	movlb	0	; () banked
   786  000C20  6F6C               	movwf	lcd_putnum@y& (0+255),b
   787  000C22  EC97  F008         	call	_lcd_putnum	;wreg free
   788                           
   789                           ;main.c: 85: _delay((unsigned long)((50)*(12000000/4000.0)));
   790  000C26  0EC3               	movlw	195
   791  000C28  0100               	movlb	0	; () banked
   792  000C2A  6F70               	movwf	??_main& (0+255),b
   793  000C2C  0ECD               	movlw	205
   794  000C2E                     u1887:
   795  000C2E  2EE8               	decfsz	wreg,f,c
   796  000C30  D7FE               	goto	u1887
   797  000C32  2F70               	decfsz	??_main& (0+255),f,b
   798  000C34  D7FC               	goto	u1887
   799  000C36  F000               	nop	
   800                           
   801                           ;main.c: 86: _delay((unsigned long)((50)*(12000000/4000.0)));
   802  000C38  0EC3               	movlw	195
   803  000C3A  0100               	movlb	0	; () banked
   804  000C3C  6F70               	movwf	??_main& (0+255),b
   805  000C3E  0ECD               	movlw	205
   806  000C40                     u1897:
   807  000C40  2EE8               	decfsz	wreg,f,c
   808  000C42  D7FE               	goto	u1897
   809  000C44  2F70               	decfsz	??_main& (0+255),f,b
   810  000C46  D7FC               	goto	u1897
   811  000C48  F000               	nop	
   812                           
   813                           ;main.c: 87: _delay((unsigned long)((50)*(12000000/4000.0)));
   814  000C4A  0EC3               	movlw	195
   815  000C4C  0100               	movlb	0	; () banked
   816  000C4E  6F70               	movwf	??_main& (0+255),b
   817  000C50  0ECD               	movlw	205
   818  000C52                     u1907:
   819  000C52  2EE8               	decfsz	wreg,f,c
   820  000C54  D7FE               	goto	u1907
   821  000C56  2F70               	decfsz	??_main& (0+255),f,b
   822  000C58  D7FC               	goto	u1907
   823  000C5A  F000               	nop	
   824                           
   825                           ;main.c: 88: _delay((unsigned long)((50)*(12000000/4000.0)));
   826  000C5C  0EC3               	movlw	195
   827  000C5E  0100               	movlb	0	; () banked
   828  000C60  6F70               	movwf	??_main& (0+255),b
   829  000C62  0ECD               	movlw	205
   830  000C64                     u1917:
   831  000C64  2EE8               	decfsz	wreg,f,c
   832  000C66  D7FE               	goto	u1917
   833  000C68  2F70               	decfsz	??_main& (0+255),f,b
   834  000C6A  D7FC               	goto	u1917
   835  000C6C  F000               	nop	
   836                           
   837                           ;main.c: 89: _delay((unsigned long)((50)*(12000000/4000.0)));
   838  000C6E  0EC3               	movlw	195
   839  000C70  0100               	movlb	0	; () banked
   840  000C72  6F70               	movwf	??_main& (0+255),b
   841  000C74  0ECD               	movlw	205
   842  000C76                     u1927:
   843  000C76  2EE8               	decfsz	wreg,f,c
   844  000C78  D7FE               	goto	u1927
   845  000C7A  2F70               	decfsz	??_main& (0+255),f,b
   846  000C7C  D7FC               	goto	u1927
   847  000C7E  F000               	nop	
   848                           
   849                           ;main.c: 90: LATDbits.LATD0 =~ LATDbits.LATD0;
   850  000C80  708C               	btg	3980,0,c	;volatile
   851  000C82  D7AE               	goto	l2270
   852  000C84                     __end_of_main:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           intcon	equ	0xFF2
   859                           postinc0	equ	0xFEE
   860                           wreg	equ	0xFE8
   861                           
   862 ;; *************** function _lcd_puts *****************
   863 ;; Defined at:
   864 ;;		line 108 in file "lcd_driver.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  str             2    8[BANK0 ] PTR unsigned char 
   867 ;;		 -> STR_1(13), 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;		None               void
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   879 ;;      Params:         0       2       0       0       0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0
   882 ;;      Totals:         0       2       0       0       0       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    7
   886 ;; This function calls:
   887 ;;		_lcd_gotoxy
   888 ;;		_lcd_write_byte
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text1
   895  000FA4                     __ptext1:
   896                           	opt stack 0
   897  000FA4                     _lcd_puts:
   898                           	opt stack 23
   899                           
   900                           ;lcd_driver.c: 110: while (*str != 0)
   901                           
   902                           ;incstack = 0
   903  000FA4  D03C               	goto	l2214
   904  000FA6                     l2198:
   905                           
   906                           ;lcd_driver.c: 111: {
   907                           ;lcd_driver.c: 112: if (*str != '\n')
   908  000FA6  0100               	movlb	0	; () banked
   909  000FA8  C068  FFF6         	movff	lcd_puts@str,tblptrl
   910  000FAC  0100               	movlb	0	; () banked
   911  000FAE  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
   912  000FB2                     	if	0	;tblptru may be non-zero
   913  000FB2                     	endif
   914  000FB2                     	if	0	;tblptru may be non-zero
   915  000FB2                     	endif
   916  000FB2  0008               	tblrd		*
   917  000FB4  50F5               	movf	tablat,w,c
   918  000FB6  0A0A               	xorlw	10
   919  000FB8  B4D8               	btfsc	status,2,c
   920  000FBA  D00D               	goto	l2202
   921                           
   922                           ; BSR set to: 0
   923                           ;lcd_driver.c: 113: {
   924                           ;lcd_driver.c: 114: {lcd_write_byte(*str, 1);};
   925  000FBC  0E01               	movlw	1
   926  000FBE  0100               	movlb	0	; () banked
   927  000FC0  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
   928  000FC2  0100               	movlb	0	; () banked
   929  000FC4  C068  FFF6         	movff	lcd_puts@str,tblptrl
   930  000FC8  0100               	movlb	0	; () banked
   931  000FCA  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
   932  000FCE                     	if	0	;tblptru may be non-zero
   933  000FCE                     	endif
   934  000FCE                     	if	0	;tblptru may be non-zero
   935  000FCE                     	endif
   936  000FCE  0008               	tblrd		*
   937  000FD0  50F5               	movf	tablat,w,c
   938  000FD2  EC45  F00A         	call	_lcd_write_byte
   939  000FD6                     l2202:
   940                           
   941                           ;lcd_driver.c: 115: }
   942                           ;lcd_driver.c: 117: if ((++lcd_x == 16) || (*str == '\n'))
   943  000FD6  2A46               	incf	_lcd_x,f,c
   944  000FD8  5046               	movf	_lcd_x& (0+255),w,c
   945  000FDA  0A10               	xorlw	16
   946  000FDC  B4D8               	btfsc	status,2,c
   947  000FDE  D00B               	goto	l2206
   948  000FE0  0100               	movlb	0	; () banked
   949  000FE2  C068  FFF6         	movff	lcd_puts@str,tblptrl
   950  000FE6  0100               	movlb	0	; () banked
   951  000FE8  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
   952  000FEC                     	if	0	;tblptru may be non-zero
   953  000FEC                     	endif
   954  000FEC                     	if	0	;tblptru may be non-zero
   955  000FEC                     	endif
   956  000FEC  0008               	tblrd		*
   957  000FEE  50F5               	movf	tablat,w,c
   958  000FF0  0A0A               	xorlw	10
   959  000FF2  A4D8               	btfss	status,2,c
   960  000FF4  D011               	goto	l2212
   961  000FF6                     l2206:
   962                           
   963                           ;lcd_driver.c: 118: {
   964                           ;lcd_driver.c: 119: if (++lcd_y == 2)
   965  000FF6  2A47               	incf	_lcd_y,f,c
   966  000FF8  5047               	movf	_lcd_y& (0+255),w,c
   967  000FFA  0A02               	xorlw	2
   968  000FFC  A4D8               	btfss	status,2,c
   969  000FFE  D007               	goto	l2210
   970                           
   971                           ;lcd_driver.c: 120: {
   972                           ;lcd_driver.c: 121: lcd_gotoxy(0,0);
   973  001000  0E00               	movlw	0
   974  001002  0100               	movlb	0	; () banked
   975  001004  6F65               	movwf	lcd_gotoxy@y& (0+255),b
   976  001006  0E00               	movlw	0
   977  001008  ECD1  F008         	call	_lcd_gotoxy
   978                           
   979                           ;lcd_driver.c: 122: }
   980  00100C  D005               	goto	l2212
   981  00100E                     l2210:
   982                           
   983                           ;lcd_driver.c: 123: else
   984                           ;lcd_driver.c: 124: {
   985                           ;lcd_driver.c: 125: lcd_gotoxy(0, lcd_y);
   986  00100E  C047  F065         	movff	_lcd_y,lcd_gotoxy@y
   987  001012  0E00               	movlw	0
   988  001014  ECD1  F008         	call	_lcd_gotoxy
   989  001018                     l2212:
   990                           
   991                           ;lcd_driver.c: 126: }
   992                           ;lcd_driver.c: 127: }
   993                           ;lcd_driver.c: 128: str++;
   994  001018  0100               	movlb	0	; () banked
   995  00101A  4B68               	infsnz	lcd_puts@str& (0+255),f,b
   996  00101C  2B69               	incf	(lcd_puts@str+1)& (0+255),f,b
   997  00101E                     l2214:
   998  00101E  0100               	movlb	0	; () banked
   999  001020  C068  FFF6         	movff	lcd_puts@str,tblptrl
  1000  001024  0100               	movlb	0	; () banked
  1001  001026  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
  1002  00102A                     	if	0	;tblptru may be non-zero
  1003  00102A                     	endif
  1004  00102A                     	if	0	;tblptru may be non-zero
  1005  00102A                     	endif
  1006  00102A  0008               	tblrd		*
  1007  00102C  50F5               	movf	tablat,w,c
  1008  00102E  0900               	iorlw	0
  1009  001030  B4D8               	btfsc	status,2,c
  1010                           
  1011                           ; BSR set to: 0
  1012                           
  1013                           ; BSR set to: 0
  1014  001032  0012               	return	
  1015  001034  D7B8               	goto	l2198
  1016  001036                     __end_of_lcd_puts:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           intcon	equ	0xFF2
  1023                           postinc0	equ	0xFEE
  1024                           wreg	equ	0xFE8
  1025                           status	equ	0xFD8
  1026                           
  1027 ;; *************** function _lcd_putnum *****************
  1028 ;; Defined at:
  1029 ;;		line 87 in file "lcd_driver.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  num             2    8[BANK0 ] unsigned int 
  1032 ;;  len             1   10[BANK0 ] unsigned char 
  1033 ;;  x               1   11[BANK0 ] unsigned char 
  1034 ;;  y               1   12[BANK0 ] unsigned char 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  r               2   14[BANK0 ] unsigned int 
  1037 ;;  dec             1   13[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       5       0       0       0       0       0       0       0
  1048 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1050 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        8 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    7
  1054 ;; This function calls:
  1055 ;;		___lwdiv
  1056 ;;		_lcd_gotoxy
  1057 ;;		_lcd_write_byte
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text2
  1064  00112E                     __ptext2:
  1065                           	opt stack 0
  1066  00112E                     _lcd_putnum:
  1067                           	opt stack 23
  1068                           
  1069                           ;lcd_driver.c: 92: uint16_t r;
  1070                           ;lcd_driver.c: 93: uint8_t dec;
  1071                           ;lcd_driver.c: 95: x+=len;
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;incstack = 0
  1075  00112E  0100               	movlb	0	; () banked
  1076  001130  516A               	movf	lcd_putnum@len& (0+255),w,b
  1077  001132  0100               	movlb	0	; () banked
  1078  001134  276B               	addwf	lcd_putnum@x& (0+255),f,b
  1079                           
  1080                           ;lcd_driver.c: 96: while (len)
  1081  001136  D031               	goto	l2232
  1082  001138                     l2218:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;lcd_driver.c: 97: {
  1086                           ;lcd_driver.c: 98: r = num/10;
  1087  001138  C068  F060         	movff	lcd_putnum@num,___lwdiv@dividend
  1088  00113C  C069  F061         	movff	lcd_putnum@num+1,___lwdiv@dividend+1
  1089  001140  0E00               	movlw	0
  1090  001142  0100               	movlb	0	; () banked
  1091  001144  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1092  001146  0E0A               	movlw	10
  1093  001148  0100               	movlb	0	; () banked
  1094  00114A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1095  00114C  EC5B  F008         	call	___lwdiv	;wreg free
  1096  001150  0100               	movlb	0	; () banked
  1097  001152  C060  F06E         	movff	?___lwdiv,lcd_putnum@r
  1098  001156  0100               	movlb	0	; () banked
  1099  001158  C061  F06F         	movff	?___lwdiv+1,lcd_putnum@r+1
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;lcd_driver.c: 99: dec = num - r*10;
  1103  00115C  0100               	movlb	0	; () banked
  1104  00115E  516E               	movf	lcd_putnum@r& (0+255),w,b
  1105  001160  0D0A               	mullw	10
  1106  001162  50F3               	movf	prodl,w,c
  1107  001164  0800               	sublw	0
  1108  001166  0100               	movlb	0	; () banked
  1109  001168  2568               	addwf	lcd_putnum@num& (0+255),w,b
  1110  00116A  0100               	movlb	0	; () banked
  1111  00116C  6F6D               	movwf	lcd_putnum@dec& (0+255),b
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;lcd_driver.c: 100: x--;
  1115  00116E  0100               	movlb	0	; () banked
  1116  001170  076B               	decf	lcd_putnum@x& (0+255),f,b
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;lcd_driver.c: 101: len--;
  1120  001172  0100               	movlb	0	; () banked
  1121  001174  076A               	decf	lcd_putnum@len& (0+255),f,b
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;lcd_driver.c: 102: lcd_gotoxy(x,y);
  1125  001176  C06C  F065         	movff	lcd_putnum@y,lcd_gotoxy@y
  1126  00117A  0100               	movlb	0	; () banked
  1127  00117C  516B               	movf	lcd_putnum@x& (0+255),w,b
  1128  00117E  ECD1  F008         	call	_lcd_gotoxy
  1129                           
  1130                           ;lcd_driver.c: 103: {lcd_write_byte(dec + 0x30, 1);};
  1131  001182  0E01               	movlw	1
  1132  001184  0100               	movlb	0	; () banked
  1133  001186  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1134  001188  0100               	movlb	0	; () banked
  1135  00118A  516D               	movf	lcd_putnum@dec& (0+255),w,b
  1136  00118C  0F30               	addlw	48
  1137  00118E  EC45  F00A         	call	_lcd_write_byte
  1138                           
  1139                           ;lcd_driver.c: 104: num = r;
  1140  001192  C06E  F068         	movff	lcd_putnum@r,lcd_putnum@num
  1141  001196  C06F  F069         	movff	lcd_putnum@r+1,lcd_putnum@num+1
  1142  00119A                     l2232:
  1143  00119A  0100               	movlb	0	; () banked
  1144  00119C  676A               	tstfsz	lcd_putnum@len& (0+255),b
  1145  00119E  D7CC               	goto	l2218
  1146                           
  1147                           ; BSR set to: 0
  1148                           
  1149                           ; BSR set to: 0
  1150  0011A0  0012               	return	
  1151  0011A2                     __end_of_lcd_putnum:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodl	equ	0xFF3
  1158                           intcon	equ	0xFF2
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           status	equ	0xFD8
  1162                           
  1163 ;; *************** function _lcd_gotoxy *****************
  1164 ;; Defined at:
  1165 ;;		line 54 in file "lcd_driver.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  x               1    wreg     unsigned char 
  1168 ;;  y               1    5[BANK0 ] unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  x               1    7[BANK0 ] unsigned char 
  1171 ;;  addr            1    6[BANK0 ] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;		None               void
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         0       1       0       0       0       0       0       0       0
  1182 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1184 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1185 ;;Total ram usage:        3 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    6
  1188 ;; This function calls:
  1189 ;;		_lcd_write_byte
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;;		_lcd_putnum
  1193 ;;		_lcd_puts
  1194 ;;		_lcd_put_blank
  1195 ;;		_lcd_puts_const
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text3
  1200  0011A2                     __ptext3:
  1201                           	opt stack 0
  1202  0011A2                     _lcd_gotoxy:
  1203                           	opt stack 23
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;incstack = 0
  1207                           ;lcd_gotoxy@x stored from wreg
  1208  0011A2  0100               	movlb	0	; () banked
  1209  0011A4  6F67               	movwf	lcd_gotoxy@x& (0+255),b
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;lcd_driver.c: 57: uint8_t addr;
  1213                           ;lcd_driver.c: 59: if ((y > 3) || (x > 19))
  1214  0011A6  0E04               	movlw	4
  1215  0011A8  0100               	movlb	0	; () banked
  1216  0011AA  5D65               	subwf	lcd_gotoxy@y& (0+255),w,b
  1217  0011AC  B0D8               	btfsc	status,0,c
  1218  0011AE  D032               	goto	l148
  1219                           
  1220                           ; BSR set to: 0
  1221  0011B0  0E13               	movlw	19
  1222  0011B2  0100               	movlb	0	; () banked
  1223  0011B4  6567               	cpfsgt	lcd_gotoxy@x& (0+255),b
  1224  0011B6  D001               	goto	l145
  1225  0011B8  D02D               	goto	l148
  1226  0011BA                     l145:
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;lcd_driver.c: 62: }
  1230                           ;lcd_driver.c: 63: lcd_x = x;
  1231  0011BA  C067  F046         	movff	lcd_gotoxy@x,_lcd_x
  1232                           
  1233                           ;lcd_driver.c: 64: lcd_y = y;
  1234  0011BE  C065  F047         	movff	lcd_gotoxy@y,_lcd_y
  1235                           
  1236                           ;lcd_driver.c: 65: addr = x;
  1237  0011C2  C067  F066         	movff	lcd_gotoxy@x,lcd_gotoxy@addr
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;lcd_driver.c: 66: addr += LCD_ROW_ADDRESS[y];
  1241  0011C6  0100               	movlb	0	; () banked
  1242  0011C8  5165               	movf	lcd_gotoxy@y& (0+255),w,b
  1243  0011CA  0D01               	mullw	1
  1244  0011CC  0E01               	movlw	low _LCD_ROW_ADDRESS
  1245  0011CE  24F3               	addwf	prodl,w,c
  1246  0011D0  6EF6               	movwf	tblptrl,c
  1247  0011D2  0E08               	movlw	high _LCD_ROW_ADDRESS
  1248  0011D4  20F4               	addwfc	prodh,w,c
  1249  0011D6  6EF7               	movwf	tblptrh,c
  1250  0011D8                     	if	0	;There are less than 3 active tblptr bytes
  1251  0011D8                     	endif
  1252  0011D8  0008               	tblrd		*
  1253  0011DA  50F5               	movf	tablat,w,c
  1254  0011DC  0100               	movlb	0	; () banked
  1255  0011DE  2766               	addwf	lcd_gotoxy@addr& (0+255),f,b
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;lcd_driver.c: 67: { _delay((unsigned long)((1000)*(4000000/4000000.0))); };
  1259  0011E0  0EFA               	movlw	250
  1260  0011E2                     u1937:
  1261  0011E2  F000               	nop	
  1262  0011E4  2EE8               	decfsz	wreg,f,c
  1263  0011E6  D7FD               	goto	u1937
  1264                           
  1265                           ;lcd_driver.c: 68: lcd_write_byte(addr, 0);
  1266  0011E8  0E00               	movlw	0
  1267  0011EA  0100               	movlb	0	; () banked
  1268  0011EC  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1269  0011EE  0100               	movlb	0	; () banked
  1270  0011F0  5166               	movf	lcd_gotoxy@addr& (0+255),w,b
  1271  0011F2  EC45  F00A         	call	_lcd_write_byte
  1272                           
  1273                           ;lcd_driver.c: 69: { _delay((unsigned long)((1000)*(4000000/4000000.0))); };
  1274  0011F6  0EFA               	movlw	250
  1275  0011F8                     u1947:
  1276  0011F8  F000               	nop	
  1277  0011FA  2EE8               	decfsz	wreg,f,c
  1278  0011FC  D7FD               	goto	u1947
  1279                           
  1280                           ;lcd_driver.c: 70: lcd_write_byte(addr, 0);
  1281  0011FE  0E00               	movlw	0
  1282  001200  0100               	movlb	0	; () banked
  1283  001202  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1284  001204  0100               	movlb	0	; () banked
  1285  001206  5166               	movf	lcd_gotoxy@addr& (0+255),w,b
  1286  001208  EC45  F00A         	call	_lcd_write_byte
  1287                           
  1288                           ;lcd_driver.c: 71: { _delay((unsigned long)((1000)*(4000000/4000000.0))); };
  1289  00120C  0EFA               	movlw	250
  1290  00120E                     u1957:
  1291  00120E  F000               	nop	
  1292  001210  2EE8               	decfsz	wreg,f,c
  1293  001212  D7FD               	goto	u1957
  1294  001214                     l148:
  1295  001214  0012               	return	
  1296  001216                     __end_of_lcd_gotoxy:
  1297                           	opt stack 0
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           prodh	equ	0xFF4
  1303                           prodl	equ	0xFF3
  1304                           intcon	equ	0xFF2
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function ___lwdiv *****************
  1310 ;; Defined at:
  1311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  dividend        2    0[BANK0 ] unsigned int 
  1314 ;;  divisor         2    2[BANK0 ] unsigned int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  quotient        2    5[BANK0 ] unsigned int 
  1317 ;;  counter         1    4[BANK0 ] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2    0[BANK0 ] unsigned int 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1327 ;;      Params:         0       4       0       0       0       0       0       0       0
  1328 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1330 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1331 ;;Total ram usage:        7 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    4
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_lcd_putnum
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text4
  1342  0010B6                     __ptext4:
  1343                           	opt stack 0
  1344  0010B6                     ___lwdiv:
  1345                           	opt stack 25
  1346                           
  1347                           ;incstack = 0
  1348  0010B6  0E00               	movlw	0
  1349  0010B8  0100               	movlb	0	; () banked
  1350  0010BA  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1351  0010BC  0E00               	movlw	0
  1352  0010BE  0100               	movlb	0	; () banked
  1353  0010C0  6F65               	movwf	___lwdiv@quotient& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356  0010C2  0100               	movlb	0	; () banked
  1357  0010C4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1358  0010C6  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
  1359  0010C8  B4D8               	btfsc	status,2,c
  1360  0010CA  D02C               	goto	l835
  1361                           
  1362                           ; BSR set to: 0
  1363  0010CC  0E01               	movlw	1
  1364  0010CE  0100               	movlb	0	; () banked
  1365  0010D0  6F64               	movwf	___lwdiv@counter& (0+255),b
  1366  0010D2  D006               	goto	l2096
  1367  0010D4                     l2094:
  1368                           
  1369                           ; BSR set to: 0
  1370  0010D4  0100               	movlb	0	; () banked
  1371  0010D6  90D8               	bcf	status,0,c
  1372  0010D8  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  1373  0010DA  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1374  0010DC  0100               	movlb	0	; () banked
  1375  0010DE  2B64               	incf	___lwdiv@counter& (0+255),f,b
  1376  0010E0                     l2096:
  1377                           
  1378                           ; BSR set to: 0
  1379  0010E0  0100               	movlb	0	; () banked
  1380  0010E2  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1381  0010E4  D7F7               	goto	l2094
  1382  0010E6                     l2098:
  1383                           
  1384                           ; BSR set to: 0
  1385  0010E6  0100               	movlb	0	; () banked
  1386  0010E8  90D8               	bcf	status,0,c
  1387  0010EA  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  1388  0010EC  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1389                           
  1390                           ; BSR set to: 0
  1391  0010EE  0100               	movlb	0	; () banked
  1392  0010F0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1393  0010F2  0100               	movlb	0	; () banked
  1394  0010F4  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  1395  0010F6  0100               	movlb	0	; () banked
  1396  0010F8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1397  0010FA  0100               	movlb	0	; () banked
  1398  0010FC  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1399  0010FE  A0D8               	btfss	status,0,c
  1400  001100  D00A               	goto	l2106
  1401                           
  1402                           ; BSR set to: 0
  1403  001102  0100               	movlb	0	; () banked
  1404  001104  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1405  001106  0100               	movlb	0	; () banked
  1406  001108  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  1407  00110A  0100               	movlb	0	; () banked
  1408  00110C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1409  00110E  0100               	movlb	0	; () banked
  1410  001110  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1411                           
  1412                           ; BSR set to: 0
  1413  001112  0100               	movlb	0	; () banked
  1414  001114  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  1415  001116                     l2106:
  1416                           
  1417                           ; BSR set to: 0
  1418  001116  0100               	movlb	0	; () banked
  1419  001118  90D8               	bcf	status,0,c
  1420  00111A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1421  00111C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  1422                           
  1423                           ; BSR set to: 0
  1424  00111E  0100               	movlb	0	; () banked
  1425  001120  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  1426  001122  D7E1               	goto	l2098
  1427  001124                     l835:
  1428                           
  1429                           ; BSR set to: 0
  1430  001124  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  1431  001128  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1432                           
  1433                           ; BSR set to: 0
  1434  00112C  0012               	return	
  1435  00112E                     __end_of___lwdiv:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           prodh	equ	0xFF4
  1442                           prodl	equ	0xFF3
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function _lcd_init *****************
  1449 ;; Defined at:
  1450 ;;		line 11 in file "lcd_driver.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;		None               void
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1466 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1467 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    6
  1471 ;; This function calls:
  1472 ;;		_lcd_write_byte
  1473 ;;		_lcd_write_nibble
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text5
  1480  000C84                     __ptext5:
  1481                           	opt stack 0
  1482  000C84                     _lcd_init:
  1483                           	opt stack 24
  1484                           
  1485                           ;lcd_driver.c: 15: { _delay((unsigned long)((15000)*(4000000/4000000.0))); };
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;incstack = 0
  1489  000C84  0E14               	movlw	20
  1490  000C86  0100               	movlb	0	; () banked
  1491  000C88  6F65               	movwf	??_lcd_init& (0+255),b
  1492  000C8A  0E7A               	movlw	122
  1493  000C8C                     u1967:
  1494  000C8C  2EE8               	decfsz	wreg,f,c
  1495  000C8E  D7FE               	goto	u1967
  1496  000C90  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1497  000C92  D7FC               	goto	u1967
  1498                           
  1499                           ;lcd_driver.c: 18: lcd_write_nibble(0x3, 0);
  1500  000C94  0E00               	movlw	0
  1501  000C96  0100               	movlb	0	; () banked
  1502  000C98  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1503  000C9A  0E03               	movlw	3
  1504  000C9C  EC1F  F007         	call	_lcd_write_nibble
  1505                           
  1506                           ;lcd_driver.c: 20: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1507  000CA0  0E07               	movlw	7
  1508  000CA2  0100               	movlb	0	; () banked
  1509  000CA4  6F65               	movwf	??_lcd_init& (0+255),b
  1510  000CA6  0E7D               	movlw	125
  1511  000CA8                     u1977:
  1512  000CA8  2EE8               	decfsz	wreg,f,c
  1513  000CAA  D7FE               	goto	u1977
  1514  000CAC  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1515  000CAE  D7FC               	goto	u1977
  1516  000CB0  F000               	nop	
  1517                           
  1518                           ;lcd_driver.c: 22: lcd_write_nibble(0x3, 0);
  1519  000CB2  0E00               	movlw	0
  1520  000CB4  0100               	movlb	0	; () banked
  1521  000CB6  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1522  000CB8  0E03               	movlw	3
  1523  000CBA  EC1F  F007         	call	_lcd_write_nibble
  1524                           
  1525                           ;lcd_driver.c: 24: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1526  000CBE  0E07               	movlw	7
  1527  000CC0  0100               	movlb	0	; () banked
  1528  000CC2  6F65               	movwf	??_lcd_init& (0+255),b
  1529  000CC4  0E7D               	movlw	125
  1530  000CC6                     u1987:
  1531  000CC6  2EE8               	decfsz	wreg,f,c
  1532  000CC8  D7FE               	goto	u1987
  1533  000CCA  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1534  000CCC  D7FC               	goto	u1987
  1535  000CCE  F000               	nop	
  1536                           
  1537                           ;lcd_driver.c: 26: lcd_write_nibble(0x3, 0);
  1538  000CD0  0E00               	movlw	0
  1539  000CD2  0100               	movlb	0	; () banked
  1540  000CD4  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1541  000CD6  0E03               	movlw	3
  1542  000CD8  EC1F  F007         	call	_lcd_write_nibble
  1543                           
  1544                           ;lcd_driver.c: 28: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1545  000CDC  0E07               	movlw	7
  1546  000CDE  0100               	movlb	0	; () banked
  1547  000CE0  6F65               	movwf	??_lcd_init& (0+255),b
  1548  000CE2  0E7D               	movlw	125
  1549  000CE4                     u1997:
  1550  000CE4  2EE8               	decfsz	wreg,f,c
  1551  000CE6  D7FE               	goto	u1997
  1552  000CE8  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1553  000CEA  D7FC               	goto	u1997
  1554  000CEC  F000               	nop	
  1555                           
  1556                           ;lcd_driver.c: 30: lcd_write_nibble(0x2, 0);
  1557  000CEE  0E00               	movlw	0
  1558  000CF0  0100               	movlb	0	; () banked
  1559  000CF2  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1560  000CF4  0E02               	movlw	2
  1561  000CF6  EC1F  F007         	call	_lcd_write_nibble
  1562                           
  1563                           ;lcd_driver.c: 39: lcd_write_byte(0x28, 0);
  1564  000CFA  0E00               	movlw	0
  1565  000CFC  0100               	movlb	0	; () banked
  1566  000CFE  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1567  000D00  0E28               	movlw	40
  1568  000D02  EC45  F00A         	call	_lcd_write_byte
  1569                           
  1570                           ;lcd_driver.c: 40: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1571  000D06  0E07               	movlw	7
  1572  000D08  0100               	movlb	0	; () banked
  1573  000D0A  6F65               	movwf	??_lcd_init& (0+255),b
  1574  000D0C  0E7D               	movlw	125
  1575  000D0E                     u2007:
  1576  000D0E  2EE8               	decfsz	wreg,f,c
  1577  000D10  D7FE               	goto	u2007
  1578  000D12  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1579  000D14  D7FC               	goto	u2007
  1580  000D16  F000               	nop	
  1581                           
  1582                           ;lcd_driver.c: 42: lcd_write_byte(0x0c, 0);
  1583  000D18  0E00               	movlw	0
  1584  000D1A  0100               	movlb	0	; () banked
  1585  000D1C  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1586  000D1E  0E0C               	movlw	12
  1587  000D20  EC45  F00A         	call	_lcd_write_byte
  1588                           
  1589                           ;lcd_driver.c: 43: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1590  000D24  0E07               	movlw	7
  1591  000D26  0100               	movlb	0	; () banked
  1592  000D28  6F65               	movwf	??_lcd_init& (0+255),b
  1593  000D2A  0E7D               	movlw	125
  1594  000D2C                     u2017:
  1595  000D2C  2EE8               	decfsz	wreg,f,c
  1596  000D2E  D7FE               	goto	u2017
  1597  000D30  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1598  000D32  D7FC               	goto	u2017
  1599  000D34  F000               	nop	
  1600                           
  1601                           ;lcd_driver.c: 45: lcd_write_byte(0x01, 0);
  1602  000D36  0E00               	movlw	0
  1603  000D38  0100               	movlb	0	; () banked
  1604  000D3A  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1605  000D3C  0E01               	movlw	1
  1606  000D3E  EC45  F00A         	call	_lcd_write_byte
  1607                           
  1608                           ;lcd_driver.c: 46: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1609  000D42  0E07               	movlw	7
  1610  000D44  0100               	movlb	0	; () banked
  1611  000D46  6F65               	movwf	??_lcd_init& (0+255),b
  1612  000D48  0E7D               	movlw	125
  1613  000D4A                     u2027:
  1614  000D4A  2EE8               	decfsz	wreg,f,c
  1615  000D4C  D7FE               	goto	u2027
  1616  000D4E  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1617  000D50  D7FC               	goto	u2027
  1618  000D52  F000               	nop	
  1619                           
  1620                           ;lcd_driver.c: 48: lcd_write_byte(0x6, 0);
  1621  000D54  0E00               	movlw	0
  1622  000D56  0100               	movlb	0	; () banked
  1623  000D58  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1624  000D5A  0E06               	movlw	6
  1625  000D5C  EC45  F00A         	call	_lcd_write_byte
  1626                           
  1627                           ;lcd_driver.c: 49: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1628  000D60  0E07               	movlw	7
  1629  000D62  0100               	movlb	0	; () banked
  1630  000D64  6F65               	movwf	??_lcd_init& (0+255),b
  1631  000D66  0E7D               	movlw	125
  1632  000D68                     u2037:
  1633  000D68  2EE8               	decfsz	wreg,f,c
  1634  000D6A  D7FE               	goto	u2037
  1635  000D6C  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1636  000D6E  D7FC               	goto	u2037
  1637  000D70  F000               	nop	
  1638  000D72  0012               	return	
  1639  000D74                     __end_of_lcd_init:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           intcon	equ	0xFF2
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _lcd_write_byte *****************
  1653 ;; Defined at:
  1654 ;;		line 185 in file "lcd_driver.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  byte            1    wreg     unsigned char 
  1657 ;;  is_data         1    3[BANK0 ] unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  byte            1    4[BANK0 ] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1669 ;;      Params:         0       1       0       0       0       0       0       0       0
  1670 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1672 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1673 ;;Total ram usage:        2 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    5
  1676 ;; This function calls:
  1677 ;;		_lcd_write_nibble
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;;		_lcd_init
  1681 ;;		_lcd_gotoxy
  1682 ;;		_lcd_putnum
  1683 ;;		_lcd_puts
  1684 ;;		_lcd_put_blank
  1685 ;;		_lcd_puts_const
  1686 ;;		_lcd_set_cgram
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text6
  1691  00148A                     __ptext6:
  1692                           	opt stack 0
  1693  00148A                     _lcd_write_byte:
  1694                           	opt stack 25
  1695                           
  1696                           ;incstack = 0
  1697                           ;lcd_write_byte@byte stored from wreg
  1698  00148A  0100               	movlb	0	; () banked
  1699  00148C  6F64               	movwf	lcd_write_byte@byte& (0+255),b
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;lcd_driver.c: 188: lcd_write_nibble(byte >> 4, is_data);
  1703  00148E  C063  F060         	movff	lcd_write_byte@is_data,lcd_write_nibble@is_data
  1704  001492  0100               	movlb	0	; () banked
  1705  001494  3964               	swapf	lcd_write_byte@byte& (0+255),w,b
  1706  001496  0B0F               	andlw	15
  1707  001498  EC1F  F007         	call	_lcd_write_nibble
  1708                           
  1709                           ;lcd_driver.c: 189: lcd_write_nibble(byte, is_data);
  1710  00149C  C063  F060         	movff	lcd_write_byte@is_data,lcd_write_nibble@is_data
  1711  0014A0  0100               	movlb	0	; () banked
  1712  0014A2  5164               	movf	lcd_write_byte@byte& (0+255),w,b
  1713  0014A4  EC1F  F007         	call	_lcd_write_nibble
  1714  0014A8  0012               	return	
  1715  0014AA                     __end_of_lcd_write_byte:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           prodh	equ	0xFF4
  1722                           prodl	equ	0xFF3
  1723                           intcon	equ	0xFF2
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function _lcd_write_nibble *****************
  1729 ;; Defined at:
  1730 ;;		line 176 in file "lcd_driver.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  nibble          1    wreg     unsigned char 
  1733 ;;  is_data         1    0[BANK0 ] unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  nibble          1    2[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;		None               void
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1745 ;;      Params:         0       1       0       0       0       0       0       0       0
  1746 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1747 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1748 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1749 ;;Total ram usage:        3 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    4
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_lcd_init
  1756 ;;		_lcd_write_byte
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text7
  1761  000E3E                     __ptext7:
  1762                           	opt stack 0
  1763  000E3E                     _lcd_write_nibble:
  1764                           	opt stack 25
  1765                           
  1766                           ;incstack = 0
  1767                           ;lcd_write_nibble@nibble stored from wreg
  1768  000E3E  0100               	movlb	0	; () banked
  1769  000E40  6F62               	movwf	lcd_write_nibble@nibble& (0+255),b
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;lcd_driver.c: 179: { LATDbits.LATD2 = is_data; };
  1773  000E42  0100               	movlb	0	; () banked
  1774  000E44  B160               	btfsc	lcd_write_nibble@is_data& (0+255),0,b
  1775  000E46  D002               	bra	u1555
  1776  000E48  948C               	bcf	3980,2,c	;volatile
  1777  000E4A  D001               	bra	u1556
  1778  000E4C                     u1555:
  1779  000E4C  848C               	bsf	3980,2,c	;volatile
  1780  000E4E                     u1556:
  1781                           
  1782                           ;lcd_driver.c: 180: { _delay((unsigned long)((100)*(4000000/4000000.0))); };
  1783  000E4E  0E21               	movlw	33
  1784  000E50                     u2047:
  1785  000E50  2EE8               	decfsz	wreg,f,c
  1786  000E52  D7FE               	goto	u2047
  1787  000E54  F000               	nop	
  1788                           
  1789                           ;lcd_driver.c: 181: { LATDbits.LATD4 = nibble & 1; LATDbits.LATD5 = (nibble & 2) >> 1; L
      +                          ATDbits.LATD6 = (nibble & 4) >> 2; LATDbits.LATD7 = (nibble & 8) >> 3; };
  1790  000E56  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1791  000E5A  0E01               	movlw	1
  1792  000E5C  0100               	movlb	0	; () banked
  1793  000E5E  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1794  000E60  0100               	movlb	0	; () banked
  1795  000E62  3B61               	swapf	??_lcd_write_nibble& (0+255),f,b
  1796  000E64  508C               	movf	3980,w,c	;volatile
  1797  000E66  0100               	movlb	0	; () banked
  1798  000E68  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1799  000E6A  0BEF               	andlw	-17
  1800  000E6C  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1801  000E6E  6E8C               	movwf	3980,c	;volatile
  1802                           
  1803                           ; BSR set to: 0
  1804  000E70  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1805  000E74  0100               	movlb	0	; () banked
  1806  000E76  90D8               	bcf	status,0,c
  1807  000E78  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1808  000E7A  0E01               	movlw	1
  1809  000E7C  0100               	movlb	0	; () banked
  1810  000E7E  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1811  000E80  0100               	movlb	0	; () banked
  1812  000E82  3B61               	swapf	??_lcd_write_nibble& (0+255),f,b
  1813  000E84  4761               	rlncf	??_lcd_write_nibble& (0+255),f,b
  1814  000E86  508C               	movf	3980,w,c	;volatile
  1815  000E88  0100               	movlb	0	; () banked
  1816  000E8A  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1817  000E8C  0BDF               	andlw	-33
  1818  000E8E  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1819  000E90  6E8C               	movwf	3980,c	;volatile
  1820                           
  1821                           ; BSR set to: 0
  1822  000E92  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1823  000E96  0100               	movlb	0	; () banked
  1824  000E98  90D8               	bcf	status,0,c
  1825  000E9A  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1826  000E9C  0100               	movlb	0	; () banked
  1827  000E9E  90D8               	bcf	status,0,c
  1828  000EA0  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1829  000EA2  0E01               	movlw	1
  1830  000EA4  0100               	movlb	0	; () banked
  1831  000EA6  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1832  000EA8  0100               	movlb	0	; () banked
  1833  000EAA  3B61               	swapf	??_lcd_write_nibble& (0+255),f,b
  1834  000EAC  4761               	rlncf	??_lcd_write_nibble& (0+255),f,b
  1835  000EAE  4761               	rlncf	??_lcd_write_nibble& (0+255),f,b
  1836  000EB0  508C               	movf	3980,w,c	;volatile
  1837  000EB2  0100               	movlb	0	; () banked
  1838  000EB4  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1839  000EB6  0BBF               	andlw	-65
  1840  000EB8  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1841  000EBA  6E8C               	movwf	3980,c	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844  000EBC  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1845  000EC0  0100               	movlb	0	; () banked
  1846  000EC2  90D8               	bcf	status,0,c
  1847  000EC4  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1848  000EC6  0100               	movlb	0	; () banked
  1849  000EC8  90D8               	bcf	status,0,c
  1850  000ECA  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1851  000ECC  0100               	movlb	0	; () banked
  1852  000ECE  90D8               	bcf	status,0,c
  1853  000ED0  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1854  000ED2  0E01               	movlw	1
  1855  000ED4  0100               	movlb	0	; () banked
  1856  000ED6  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1857  000ED8  0100               	movlb	0	; () banked
  1858  000EDA  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1859  000EDC  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1860  000EDE  508C               	movf	3980,w,c	;volatile
  1861  000EE0  0100               	movlb	0	; () banked
  1862  000EE2  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1863  000EE4  0B7F               	andlw	-129
  1864  000EE6  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1865  000EE8  6E8C               	movwf	3980,c	;volatile
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;lcd_driver.c: 182: { LATDbits.LATD3 = 1; { _delay((unsigned long)((200)*(4000000/400000
      +                          0.0))); }; LATDbits.LATD3 = 0; { _delay((unsigned long)((500)*(4000000/4000000.0))); }; 
      +                          };
  1869  000EEA  868C               	bsf	3980,3,c	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872  000EEC  0E42               	movlw	66
  1873  000EEE                     u2057:
  1874  000EEE  2EE8               	decfsz	wreg,f,c
  1875  000EF0  D7FE               	goto	u2057
  1876  000EF2  D000               	nop2		;nop
  1877  000EF4  968C               	bcf	3980,3,c	;volatile
  1878  000EF6  0EA6               	movlw	166
  1879  000EF8                     u2067:
  1880  000EF8  2EE8               	decfsz	wreg,f,c
  1881  000EFA  D7FE               	goto	u2067
  1882  000EFC  D000               	nop2		;nop
  1883  000EFE  0012               	return	
  1884  000F00                     __end_of_lcd_write_nibble:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           intcon	equ	0xFF2
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _SetDCPWM1 *****************
  1898 ;; Defined at:
  1899 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  1904 ;; Return value:  Size  Location     Type
  1905 ;;		None               void
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1913 ;;      Params:         0       2       0       0       0       0       0       0       0
  1914 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1915 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1916 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1917 ;;Total ram usage:        6 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    4
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text8
  1928  0013DA                     __ptext8:
  1929                           	opt stack 0
  1930  0013DA                     _SetDCPWM1:
  1931                           	opt stack 26
  1932                           
  1933                           ;incstack = 0
  1934  0013DA  0100               	movlb	0	; () banked
  1935  0013DC  C060  F062         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  1936  0013E0  0100               	movlb	0	; () banked
  1937  0013E2  C061  F063         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  1938  0013E6  0E06               	movlw	6
  1939  0013E8                     u1715:
  1940  0013E8  90D8               	bcf	status,0,c
  1941  0013EA  0100               	movlb	0	; () banked
  1942  0013EC  3762               	rlcf	??_SetDCPWM1& (0+255),f,b
  1943  0013EE  3763               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  1944  0013F0  2EE8               	decfsz	wreg,f,c
  1945  0013F2  D7FA               	goto	u1715
  1946  0013F4  C062  F064         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  1947  0013F8  C063  F065         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  1948                           
  1949                           ; BSR set to: 0
  1950  0013FC  C065  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  1951  001400  C064  F062         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  1952  001404  0100               	movlb	0	; () banked
  1953  001406  90D8               	bcf	status,0,c
  1954  001408  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  1955  00140A  0100               	movlb	0	; () banked
  1956  00140C  90D8               	bcf	status,0,c
  1957  00140E  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  1958  001410  0E30               	movlw	48
  1959  001412  0100               	movlb	0	; () banked
  1960  001414  1762               	andwf	??_SetDCPWM1& (0+255),f,b
  1961  001416  50BD               	movf	4029,w,c	;volatile
  1962  001418  0BCF               	andlw	207
  1963  00141A  0100               	movlb	0	; () banked
  1964  00141C  1162               	iorwf	??_SetDCPWM1& (0+255),w,b
  1965  00141E  6EBD               	movwf	4029,c	;volatile
  1966                           
  1967                           ; BSR set to: 0
  1968  001420  0012               	return	
  1969  001422                     __end_of_SetDCPWM1:
  1970                           	opt stack 0
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           prodh	equ	0xFF4
  1976                           prodl	equ	0xFF3
  1977                           intcon	equ	0xFF2
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _OpenUSART *****************
  1983 ;; Defined at:
  1984 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  config          1    wreg     unsigned char 
  1987 ;;  spbrg           2    0[BANK0 ] unsigned int 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  config          1    5[BANK0 ] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		wreg, status,2
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1999 ;;      Params:         0       2       0       0       0       0       0       0       0
  2000 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2001 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2002 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2003 ;;Total ram usage:        6 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    4
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text9
  2014  001036                     __ptext9:
  2015                           	opt stack 0
  2016  001036                     _OpenUSART:
  2017                           	opt stack 26
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;incstack = 0
  2021                           ;OpenUSART@config stored from wreg
  2022  001036  0100               	movlb	0	; () banked
  2023  001038  6F65               	movwf	OpenUSART@config& (0+255),b
  2024                           
  2025                           ; BSR set to: 0
  2026  00103A  0E00               	movlw	0
  2027  00103C  6EAC               	movwf	4012,c	;volatile
  2028  00103E  0E00               	movlw	0
  2029  001040  6EAB               	movwf	4011,c	;volatile
  2030                           
  2031                           ; BSR set to: 0
  2032  001042  0100               	movlb	0	; () banked
  2033  001044  B165               	btfsc	OpenUSART@config& (0+255),0,b
  2034                           
  2035                           ; BSR set to: 0
  2036  001046  88AC               	bsf	4012,4,c	;volatile
  2037                           
  2038                           ; BSR set to: 0
  2039                           
  2040                           ; BSR set to: 0
  2041  001048  0100               	movlb	0	; () banked
  2042  00104A  A365               	btfss	OpenUSART@config& (0+255),1,b
  2043  00104C  D002               	goto	l2120
  2044                           
  2045                           ; BSR set to: 0
  2046  00104E  8CAC               	bsf	4012,6,c	;volatile
  2047  001050  8CAB               	bsf	4011,6,c	;volatile
  2048  001052                     l2120:
  2049                           
  2050                           ; BSR set to: 0
  2051  001052  0100               	movlb	0	; () banked
  2052  001054  B565               	btfsc	OpenUSART@config& (0+255),2,b
  2053                           
  2054                           ; BSR set to: 0
  2055  001056  8EAC               	bsf	4012,7,c	;volatile
  2056                           
  2057                           ; BSR set to: 0
  2058                           
  2059                           ; BSR set to: 0
  2060  001058  0100               	movlb	0	; () banked
  2061  00105A  A765               	btfss	OpenUSART@config& (0+255),3,b
  2062  00105C  D002               	goto	l241
  2063                           
  2064                           ; BSR set to: 0
  2065  00105E  88AB               	bsf	4011,4,c	;volatile
  2066  001060  D001               	goto	l2128
  2067  001062                     l241:
  2068                           
  2069                           ; BSR set to: 0
  2070  001062  8AAB               	bsf	4011,5,c	;volatile
  2071  001064                     l2128:
  2072                           
  2073                           ; BSR set to: 0
  2074  001064  0100               	movlb	0	; () banked
  2075  001066  B965               	btfsc	OpenUSART@config& (0+255),4,b
  2076                           
  2077                           ; BSR set to: 0
  2078  001068  84AC               	bsf	4012,2,c	;volatile
  2079                           
  2080                           ; BSR set to: 0
  2081  00106A  989E               	bcf	3998,4,c	;volatile
  2082                           
  2083                           ; BSR set to: 0
  2084  00106C  0100               	movlb	0	; () banked
  2085  00106E  BB65               	btfsc	OpenUSART@config& (0+255),5,b
  2086                           
  2087                           ; BSR set to: 0
  2088  001070  86AB               	bsf	4011,3,c	;volatile
  2089                           
  2090                           ; BSR set to: 0
  2091                           
  2092                           ; BSR set to: 0
  2093  001072  0100               	movlb	0	; () banked
  2094  001074  AD65               	btfss	OpenUSART@config& (0+255),6,b
  2095  001076  D002               	goto	l245
  2096                           
  2097                           ; BSR set to: 0
  2098  001078  8A9D               	bsf	3997,5,c	;volatile
  2099  00107A  D001               	goto	l246
  2100  00107C                     l245:
  2101                           
  2102                           ; BSR set to: 0
  2103  00107C  9A9D               	bcf	3997,5,c	;volatile
  2104  00107E                     l246:
  2105                           
  2106                           ; BSR set to: 0
  2107  00107E  9A9E               	bcf	3998,5,c	;volatile
  2108                           
  2109                           ; BSR set to: 0
  2110  001080  0100               	movlb	0	; () banked
  2111  001082  AF65               	btfss	OpenUSART@config& (0+255),7,b
  2112  001084  D002               	goto	l247
  2113                           
  2114                           ; BSR set to: 0
  2115  001086  889D               	bsf	3997,4,c	;volatile
  2116  001088  D001               	goto	l248
  2117  00108A                     l247:
  2118                           
  2119                           ; BSR set to: 0
  2120  00108A  989D               	bcf	3997,4,c	;volatile
  2121  00108C                     l248:
  2122                           
  2123                           ; BSR set to: 0
  2124  00108C  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2125                           
  2126                           ; BSR set to: 0
  2127  001090  0100               	movlb	0	; () banked
  2128  001092  C061  F062         	movff	OpenUSART@spbrg+1,??_OpenUSART
  2129  001096  C062  F063         	movff	??_OpenUSART,??_OpenUSART+1
  2130  00109A  0100               	movlb	0	; () banked
  2131  00109C  6B64               	clrf	(??_OpenUSART+2)& (0+255),b
  2132  00109E  0100               	movlb	0	; () banked
  2133  0010A0  5163               	movf	(??_OpenUSART+1)& (0+255),w,b
  2134  0010A2  6EB0               	movwf	4016,c	;volatile
  2135                           
  2136                           ; BSR set to: 0
  2137  0010A4  8AAC               	bsf	4012,5,c	;volatile
  2138                           
  2139                           ; BSR set to: 0
  2140  0010A6  8EAB               	bsf	4011,7,c	;volatile
  2141                           
  2142                           ; BSR set to: 0
  2143  0010A8  9C94               	bcf	3988,6,c	;volatile
  2144                           
  2145                           ; BSR set to: 0
  2146  0010AA  8E94               	bsf	3988,7,c	;volatile
  2147                           
  2148                           ; BSR set to: 0
  2149  0010AC  B8AC               	btfsc	4012,4,c	;volatile
  2150                           
  2151                           ; BSR set to: 0
  2152  0010AE  BEAC               	btfsc	4012,7,c	;volatile
  2153  0010B0  D001               	goto	l250
  2154                           
  2155                           ; BSR set to: 0
  2156  0010B2  8C94               	bsf	3988,6,c	;volatile
  2157  0010B4                     l250:
  2158                           
  2159                           ; BSR set to: 0
  2160  0010B4  0012               	return	
  2161  0010B6                     __end_of_OpenUSART:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           prodh	equ	0xFF4
  2168                           prodl	equ	0xFF3
  2169                           intcon	equ	0xFF2
  2170                           postinc0	equ	0xFEE
  2171                           wreg	equ	0xFE8
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _OpenPWM1 *****************
  2175 ;; Defined at:
  2176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  period          1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  period          1    0[BANK0 ] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0
  2191 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2193 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2194 ;;Total ram usage:        1 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    4
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text10
  2205  0014E8                     __ptext10:
  2206                           	opt stack 0
  2207  0014E8                     _OpenPWM1:
  2208                           	opt stack 26
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;incstack = 0
  2212                           ;OpenPWM1@period stored from wreg
  2213  0014E8  0100               	movlb	0	; () banked
  2214  0014EA  6F60               	movwf	OpenPWM1@period& (0+255),b
  2215                           
  2216                           ; BSR set to: 0
  2217  0014EC  0E0C               	movlw	12
  2218  0014EE  12BD               	iorwf	4029,f,c	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221  0014F0  9494               	bcf	3988,2,c	;volatile
  2222                           
  2223                           ; BSR set to: 0
  2224  0014F2  94CA               	bcf	4042,2,c	;volatile
  2225                           
  2226                           ; BSR set to: 0
  2227  0014F4  C060  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2228                           
  2229                           ; BSR set to: 0
  2230  0014F8  84CA               	bsf	4042,2,c	;volatile
  2231                           
  2232                           ; BSR set to: 0
  2233  0014FA  0012               	return	
  2234  0014FC                     __end_of_OpenPWM1:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           intcon	equ	0xFF2
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _ISR *****************
  2248 ;; Defined at:
  2249 ;;		line 96 in file "main.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2265 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2266 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2267 ;;Total ram usage:       14 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		_ReadUSART
  2272 ;;		_atoi
  2273 ;;		_itoa
  2274 ;;		_putsUSART
  2275 ;;		_strncpy
  2276 ;; This function is called by:
  2277 ;;		Interrupt level 2
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	intcode
  2282  000008                     __pintcode:
  2283                           	opt stack 0
  2284  000008                     _ISR:
  2285                           	opt stack 23
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;incstack = 0
  2289  000008  CFFA F01D          	movff	pclath,??_ISR
  2290  00000C  CFFB F01E          	movff	pclatu,??_ISR+1
  2291  000010  CFE9 F01F          	movff	fsr0l,??_ISR+2
  2292  000014  ED20  F004         	call	int_func,f	;refresh shadow registers
  2293                           pclatu	equ	0xFFB
  2294                           pclath	equ	0xFFA
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           intcon	equ	0xFF2
  2302                           postinc0	equ	0xFEE
  2303                           fsr0l	equ	0xFE9
  2304                           wreg	equ	0xFE8
  2305                           status	equ	0xFD8
  2306                           
  2307                           	psect	intcode_body
  2308  000840                     __pintcode_body:
  2309                           	opt stack 23
  2310  000840                     int_func:
  2311                           	opt stack 23
  2312  000840  0006               	pop		; remove dummy address from shadow register refresh
  2313  000842  CFEA F020          	movff	fsr0h,??_ISR+3
  2314  000846  CFE1 F021          	movff	fsr1l,??_ISR+4
  2315  00084A  CFE2 F022          	movff	fsr1h,??_ISR+5
  2316  00084E  CFD9 F023          	movff	fsr2l,??_ISR+6
  2317  000852  CFDA F024          	movff	fsr2h,??_ISR+7
  2318  000856  CFF3 F025          	movff	prodl,??_ISR+8
  2319  00085A  CFF4 F026          	movff	prodh,??_ISR+9
  2320  00085E  CFF6 F027          	movff	tblptrl,??_ISR+10
  2321  000862  CFF7 F028          	movff	tblptrh,??_ISR+11
  2322  000866  CFF8 F029          	movff	tblptru,??_ISR+12
  2323  00086A  CFF5 F02A          	movff	tablat,??_ISR+13
  2324                           
  2325                           ;main.c: 99: if(PIR1bits.RCIF == 1)
  2326  00086E  AA9E               	btfss	3998,5,c	;volatile
  2327  000870  D155               	goto	i2l97
  2328                           
  2329                           ;main.c: 100: {
  2330                           ;main.c: 101: if(i<200)
  2331  000872  5040               	movf	_i+1,w,c
  2332  000874  0A80               	xorlw	128
  2333  000876  6EF3               	movwf	prodl,c
  2334  000878  0E80               	movlw	128
  2335  00087A  5CF3               	subwf	prodl,w,c
  2336  00087C  0EC8               	movlw	200
  2337  00087E  B4D8               	btfsc	status,2,c
  2338  000880  5C3F               	subwf	_i,w,c
  2339  000882  B0D8               	btfsc	status,0,c
  2340  000884  D127               	goto	i2l1992
  2341                           
  2342                           ;main.c: 102: {
  2343                           ;main.c: 103: MessageBuffer[i] = ReadUSART();
  2344  000886  0101               	movlb	1	; () banked
  2345  000888  0E00               	movlw	low _MessageBuffer
  2346  00088A  243F               	addwf	_i,w,c
  2347  00088C  6ED9               	movwf	fsr2l,c
  2348  00088E  0101               	movlb	1	; () banked
  2349  000890  0E01               	movlw	high _MessageBuffer
  2350  000892  2040               	addwfc	_i+1,w,c
  2351  000894  6EDA               	movwf	fsr2h,c
  2352  000896  EC65  F00A         	call	_ReadUSART	;wreg free
  2353  00089A  6EDF               	movwf	indf2,c
  2354                           
  2355                           ;main.c: 104: if(MessageBuffer[i] == 0x0D)
  2356  00089C  0101               	movlb	1	; () banked
  2357  00089E  0E00               	movlw	low _MessageBuffer
  2358  0008A0  243F               	addwf	_i,w,c
  2359  0008A2  6ED9               	movwf	fsr2l,c
  2360  0008A4  0101               	movlb	1	; () banked
  2361  0008A6  0E01               	movlw	high _MessageBuffer
  2362  0008A8  2040               	addwfc	_i+1,w,c
  2363  0008AA  6EDA               	movwf	fsr2h,c
  2364  0008AC  0E0D               	movlw	13
  2365  0008AE  62DF               	cpfseq	indf2,c
  2366  0008B0  D05C               	goto	i2l1940
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;main.c: 105: {
  2370                           ;main.c: 106: strncpy(DC_str, MessageBuffer,4);
  2371  0008B2  0E00               	movlw	high _DC_str
  2372  0008B4  6E02               	movwf	strncpy@to+1,c
  2373  0008B6  0E48               	movlw	low _DC_str
  2374  0008B8  6E01               	movwf	strncpy@to,c
  2375  0008BA  0101               	movlb	1	; () banked
  2376  0008BC  0E01               	movlw	high _MessageBuffer
  2377  0008BE  6E04               	movwf	strncpy@from+1,c
  2378  0008C0  0101               	movlb	1	; () banked
  2379  0008C2  0E00               	movlw	low _MessageBuffer
  2380  0008C4  6E03               	movwf	strncpy@from,c
  2381  0008C6  0E00               	movlw	0
  2382  0008C8  6E06               	movwf	strncpy@size+1,c
  2383  0008CA  0E04               	movlw	4
  2384  0008CC  6E05               	movwf	strncpy@size,c
  2385  0008CE  EC3A  F009         	call	_strncpy	;wreg free
  2386                           
  2387                           ;main.c: 107: k = atoi(DC_str);
  2388  0008D2  0E00               	movlw	high _DC_str
  2389  0008D4  6E08               	movwf	atoi@s+1,c
  2390  0008D6  0E48               	movlw	low _DC_str
  2391  0008D8  6E07               	movwf	atoi@s,c
  2392  0008DA  ECBA  F006         	call	_atoi	;wreg free
  2393  0008DE  C007  F041         	movff	?_atoi,_k
  2394  0008E2  C008  F042         	movff	?_atoi+1,_k+1
  2395                           
  2396                           ;main.c: 108: if(k >= 0 && k <= 1023)
  2397  0008E6  BE42               	btfsc	_k+1,7,c
  2398  0008E8  D021               	goto	i2l1928
  2399  0008EA  5042               	movf	_k+1,w,c
  2400  0008EC  0A80               	xorlw	128
  2401  0008EE  6EF3               	movwf	prodl,c
  2402  0008F0  0E84               	movlw	132
  2403  0008F2  5CF3               	subwf	prodl,w,c
  2404  0008F4  0E00               	movlw	0
  2405  0008F6  B4D8               	btfsc	status,2,c
  2406  0008F8  5C41               	subwf	_k,w,c
  2407  0008FA  B0D8               	btfsc	status,0,c
  2408  0008FC  D017               	goto	i2l1928
  2409                           
  2410                           ;main.c: 109: {
  2411                           ;main.c: 110: DutyCycle = k;
  2412  0008FE  C041  F083         	movff	_k,_DutyCycle
  2413  000902  C042  F084         	movff	_k+1,_DutyCycle+1
  2414                           
  2415                           ;main.c: 111: putsUSART("Modificado el SetPoint a: ");
  2416  000906  0E08               	movlw	high STR_2
  2417  000908  6E1A               	movwf	putsUSART@data+1,c
  2418  00090A  0E05               	movlw	low STR_2
  2419  00090C  6E19               	movwf	putsUSART@data,c
  2420  00090E  EC69  F009         	call	_putsUSART	;wreg free
  2421                           
  2422                           ;main.c: 112: putsUSART(DC_str);
  2423  000912  0E00               	movlw	high _DC_str
  2424  000914  6E1A               	movwf	putsUSART@data+1,c
  2425  000916  0E48               	movlw	low _DC_str
  2426  000918  6E19               	movwf	putsUSART@data,c
  2427  00091A  EC69  F009         	call	_putsUSART	;wreg free
  2428                           
  2429                           ;main.c: 113: putsUSART("\n");
  2430  00091E  0E08               	movlw	high (STR_4+15)
  2431  000920  6E1A               	movwf	putsUSART@data+1,c
  2432  000922  0E2F               	movlw	low (STR_4+15)
  2433  000924  6E19               	movwf	putsUSART@data,c
  2434  000926  EC69  F009         	call	_putsUSART	;wreg free
  2435                           
  2436                           ;main.c: 114: }
  2437  00092A  D014               	goto	i2l1934
  2438  00092C                     i2l1928:
  2439                           
  2440                           ;main.c: 115: else
  2441                           ;main.c: 116: {
  2442                           ;main.c: 117: putsUSART("Error maquinola\n");
  2443  00092C  0E08               	movlw	high STR_4
  2444  00092E  6E1A               	movwf	putsUSART@data+1,c
  2445  000930  0E20               	movlw	low STR_4
  2446  000932  6E19               	movwf	putsUSART@data,c
  2447  000934  EC69  F009         	call	_putsUSART	;wreg free
  2448  000938  D00D               	goto	i2l1934
  2449  00093A                     i2l1930:
  2450                           
  2451                           ;main.c: 121: MessageBuffer[i] = 0x00;
  2452  00093A  0101               	movlb	1	; () banked
  2453  00093C  0E00               	movlw	low _MessageBuffer
  2454  00093E  243F               	addwf	_i,w,c
  2455  000940  6ED9               	movwf	fsr2l,c
  2456  000942  0101               	movlb	1	; () banked
  2457  000944  0E01               	movlw	high _MessageBuffer
  2458  000946  2040               	addwfc	_i+1,w,c
  2459  000948  6EDA               	movwf	fsr2h,c
  2460  00094A  0E00               	movlw	0
  2461  00094C  6EDF               	movwf	indf2,c
  2462                           
  2463                           ; BSR set to: 1
  2464  00094E  063F               	decf	_i,f,c
  2465  000950  A0D8               	btfss	status,0,c
  2466  000952  0640               	decf	_i+1,f,c
  2467  000954                     i2l1934:
  2468  000954  5040               	movf	_i+1,w,c
  2469  000956  0A80               	xorlw	128
  2470  000958  6EF3               	movwf	prodl,c
  2471  00095A  0E80               	movlw	128
  2472  00095C  5CF3               	subwf	prodl,w,c
  2473  00095E  0E01               	movlw	1
  2474  000960  B4D8               	btfsc	status,2,c
  2475  000962  5C3F               	subwf	_i,w,c
  2476  000964  B0D8               	btfsc	status,0,c
  2477  000966  D7E9               	goto	i2l1930
  2478  000968  D0D5               	goto	i2l2000
  2479  00096A                     i2l1940:
  2480                           
  2481                           ;main.c: 124: }
  2482                           ;main.c: 125: if(MessageBuffer[i] == 0x2B)
  2483  00096A  0101               	movlb	1	; () banked
  2484  00096C  0E00               	movlw	low _MessageBuffer
  2485  00096E  243F               	addwf	_i,w,c
  2486  000970  6ED9               	movwf	fsr2l,c
  2487  000972  0101               	movlb	1	; () banked
  2488  000974  0E01               	movlw	high _MessageBuffer
  2489  000976  2040               	addwfc	_i+1,w,c
  2490  000978  6EDA               	movwf	fsr2h,c
  2491  00097A  0E2B               	movlw	43
  2492  00097C  62DF               	cpfseq	indf2,c
  2493  00097E  D04D               	goto	i2l1964
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;main.c: 126: {
  2497                           ;main.c: 127: if(DutyCycle >= 0 && DutyCycle <= 1023)
  2498  000980  0E00               	movlw	0
  2499  000982  0100               	movlb	0	; () banked
  2500  000984  5D83               	subwf	_DutyCycle& (0+255),w,b
  2501  000986  0E04               	movlw	4
  2502  000988  0100               	movlb	0	; () banked
  2503  00098A  5984               	subwfb	(_DutyCycle+1)& (0+255),w,b
  2504  00098C  B0D8               	btfsc	status,0,c
  2505  00098E  D026               	goto	i2l1952
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;main.c: 128: {
  2509                           ;main.c: 129: DutyCycle++;
  2510  000990  0100               	movlb	0	; () banked
  2511  000992  4B83               	infsnz	_DutyCycle& (0+255),f,b
  2512  000994  2B84               	incf	(_DutyCycle+1)& (0+255),f,b
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;main.c: 131: putsUSART("Modificado el SetPoint a: ");
  2516  000996  0E08               	movlw	high STR_2
  2517  000998  6E1A               	movwf	putsUSART@data+1,c
  2518  00099A  0E05               	movlw	low STR_2
  2519  00099C  6E19               	movwf	putsUSART@data,c
  2520  00099E  EC69  F009         	call	_putsUSART	;wreg free
  2521                           
  2522                           ;main.c: 132: putsUSART(itoa(DutyCycle, DC_str, 10));
  2523  0009A2  0100               	movlb	0	; () banked
  2524  0009A4  C084  F012         	movff	_DutyCycle+1,itoa@buf+1
  2525  0009A8  0100               	movlb	0	; () banked
  2526  0009AA  C083  F011         	movff	_DutyCycle,itoa@buf
  2527  0009AE  0E00               	movlw	high _DC_str
  2528  0009B0  6E14               	movwf	itoa@val+1,c
  2529  0009B2  0E48               	movlw	low _DC_str
  2530  0009B4  6E13               	movwf	itoa@val,c
  2531  0009B6  0E00               	movlw	0
  2532  0009B8  6E16               	movwf	itoa@base+1,c
  2533  0009BA  0E0A               	movlw	10
  2534  0009BC  6E15               	movwf	itoa@base,c
  2535  0009BE  EC97  F009         	call	_itoa	;wreg free
  2536  0009C2  C011  F019         	movff	?_itoa,putsUSART@data
  2537  0009C6  C012  F01A         	movff	?_itoa+1,putsUSART@data+1
  2538  0009CA  EC69  F009         	call	_putsUSART	;wreg free
  2539                           
  2540                           ;main.c: 133: putsUSART("\n");
  2541  0009CE  0E08               	movlw	high (STR_4+15)
  2542  0009D0  6E1A               	movwf	putsUSART@data+1,c
  2543  0009D2  0E2F               	movlw	low (STR_4+15)
  2544  0009D4  6E19               	movwf	putsUSART@data,c
  2545  0009D6  EC69  F009         	call	_putsUSART	;wreg free
  2546                           
  2547                           ;main.c: 134: }
  2548  0009DA  D014               	goto	i2l1958
  2549  0009DC                     i2l1952:
  2550                           
  2551                           ;main.c: 135: else
  2552                           ;main.c: 136: {
  2553                           ;main.c: 137: putsUSART("Error maquinola\n");
  2554  0009DC  0E08               	movlw	high STR_4
  2555  0009DE  6E1A               	movwf	putsUSART@data+1,c
  2556  0009E0  0E20               	movlw	low STR_4
  2557  0009E2  6E19               	movwf	putsUSART@data,c
  2558  0009E4  EC69  F009         	call	_putsUSART	;wreg free
  2559  0009E8  D00D               	goto	i2l1958
  2560  0009EA                     i2l1954:
  2561                           
  2562                           ;main.c: 140: MessageBuffer[i] = 0x00;
  2563  0009EA  0101               	movlb	1	; () banked
  2564  0009EC  0E00               	movlw	low _MessageBuffer
  2565  0009EE  243F               	addwf	_i,w,c
  2566  0009F0  6ED9               	movwf	fsr2l,c
  2567  0009F2  0101               	movlb	1	; () banked
  2568  0009F4  0E01               	movlw	high _MessageBuffer
  2569  0009F6  2040               	addwfc	_i+1,w,c
  2570  0009F8  6EDA               	movwf	fsr2h,c
  2571  0009FA  0E00               	movlw	0
  2572  0009FC  6EDF               	movwf	indf2,c
  2573                           
  2574                           ; BSR set to: 1
  2575  0009FE  063F               	decf	_i,f,c
  2576  000A00  A0D8               	btfss	status,0,c
  2577  000A02  0640               	decf	_i+1,f,c
  2578  000A04                     i2l1958:
  2579  000A04  5040               	movf	_i+1,w,c
  2580  000A06  0A80               	xorlw	128
  2581  000A08  6EF3               	movwf	prodl,c
  2582  000A0A  0E80               	movlw	128
  2583  000A0C  5CF3               	subwf	prodl,w,c
  2584  000A0E  0E01               	movlw	1
  2585  000A10  B4D8               	btfsc	status,2,c
  2586  000A12  5C3F               	subwf	_i,w,c
  2587  000A14  B0D8               	btfsc	status,0,c
  2588  000A16  D7E9               	goto	i2l1954
  2589  000A18  D07D               	goto	i2l2000
  2590  000A1A                     i2l1964:
  2591                           
  2592                           ;main.c: 143: }
  2593                           ;main.c: 144: if(MessageBuffer[i] == 0x2D)
  2594  000A1A  0101               	movlb	1	; () banked
  2595  000A1C  0E00               	movlw	low _MessageBuffer
  2596  000A1E  243F               	addwf	_i,w,c
  2597  000A20  6ED9               	movwf	fsr2l,c
  2598  000A22  0101               	movlb	1	; () banked
  2599  000A24  0E01               	movlw	high _MessageBuffer
  2600  000A26  2040               	addwfc	_i+1,w,c
  2601  000A28  6EDA               	movwf	fsr2h,c
  2602  000A2A  0E2D               	movlw	45
  2603  000A2C  62DF               	cpfseq	indf2,c
  2604  000A2E  D04E               	goto	i2l1988
  2605                           
  2606                           ; BSR set to: 1
  2607                           ;main.c: 145: {
  2608                           ;main.c: 146: if(DutyCycle >= 0 && DutyCycle <= 1023)
  2609  000A30  0E00               	movlw	0
  2610  000A32  0100               	movlb	0	; () banked
  2611  000A34  5D83               	subwf	_DutyCycle& (0+255),w,b
  2612  000A36  0E04               	movlw	4
  2613  000A38  0100               	movlb	0	; () banked
  2614  000A3A  5984               	subwfb	(_DutyCycle+1)& (0+255),w,b
  2615  000A3C  B0D8               	btfsc	status,0,c
  2616  000A3E  D027               	goto	i2l1976
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;main.c: 147: {
  2620                           ;main.c: 148: DutyCycle--;
  2621  000A40  0100               	movlb	0	; () banked
  2622  000A42  0783               	decf	_DutyCycle& (0+255),f,b
  2623  000A44  A0D8               	btfss	status,0,c
  2624  000A46  0784               	decf	(_DutyCycle+1)& (0+255),f,b
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;main.c: 150: putsUSART("Modificado el SetPoint a: ");
  2628  000A48  0E08               	movlw	high STR_2
  2629  000A4A  6E1A               	movwf	putsUSART@data+1,c
  2630  000A4C  0E05               	movlw	low STR_2
  2631  000A4E  6E19               	movwf	putsUSART@data,c
  2632  000A50  EC69  F009         	call	_putsUSART	;wreg free
  2633                           
  2634                           ;main.c: 151: putsUSART(itoa(DutyCycle, DC_str, 10));
  2635  000A54  0100               	movlb	0	; () banked
  2636  000A56  C084  F012         	movff	_DutyCycle+1,itoa@buf+1
  2637  000A5A  0100               	movlb	0	; () banked
  2638  000A5C  C083  F011         	movff	_DutyCycle,itoa@buf
  2639  000A60  0E00               	movlw	high _DC_str
  2640  000A62  6E14               	movwf	itoa@val+1,c
  2641  000A64  0E48               	movlw	low _DC_str
  2642  000A66  6E13               	movwf	itoa@val,c
  2643  000A68  0E00               	movlw	0
  2644  000A6A  6E16               	movwf	itoa@base+1,c
  2645  000A6C  0E0A               	movlw	10
  2646  000A6E  6E15               	movwf	itoa@base,c
  2647  000A70  EC97  F009         	call	_itoa	;wreg free
  2648  000A74  C011  F019         	movff	?_itoa,putsUSART@data
  2649  000A78  C012  F01A         	movff	?_itoa+1,putsUSART@data+1
  2650  000A7C  EC69  F009         	call	_putsUSART	;wreg free
  2651                           
  2652                           ;main.c: 152: putsUSART("\n");
  2653  000A80  0E08               	movlw	high (STR_4+15)
  2654  000A82  6E1A               	movwf	putsUSART@data+1,c
  2655  000A84  0E2F               	movlw	low (STR_4+15)
  2656  000A86  6E19               	movwf	putsUSART@data,c
  2657  000A88  EC69  F009         	call	_putsUSART	;wreg free
  2658                           
  2659                           ;main.c: 153: }
  2660  000A8C  D014               	goto	i2l1982
  2661  000A8E                     i2l1976:
  2662                           
  2663                           ;main.c: 154: else
  2664                           ;main.c: 155: {
  2665                           ;main.c: 156: putsUSART("Error maquinola\n");
  2666  000A8E  0E08               	movlw	high STR_4
  2667  000A90  6E1A               	movwf	putsUSART@data+1,c
  2668  000A92  0E20               	movlw	low STR_4
  2669  000A94  6E19               	movwf	putsUSART@data,c
  2670  000A96  EC69  F009         	call	_putsUSART	;wreg free
  2671  000A9A  D00D               	goto	i2l1982
  2672  000A9C                     i2l1978:
  2673                           
  2674                           ;main.c: 159: MessageBuffer[i] = 0x00;
  2675  000A9C  0101               	movlb	1	; () banked
  2676  000A9E  0E00               	movlw	low _MessageBuffer
  2677  000AA0  243F               	addwf	_i,w,c
  2678  000AA2  6ED9               	movwf	fsr2l,c
  2679  000AA4  0101               	movlb	1	; () banked
  2680  000AA6  0E01               	movlw	high _MessageBuffer
  2681  000AA8  2040               	addwfc	_i+1,w,c
  2682  000AAA  6EDA               	movwf	fsr2h,c
  2683  000AAC  0E00               	movlw	0
  2684  000AAE  6EDF               	movwf	indf2,c
  2685                           
  2686                           ; BSR set to: 1
  2687  000AB0  063F               	decf	_i,f,c
  2688  000AB2  A0D8               	btfss	status,0,c
  2689  000AB4  0640               	decf	_i+1,f,c
  2690  000AB6                     i2l1982:
  2691  000AB6  5040               	movf	_i+1,w,c
  2692  000AB8  0A80               	xorlw	128
  2693  000ABA  6EF3               	movwf	prodl,c
  2694  000ABC  0E80               	movlw	128
  2695  000ABE  5CF3               	subwf	prodl,w,c
  2696  000AC0  0E01               	movlw	1
  2697  000AC2  B4D8               	btfsc	status,2,c
  2698  000AC4  5C3F               	subwf	_i,w,c
  2699  000AC6  B0D8               	btfsc	status,0,c
  2700  000AC8  D7E9               	goto	i2l1978
  2701  000ACA  D024               	goto	i2l2000
  2702  000ACC                     i2l1988:
  2703                           
  2704                           ;main.c: 162: }
  2705                           ;main.c: 163: i++;
  2706  000ACC  4A3F               	infsnz	_i,f,c
  2707  000ACE  2A40               	incf	_i+1,f,c
  2708                           
  2709                           ;main.c: 164: PIR1bits.RCIF = 0;
  2710  000AD0  9A9E               	bcf	3998,5,c	;volatile
  2711                           
  2712                           ;main.c: 165: }
  2713  000AD2  D024               	goto	i2l97
  2714  000AD4                     i2l1992:
  2715                           
  2716                           ;main.c: 166: else
  2717                           ;main.c: 167: {
  2718                           ;main.c: 168: putsUSART(MessageBuffer);
  2719  000AD4  0101               	movlb	1	; () banked
  2720  000AD6  0E01               	movlw	high _MessageBuffer
  2721  000AD8  6E1A               	movwf	putsUSART@data+1,c
  2722  000ADA  0101               	movlb	1	; () banked
  2723  000ADC  0E00               	movlw	low _MessageBuffer
  2724  000ADE  6E19               	movwf	putsUSART@data,c
  2725  000AE0  EC69  F009         	call	_putsUSART	;wreg free
  2726                           
  2727                           ;main.c: 169: for(;i>0;i--)
  2728  000AE4  D00D               	goto	i2l1998
  2729  000AE6                     i2l1994:
  2730                           
  2731                           ;main.c: 170: MessageBuffer[i] = 0x00;
  2732  000AE6  0101               	movlb	1	; () banked
  2733  000AE8  0E00               	movlw	low _MessageBuffer
  2734  000AEA  243F               	addwf	_i,w,c
  2735  000AEC  6ED9               	movwf	fsr2l,c
  2736  000AEE  0101               	movlb	1	; () banked
  2737  000AF0  0E01               	movlw	high _MessageBuffer
  2738  000AF2  2040               	addwfc	_i+1,w,c
  2739  000AF4  6EDA               	movwf	fsr2h,c
  2740  000AF6  0E00               	movlw	0
  2741  000AF8  6EDF               	movwf	indf2,c
  2742                           
  2743                           ; BSR set to: 1
  2744  000AFA  063F               	decf	_i,f,c
  2745  000AFC  A0D8               	btfss	status,0,c
  2746  000AFE  0640               	decf	_i+1,f,c
  2747  000B00                     i2l1998:
  2748  000B00  5040               	movf	_i+1,w,c
  2749  000B02  0A80               	xorlw	128
  2750  000B04  6EF3               	movwf	prodl,c
  2751  000B06  0E80               	movlw	128
  2752  000B08  5CF3               	subwf	prodl,w,c
  2753  000B0A  0E01               	movlw	1
  2754  000B0C  B4D8               	btfsc	status,2,c
  2755  000B0E  5C3F               	subwf	_i,w,c
  2756  000B10  B0D8               	btfsc	status,0,c
  2757  000B12  D7E9               	goto	i2l1994
  2758  000B14                     i2l2000:
  2759                           
  2760                           ;main.c: 171: i=0;
  2761  000B14  0E00               	movlw	0
  2762  000B16  6E40               	movwf	_i+1,c
  2763  000B18  0E00               	movlw	0
  2764  000B1A  6E3F               	movwf	_i,c
  2765  000B1C                     i2l97:
  2766  000B1C  C02A  FFF5         	movff	??_ISR+13,tablat
  2767  000B20  C029  FFF8         	movff	??_ISR+12,tblptru
  2768  000B24  C028  FFF7         	movff	??_ISR+11,tblptrh
  2769  000B28  C027  FFF6         	movff	??_ISR+10,tblptrl
  2770  000B2C  C026  FFF4         	movff	??_ISR+9,prodh
  2771  000B30  C025  FFF3         	movff	??_ISR+8,prodl
  2772  000B34  C024  FFDA         	movff	??_ISR+7,fsr2h
  2773  000B38  C023  FFD9         	movff	??_ISR+6,fsr2l
  2774  000B3C  C022  FFE2         	movff	??_ISR+5,fsr1h
  2775  000B40  C021  FFE1         	movff	??_ISR+4,fsr1l
  2776  000B44  C020  FFEA         	movff	??_ISR+3,fsr0h
  2777  000B48  C01F  FFE9         	movff	??_ISR+2,fsr0l
  2778  000B4C  C01E  FFFB         	movff	??_ISR+1,pclatu
  2779  000B50  C01D  FFFA         	movff	??_ISR,pclath
  2780  000B54  0011               	retfie		f
  2781  000B56                     __end_of_ISR:
  2782                           	opt stack 0
  2783                           pclatu	equ	0xFFB
  2784                           pclath	equ	0xFFA
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           prodh	equ	0xFF4
  2790                           prodl	equ	0xFF3
  2791                           intcon	equ	0xFF2
  2792                           postinc0	equ	0xFEE
  2793                           fsr0h	equ	0xFEA
  2794                           fsr0l	equ	0xFE9
  2795                           wreg	equ	0xFE8
  2796                           fsr1h	equ	0xFE2
  2797                           fsr1l	equ	0xFE1
  2798                           indf2	equ	0xFDF
  2799                           fsr2h	equ	0xFDA
  2800                           fsr2l	equ	0xFD9
  2801                           status	equ	0xFD8
  2802                           
  2803 ;; *************** function _strncpy *****************
  2804 ;; Defined at:
  2805 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strncpy.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  to              2    0[COMRAM] PTR unsigned char 
  2808 ;;		 -> DC_str(5), 
  2809 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2810 ;;		 -> MessageBuffer(200), 
  2811 ;;  size            2    4[COMRAM] unsigned int 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  cp              2    6[COMRAM] PTR unsigned char 
  2814 ;;		 -> DC_str(5), 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  2    0[COMRAM] PTR unsigned char 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2824 ;;      Params:         6       0       0       0       0       0       0       0       0
  2825 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2827 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2828 ;;Total ram usage:        8 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_ISR
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text12
  2838  001274                     __ptext12:
  2839                           	opt stack 0
  2840  001274                     _strncpy:
  2841                           	opt stack 25
  2842                           
  2843                           ;incstack = 0
  2844  001274  C002  F008         	movff	strncpy@to+1,strncpy@cp+1
  2845  001278  C001  F007         	movff	strncpy@to,strncpy@cp
  2846  00127C  D014               	goto	i2l1796
  2847  00127E                     i2l1790:
  2848  00127E  0605               	decf	strncpy@size,f,c
  2849  001280  A0D8               	btfss	status,0,c
  2850  001282  0606               	decf	strncpy@size+1,f,c
  2851  001284  C003  FFD9         	movff	strncpy@from,fsr2l
  2852  001288  C004  FFDA         	movff	strncpy@from+1,fsr2h
  2853  00128C  4A03               	infsnz	strncpy@from,f,c
  2854  00128E  2A04               	incf	strncpy@from+1,f,c
  2855  001290  C007  FFE1         	movff	strncpy@cp,fsr1l
  2856  001294  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  2857  001298  4A07               	infsnz	strncpy@cp,f,c
  2858  00129A  2A08               	incf	strncpy@cp+1,f,c
  2859  00129C  CFDF FFE7          	movff	indf2,indf1
  2860  0012A0  50E7               	movf	indf1,w,c
  2861  0012A2  B4D8               	btfsc	status,2,c
  2862  0012A4  D00D               	goto	i2l1802
  2863  0012A6                     i2l1796:
  2864  0012A6  5006               	movf	strncpy@size+1,w,c
  2865  0012A8  1005               	iorwf	strncpy@size,w,c
  2866  0012AA  B4D8               	btfsc	status,2,c
  2867  0012AC  D009               	goto	i2l1802
  2868  0012AE  D7E7               	goto	i2l1790
  2869  0012B0                     i2l1798:
  2870  0012B0  C007  FFD9         	movff	strncpy@cp,fsr2l
  2871  0012B4  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  2872  0012B8  0E00               	movlw	0
  2873  0012BA  6EDF               	movwf	indf2,c
  2874  0012BC  4A07               	infsnz	strncpy@cp,f,c
  2875  0012BE  2A08               	incf	strncpy@cp+1,f,c
  2876  0012C0                     i2l1802:
  2877  0012C0  0605               	decf	strncpy@size,f,c
  2878  0012C2  A0D8               	btfss	status,0,c
  2879  0012C4  0606               	decf	strncpy@size+1,f,c
  2880  0012C6  2805               	incf	strncpy@size& (0+255),w,c
  2881  0012C8  B4D8               	btfsc	status,2,c
  2882  0012CA  2806               	incf	(strncpy@size+1)& (0+255),w,c
  2883  0012CC  B4D8               	btfsc	status,2,c
  2884                           
  2885                           ;	Return value of _strncpy is never used
  2886  0012CE  0012               	return	
  2887  0012D0  D7EF               	goto	i2l1798
  2888  0012D2                     __end_of_strncpy:
  2889                           	opt stack 0
  2890                           pclatu	equ	0xFFB
  2891                           pclath	equ	0xFFA
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           prodh	equ	0xFF4
  2897                           prodl	equ	0xFF3
  2898                           intcon	equ	0xFF2
  2899                           postinc0	equ	0xFEE
  2900                           fsr0h	equ	0xFEA
  2901                           fsr0l	equ	0xFE9
  2902                           wreg	equ	0xFE8
  2903                           indf1	equ	0xFE7
  2904                           fsr1h	equ	0xFE2
  2905                           fsr1l	equ	0xFE1
  2906                           indf2	equ	0xFDF
  2907                           fsr2h	equ	0xFDA
  2908                           fsr2l	equ	0xFD9
  2909                           status	equ	0xFD8
  2910                           
  2911 ;; *************** function _putsUSART *****************
  2912 ;; Defined at:
  2913 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uputs.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  data            2   24[COMRAM] PTR unsigned char 
  2916 ;;		 -> STR_10(17), STR_9(2), STR_8(27), STR_7(17), 
  2917 ;;		 -> STR_6(2), RAM(2047), STR_5(27), STR_4(17), 
  2918 ;;		 -> STR_3(2), STR_2(27), DC_str(5), MessageBuffer(200), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         2       0       0       0       0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2932 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2933 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2934 ;;Total ram usage:        4 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    1
  2937 ;; This function calls:
  2938 ;;		_WriteUSART
  2939 ;; This function is called by:
  2940 ;;		_ISR
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text13
  2945  0012D2                     __ptext13:
  2946                           	opt stack 0
  2947  0012D2                     _putsUSART:
  2948                           	opt stack 24
  2949  0012D2                     i2l258:
  2950  0012D2  A2AC               	btfss	4012,1,c	;volatile
  2951  0012D4  D7FE               	goto	i2l258
  2952  0012D6  C019  FFF6         	movff	putsUSART@data,tblptrl
  2953  0012DA  C01A  FFF7         	movff	putsUSART@data+1,tblptrh
  2954  0012DE  6AF8               	clrf	tblptru,c
  2955  0012E0  0E07               	movlw	(high __ramtop+-1)
  2956  0012E2  64F7               	cpfsgt	tblptrh,c
  2957  0012E4  D003               	bra	i2u129_47
  2958  0012E6  0008               	tblrd		*
  2959  0012E8  50F5               	movf	tablat,w,c
  2960  0012EA  D005               	bra	i2u129_40
  2961  0012EC                     i2u129_47:
  2962  0012EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  2963  0012F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  2964  0012F4  50E7               	movf	indf1,w,c
  2965  0012F6                     i2u129_40:
  2966  0012F6  EC7E  F00A         	call	_WriteUSART
  2967  0012FA  5019               	movf	putsUSART@data,w,c
  2968  0012FC  6E1B               	movwf	??_putsUSART& (0+255),c
  2969  0012FE  501A               	movf	putsUSART@data+1,w,c
  2970  001300  6E1C               	movwf	(??_putsUSART+1)& (0+255),c
  2971  001302  4A19               	infsnz	putsUSART@data,f,c
  2972  001304  2A1A               	incf	putsUSART@data+1,f,c
  2973  001306  C01B  FFF6         	movff	??_putsUSART,tblptrl
  2974  00130A  C01C  FFF7         	movff	??_putsUSART+1,tblptrh
  2975  00130E  6AF8               	clrf	tblptru,c
  2976  001310  0E07               	movlw	(high __ramtop+-1)
  2977  001312  64F7               	cpfsgt	tblptrh,c
  2978  001314  D003               	bra	i2u130_47
  2979  001316  0008               	tblrd		*
  2980  001318  50F5               	movf	tablat,w,c
  2981  00131A  D005               	bra	i2u130_40
  2982  00131C                     i2u130_47:
  2983  00131C  CFF6 FFE1          	movff	tblptrl,fsr1l
  2984  001320  CFF7 FFE2          	movff	tblptrh,fsr1h
  2985  001324  50E7               	movf	indf1,w,c
  2986  001326                     i2u130_40:
  2987  001326  0900               	iorlw	0
  2988  001328  B4D8               	btfsc	status,2,c
  2989  00132A  0012               	return	
  2990  00132C  D7D2               	goto	i2l258
  2991  00132E                     __end_of_putsUSART:
  2992                           	opt stack 0
  2993                           pclatu	equ	0xFFB
  2994                           pclath	equ	0xFFA
  2995                           tblptru	equ	0xFF8
  2996                           tblptrh	equ	0xFF7
  2997                           tblptrl	equ	0xFF6
  2998                           tablat	equ	0xFF5
  2999                           prodh	equ	0xFF4
  3000                           prodl	equ	0xFF3
  3001                           intcon	equ	0xFF2
  3002                           postinc0	equ	0xFEE
  3003                           fsr0h	equ	0xFEA
  3004                           fsr0l	equ	0xFE9
  3005                           wreg	equ	0xFE8
  3006                           indf1	equ	0xFE7
  3007                           fsr1h	equ	0xFE2
  3008                           fsr1l	equ	0xFE1
  3009                           indf2	equ	0xFDF
  3010                           fsr2h	equ	0xFDA
  3011                           fsr2l	equ	0xFD9
  3012                           status	equ	0xFD8
  3013                           
  3014 ;; *************** function _WriteUSART *****************
  3015 ;; Defined at:
  3016 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  data            1    wreg     unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  data            1    0[COMRAM] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0
  3031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3033 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_putsUSART
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text14
  3044  0014FC                     __ptext14:
  3045                           	opt stack 0
  3046  0014FC                     _WriteUSART:
  3047                           	opt stack 24
  3048                           
  3049                           ;incstack = 0
  3050                           ;WriteUSART@data stored from wreg
  3051  0014FC  6E01               	movwf	WriteUSART@data,c
  3052  0014FE  ACAC               	btfss	4012,6,c	;volatile
  3053  001500  D003               	goto	i2l1576
  3054  001502  90AC               	bcf	4012,0,c	;volatile
  3055  001504  B243               	btfsc	_USART_Status,1,c
  3056  001506  80AC               	bsf	4012,0,c	;volatile
  3057  001508                     i2l1576:
  3058  001508  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  3059  00150C  0012               	return	
  3060  00150E                     __end_of_WriteUSART:
  3061                           	opt stack 0
  3062                           pclatu	equ	0xFFB
  3063                           pclath	equ	0xFFA
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           fsr0h	equ	0xFEA
  3073                           fsr0l	equ	0xFE9
  3074                           wreg	equ	0xFE8
  3075                           indf1	equ	0xFE7
  3076                           fsr1h	equ	0xFE2
  3077                           fsr1l	equ	0xFE1
  3078                           indf2	equ	0xFDF
  3079                           fsr2h	equ	0xFDA
  3080                           fsr2l	equ	0xFD9
  3081                           status	equ	0xFD8
  3082                           
  3083 ;; *************** function _itoa *****************
  3084 ;; Defined at:
  3085 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\itoa.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  buf             2   16[COMRAM] PTR unsigned char 
  3088 ;;		 -> RAM(2047), 
  3089 ;;  val             2   18[COMRAM] int 
  3090 ;;  base            2   20[COMRAM] int 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  cp              2   22[COMRAM] PTR unsigned char 
  3093 ;;		 -> RAM(2047), 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2   16[COMRAM] PTR unsigned char 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         6       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        8 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    2
  3110 ;; This function calls:
  3111 ;;		_utoa
  3112 ;; This function is called by:
  3113 ;;		_ISR
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text15
  3118  00132E                     __ptext15:
  3119                           	opt stack 0
  3120  00132E                     _itoa:
  3121                           	opt stack 23
  3122                           
  3123                           ;incstack = 0
  3124  00132E  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  3125  001332  C011  F017         	movff	itoa@buf,itoa@cp
  3126  001336  5014               	movf	itoa@val+1,w,c
  3127  001338  0A80               	xorlw	128
  3128  00133A  6EF3               	movwf	prodl,c
  3129  00133C  0E80               	movlw	128
  3130  00133E  5CF3               	subwf	prodl,w,c
  3131  001340  0E00               	movlw	0
  3132  001342  B4D8               	btfsc	status,2,c
  3133  001344  5C13               	subwf	itoa@val,w,c
  3134  001346  B0D8               	btfsc	status,0,c
  3135  001348  D00C               	goto	i2l1846
  3136  00134A  C011  FFD9         	movff	itoa@buf,fsr2l
  3137  00134E  C012  FFDA         	movff	itoa@buf+1,fsr2h
  3138  001352  0E2D               	movlw	45
  3139  001354  6EDF               	movwf	indf2,c
  3140  001356  4A11               	infsnz	itoa@buf,f,c
  3141  001358  2A12               	incf	itoa@buf+1,f,c
  3142  00135A  6C13               	negf	itoa@val,c
  3143  00135C  1E14               	comf	itoa@val+1,f,c
  3144  00135E  B0D8               	btfsc	status,0,c
  3145  001360  2A14               	incf	itoa@val+1,f,c
  3146  001362                     i2l1846:
  3147  001362  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  3148  001366  C011  F008         	movff	itoa@buf,utoa@buf
  3149  00136A  C013  F00A         	movff	itoa@val,utoa@val
  3150  00136E  C014  F00B         	movff	itoa@val+1,utoa@val+1
  3151  001372  C015  F00C         	movff	itoa@base,utoa@base
  3152  001376  C016  F00D         	movff	itoa@base+1,utoa@base+1
  3153  00137A  EC80  F007         	call	_utoa	;wreg free
  3154  00137E  C018  F012         	movff	itoa@cp+1,?_itoa+1
  3155  001382  C017  F011         	movff	itoa@cp,?_itoa
  3156  001386  0012               	return	
  3157  001388                     __end_of_itoa:
  3158                           	opt stack 0
  3159                           pclatu	equ	0xFFB
  3160                           pclath	equ	0xFFA
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           prodh	equ	0xFF4
  3166                           prodl	equ	0xFF3
  3167                           intcon	equ	0xFF2
  3168                           postinc0	equ	0xFEE
  3169                           fsr0h	equ	0xFEA
  3170                           fsr0l	equ	0xFE9
  3171                           wreg	equ	0xFE8
  3172                           indf1	equ	0xFE7
  3173                           fsr1h	equ	0xFE2
  3174                           fsr1l	equ	0xFE1
  3175                           indf2	equ	0xFDF
  3176                           fsr2h	equ	0xFDA
  3177                           fsr2l	equ	0xFD9
  3178                           status	equ	0xFD8
  3179                           
  3180 ;; *************** function _utoa *****************
  3181 ;; Defined at:
  3182 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\itoa.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  buf             2    7[COMRAM] PTR unsigned char 
  3185 ;;		 -> RAM(2047), 
  3186 ;;  val             2    9[COMRAM] unsigned int 
  3187 ;;  base            2   11[COMRAM] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  v               2   13[COMRAM] unsigned int 
  3190 ;;  c               1   15[COMRAM] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  2    7[COMRAM] PTR unsigned char 
  3193 ;; Registers used:
  3194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3200 ;;      Params:         6       0       0       0       0       0       0       0       0
  3201 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3203 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3204 ;;Total ram usage:        9 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    1
  3207 ;; This function calls:
  3208 ;;		___lwmod
  3209 ;;		i2___lwdiv
  3210 ;; This function is called by:
  3211 ;;		_itoa
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text16
  3216  000F00                     __ptext16:
  3217                           	opt stack 0
  3218  000F00                     _utoa:
  3219                           	opt stack 23
  3220                           
  3221                           ;incstack = 0
  3222  000F00  C00A  F00E         	movff	utoa@val,utoa@v
  3223  000F04  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  3224  000F08                     i2l1598:
  3225  000F08  C00E  F001         	movff	utoa@v,i2___lwdiv@dividend
  3226  000F0C  C00F  F002         	movff	utoa@v+1,i2___lwdiv@dividend+1
  3227  000F10  C00C  F003         	movff	utoa@base,i2___lwdiv@divisor
  3228  000F14  C00D  F004         	movff	utoa@base+1,i2___lwdiv@divisor+1
  3229  000F18  ECC4  F009         	call	i2___lwdiv	;wreg free
  3230  000F1C  C001  F00E         	movff	?i2___lwdiv,utoa@v
  3231  000F20  C002  F00F         	movff	?i2___lwdiv+1,utoa@v+1
  3232  000F24  4A08               	infsnz	utoa@buf,f,c
  3233  000F26  2A09               	incf	utoa@buf+1,f,c
  3234  000F28  500F               	movf	utoa@v+1,w,c
  3235  000F2A  100E               	iorwf	utoa@v,w,c
  3236  000F2C  A4D8               	btfss	status,2,c
  3237  000F2E  D7EC               	goto	i2l1598
  3238  000F30  C008  FFD9         	movff	utoa@buf,fsr2l
  3239  000F34  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3240  000F38  0E00               	movlw	0
  3241  000F3A  6EDF               	movwf	indf2,c
  3242  000F3C  0608               	decf	utoa@buf,f,c
  3243  000F3E  A0D8               	btfss	status,0,c
  3244  000F40  0609               	decf	utoa@buf+1,f,c
  3245  000F42                     i2l1608:
  3246  000F42  C00A  F001         	movff	utoa@val,___lwmod@dividend
  3247  000F46  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  3248  000F4A  C00C  F003         	movff	utoa@base,___lwmod@divisor
  3249  000F4E  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  3250  000F52  EC11  F00A         	call	___lwmod	;wreg free
  3251  000F56  5001               	movf	?___lwmod,w,c
  3252  000F58  6E10               	movwf	utoa@c,c
  3253  000F5A  C00A  F001         	movff	utoa@val,i2___lwdiv@dividend
  3254  000F5E  C00B  F002         	movff	utoa@val+1,i2___lwdiv@dividend+1
  3255  000F62  C00C  F003         	movff	utoa@base,i2___lwdiv@divisor
  3256  000F66  C00D  F004         	movff	utoa@base+1,i2___lwdiv@divisor+1
  3257  000F6A  ECC4  F009         	call	i2___lwdiv	;wreg free
  3258  000F6E  C001  F00A         	movff	?i2___lwdiv,utoa@val
  3259  000F72  C002  F00B         	movff	?i2___lwdiv+1,utoa@val+1
  3260  000F76  0E09               	movlw	9
  3261  000F78  6410               	cpfsgt	utoa@c,c
  3262  000F7A  D002               	goto	i2l741
  3263  000F7C  0E07               	movlw	7
  3264  000F7E  2610               	addwf	utoa@c,f,c
  3265  000F80                     i2l741:
  3266  000F80  0E30               	movlw	48
  3267  000F82  2610               	addwf	utoa@c,f,c
  3268  000F84  C008  FFD9         	movff	utoa@buf,fsr2l
  3269  000F88  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3270  000F8C  C010  FFDF         	movff	utoa@c,indf2
  3271  000F90  0608               	decf	utoa@buf,f,c
  3272  000F92  A0D8               	btfss	status,0,c
  3273  000F94  0609               	decf	utoa@buf+1,f,c
  3274  000F96  500B               	movf	utoa@val+1,w,c
  3275  000F98  100A               	iorwf	utoa@val,w,c
  3276  000F9A  A4D8               	btfss	status,2,c
  3277  000F9C  D7D2               	goto	i2l1608
  3278                           
  3279                           ;	Return value of _utoa is never used
  3280  000F9E  4A08               	infsnz	utoa@buf,f,c
  3281  000FA0  2A09               	incf	utoa@buf+1,f,c
  3282  000FA2  0012               	return	
  3283  000FA4                     __end_of_utoa:
  3284                           	opt stack 0
  3285                           pclatu	equ	0xFFB
  3286                           pclath	equ	0xFFA
  3287                           tblptru	equ	0xFF8
  3288                           tblptrh	equ	0xFF7
  3289                           tblptrl	equ	0xFF6
  3290                           tablat	equ	0xFF5
  3291                           prodh	equ	0xFF4
  3292                           prodl	equ	0xFF3
  3293                           intcon	equ	0xFF2
  3294                           postinc0	equ	0xFEE
  3295                           fsr0h	equ	0xFEA
  3296                           fsr0l	equ	0xFE9
  3297                           wreg	equ	0xFE8
  3298                           indf1	equ	0xFE7
  3299                           fsr1h	equ	0xFE2
  3300                           fsr1l	equ	0xFE1
  3301                           indf2	equ	0xFDF
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function i2___lwdiv *****************
  3307 ;; Defined at:
  3308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  dividend        2    0[COMRAM] unsigned int 
  3311 ;;  divisor         2    2[COMRAM] unsigned int 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  3314 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2    0[COMRAM] unsigned int 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3324 ;;      Params:         4       0       0       0       0       0       0       0       0
  3325 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3327 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3328 ;;Total ram usage:        7 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_utoa
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text17
  3338  001388                     __ptext17:
  3339                           	opt stack 0
  3340  001388                     i2___lwdiv:
  3341                           	opt stack 23
  3342                           
  3343                           ;incstack = 0
  3344  001388  0E00               	movlw	0
  3345  00138A  6E06               	movwf	i2___lwdiv@quotient+1,c
  3346  00138C  0E00               	movlw	0
  3347  00138E  6E05               	movwf	i2___lwdiv@quotient,c
  3348  001390  5004               	movf	i2___lwdiv@divisor+1,w,c
  3349  001392  1003               	iorwf	i2___lwdiv@divisor,w,c
  3350  001394  B4D8               	btfsc	status,2,c
  3351  001396  D01C               	goto	i2l835
  3352  001398  0E01               	movlw	1
  3353  00139A  6E07               	movwf	i2___lwdiv@counter,c
  3354  00139C  D004               	goto	i2l1540
  3355  00139E                     i2l1538:
  3356  00139E  90D8               	bcf	status,0,c
  3357  0013A0  3603               	rlcf	i2___lwdiv@divisor,f,c
  3358  0013A2  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3359  0013A4  2A07               	incf	i2___lwdiv@counter,f,c
  3360  0013A6                     i2l1540:
  3361  0013A6  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3362  0013A8  D7FA               	goto	i2l1538
  3363  0013AA                     i2l1542:
  3364  0013AA  90D8               	bcf	status,0,c
  3365  0013AC  3605               	rlcf	i2___lwdiv@quotient,f,c
  3366  0013AE  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3367  0013B0  5003               	movf	i2___lwdiv@divisor,w,c
  3368  0013B2  5C01               	subwf	i2___lwdiv@dividend,w,c
  3369  0013B4  5004               	movf	i2___lwdiv@divisor+1,w,c
  3370  0013B6  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3371  0013B8  A0D8               	btfss	status,0,c
  3372  0013BA  D005               	goto	i2l1550
  3373  0013BC  5003               	movf	i2___lwdiv@divisor,w,c
  3374  0013BE  5E01               	subwf	i2___lwdiv@dividend,f,c
  3375  0013C0  5004               	movf	i2___lwdiv@divisor+1,w,c
  3376  0013C2  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3377  0013C4  8005               	bsf	i2___lwdiv@quotient,0,c
  3378  0013C6                     i2l1550:
  3379  0013C6  90D8               	bcf	status,0,c
  3380  0013C8  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3381  0013CA  3203               	rrcf	i2___lwdiv@divisor,f,c
  3382  0013CC  2E07               	decfsz	i2___lwdiv@counter,f,c
  3383  0013CE  D7ED               	goto	i2l1542
  3384  0013D0                     i2l835:
  3385  0013D0  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3386  0013D4  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3387  0013D8  0012               	return	
  3388  0013DA                     __end_ofi2___lwdiv:
  3389                           	opt stack 0
  3390                           pclatu	equ	0xFFB
  3391                           pclath	equ	0xFFA
  3392                           tblptru	equ	0xFF8
  3393                           tblptrh	equ	0xFF7
  3394                           tblptrl	equ	0xFF6
  3395                           tablat	equ	0xFF5
  3396                           prodh	equ	0xFF4
  3397                           prodl	equ	0xFF3
  3398                           intcon	equ	0xFF2
  3399                           postinc0	equ	0xFEE
  3400                           fsr0h	equ	0xFEA
  3401                           fsr0l	equ	0xFE9
  3402                           wreg	equ	0xFE8
  3403                           indf1	equ	0xFE7
  3404                           fsr1h	equ	0xFE2
  3405                           fsr1l	equ	0xFE1
  3406                           indf2	equ	0xFDF
  3407                           fsr2h	equ	0xFDA
  3408                           fsr2l	equ	0xFD9
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function ___lwmod *****************
  3412 ;; Defined at:
  3413 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dividend        2    0[COMRAM] unsigned int 
  3416 ;;  divisor         2    2[COMRAM] unsigned int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  counter         1    4[COMRAM] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  2    0[COMRAM] unsigned int 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3428 ;;      Params:         4       0       0       0       0       0       0       0       0
  3429 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3431 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3432 ;;Total ram usage:        5 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_utoa
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text18
  3442  001422                     __ptext18:
  3443                           	opt stack 0
  3444  001422                     ___lwmod:
  3445                           	opt stack 23
  3446                           
  3447                           ;incstack = 0
  3448  001422  5004               	movf	___lwmod@divisor+1,w,c
  3449  001424  1003               	iorwf	___lwmod@divisor,w,c
  3450  001426  B4D8               	btfsc	status,2,c
  3451  001428  D018               	goto	i2l845
  3452  00142A  0E01               	movlw	1
  3453  00142C  6E05               	movwf	___lwmod@counter,c
  3454  00142E  D004               	goto	i2l1522
  3455  001430                     i2l1520:
  3456  001430  90D8               	bcf	status,0,c
  3457  001432  3603               	rlcf	___lwmod@divisor,f,c
  3458  001434  3604               	rlcf	___lwmod@divisor+1,f,c
  3459  001436  2A05               	incf	___lwmod@counter,f,c
  3460  001438                     i2l1522:
  3461  001438  AE04               	btfss	___lwmod@divisor+1,7,c
  3462  00143A  D7FA               	goto	i2l1520
  3463  00143C                     i2l1524:
  3464  00143C  5003               	movf	___lwmod@divisor,w,c
  3465  00143E  5C01               	subwf	___lwmod@dividend,w,c
  3466  001440  5004               	movf	___lwmod@divisor+1,w,c
  3467  001442  5802               	subwfb	___lwmod@dividend+1,w,c
  3468  001444  A0D8               	btfss	status,0,c
  3469  001446  D004               	goto	i2l1528
  3470  001448  5003               	movf	___lwmod@divisor,w,c
  3471  00144A  5E01               	subwf	___lwmod@dividend,f,c
  3472  00144C  5004               	movf	___lwmod@divisor+1,w,c
  3473  00144E  5A02               	subwfb	___lwmod@dividend+1,f,c
  3474  001450                     i2l1528:
  3475  001450  90D8               	bcf	status,0,c
  3476  001452  3204               	rrcf	___lwmod@divisor+1,f,c
  3477  001454  3203               	rrcf	___lwmod@divisor,f,c
  3478  001456  2E05               	decfsz	___lwmod@counter,f,c
  3479  001458  D7F1               	goto	i2l1524
  3480  00145A                     i2l845:
  3481  00145A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3482  00145E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3483  001462  0012               	return	
  3484  001464                     __end_of___lwmod:
  3485                           	opt stack 0
  3486                           pclatu	equ	0xFFB
  3487                           pclath	equ	0xFFA
  3488                           tblptru	equ	0xFF8
  3489                           tblptrh	equ	0xFF7
  3490                           tblptrl	equ	0xFF6
  3491                           tablat	equ	0xFF5
  3492                           prodh	equ	0xFF4
  3493                           prodl	equ	0xFF3
  3494                           intcon	equ	0xFF2
  3495                           postinc0	equ	0xFEE
  3496                           fsr0h	equ	0xFEA
  3497                           fsr0l	equ	0xFE9
  3498                           wreg	equ	0xFE8
  3499                           indf1	equ	0xFE7
  3500                           fsr1h	equ	0xFE2
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           fsr2h	equ	0xFDA
  3504                           fsr2l	equ	0xFD9
  3505                           status	equ	0xFD8
  3506                           
  3507 ;; *************** function _atoi *****************
  3508 ;; Defined at:
  3509 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\atoi.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3512 ;;		 -> DC_str(5), 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  a               2   11[COMRAM] int 
  3515 ;;  sign            1   10[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  2    6[COMRAM] int 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3525 ;;      Params:         2       0       0       0       0       0       0       0       0
  3526 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3527 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3528 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3529 ;;Total ram usage:        7 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    1
  3532 ;; This function calls:
  3533 ;;		___wmul
  3534 ;;		_isdigit
  3535 ;; This function is called by:
  3536 ;;		_ISR
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text19
  3541  000D74                     __ptext19:
  3542                           	opt stack 0
  3543  000D74                     _atoi:
  3544                           	opt stack 24
  3545                           
  3546                           ;incstack = 0
  3547  000D74  D002               	goto	i2l1808
  3548  000D76                     i2l1806:
  3549  000D76  4A07               	infsnz	atoi@s,f,c
  3550  000D78  2A08               	incf	atoi@s+1,f,c
  3551  000D7A                     i2l1808:
  3552  000D7A  C007  FFD9         	movff	atoi@s,fsr2l
  3553  000D7E  C008  FFDA         	movff	atoi@s+1,fsr2h
  3554  000D82  50DF               	movf	indf2,w,c
  3555  000D84  0A20               	xorlw	32
  3556  000D86  B4D8               	btfsc	status,2,c
  3557  000D88  D7F6               	goto	i2l1806
  3558  000D8A  C007  FFD9         	movff	atoi@s,fsr2l
  3559  000D8E  C008  FFDA         	movff	atoi@s+1,fsr2h
  3560  000D92  50DF               	movf	indf2,w,c
  3561  000D94  0A09               	xorlw	9
  3562  000D96  B4D8               	btfsc	status,2,c
  3563  000D98  D7EE               	goto	i2l1806
  3564  000D9A  0E00               	movlw	0
  3565  000D9C  6E0D               	movwf	atoi@a+1,c
  3566  000D9E  0E00               	movlw	0
  3567  000DA0  6E0C               	movwf	atoi@a,c
  3568  000DA2  0E00               	movlw	0
  3569  000DA4  6E0B               	movwf	atoi@sign,c
  3570  000DA6  0E2D               	movlw	45
  3571  000DA8  C007  FFD9         	movff	atoi@s,fsr2l
  3572  000DAC  C008  FFDA         	movff	atoi@s+1,fsr2h
  3573  000DB0  62DF               	cpfseq	indf2,c
  3574  000DB2  D002               	goto	i2l1818
  3575  000DB4  2A0B               	incf	atoi@sign,f,c
  3576  000DB6  D023               	goto	L1
  3577  000DB8                     i2l1818:
  3578  000DB8  0E2B               	movlw	43
  3579  000DBA  C007  FFD9         	movff	atoi@s,fsr2l
  3580  000DBE  C008  FFDA         	movff	atoi@s+1,fsr2h
  3581  000DC2  62DF               	cpfseq	indf2,c
  3582  000DC4  D01E               	goto	i2l1826
  3583  000DC6  D01B               	goto	L1
  3584  000DC8                     i2l1822:
  3585  000DC8  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3586  000DCC  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3587  000DD0  0E00               	movlw	0
  3588  000DD2  6E04               	movwf	___wmul@multiplicand+1,c
  3589  000DD4  0E0A               	movlw	10
  3590  000DD6  6E03               	movwf	___wmul@multiplicand,c
  3591  000DD8  EC32  F00A         	call	___wmul	;wreg free
  3592  000DDC  C007  FFD9         	movff	atoi@s,fsr2l
  3593  000DE0  C008  FFDA         	movff	atoi@s+1,fsr2h
  3594  000DE4  50DF               	movf	indf2,w,c
  3595  000DE6  6E09               	movwf	??_atoi& (0+255),c
  3596  000DE8  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3597  000DEA  5001               	movf	?___wmul,w,c
  3598  000DEC  2609               	addwf	??_atoi,f,c
  3599  000DEE  5002               	movf	?___wmul+1,w,c
  3600  000DF0  220A               	addwfc	??_atoi+1,f,c
  3601  000DF2  0ED0               	movlw	208
  3602  000DF4  2409               	addwf	??_atoi,w,c
  3603  000DF6  6E0C               	movwf	atoi@a,c
  3604  000DF8  0EFF               	movlw	255
  3605  000DFA  200A               	addwfc	??_atoi+1,w,c
  3606  000DFC  6E0D               	movwf	atoi@a+1,c
  3607  000DFE                     L1:
  3608  000DFE  4A07               	infsnz	atoi@s,f,c
  3609  000E00  2A08               	incf	atoi@s+1,f,c
  3610  000E02                     i2l1826:
  3611  000E02  C007  FFD9         	movff	atoi@s,fsr2l
  3612  000E06  C008  FFDA         	movff	atoi@s+1,fsr2h
  3613  000E0A  50DF               	movf	indf2,w,c
  3614  000E0C  EC55  F00A         	call	_isdigit
  3615  000E10  B0D8               	btfsc	status,0,c
  3616  000E12  D7DA               	goto	i2l1822
  3617  000E14  500B               	movf	atoi@sign,w,c
  3618  000E16  B4D8               	btfsc	status,2,c
  3619  000E18  D00D               	goto	i2l471
  3620  000E1A  C00C  F009         	movff	atoi@a,??_atoi
  3621  000E1E  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  3622  000E22  1E09               	comf	??_atoi,f,c
  3623  000E24  1E0A               	comf	??_atoi+1,f,c
  3624  000E26  4A09               	infsnz	??_atoi,f,c
  3625  000E28  2A0A               	incf	??_atoi+1,f,c
  3626  000E2A  C009  F007         	movff	??_atoi,?_atoi
  3627  000E2E  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3628  000E32  D004               	goto	i2l472
  3629  000E34                     i2l471:
  3630  000E34  C00C  F007         	movff	atoi@a,?_atoi
  3631  000E38  C00D  F008         	movff	atoi@a+1,?_atoi+1
  3632  000E3C                     i2l472:
  3633  000E3C  0012               	return	
  3634  000E3E                     __end_of_atoi:
  3635                           	opt stack 0
  3636                           pclatu	equ	0xFFB
  3637                           pclath	equ	0xFFA
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           postinc0	equ	0xFEE
  3646                           fsr0h	equ	0xFEA
  3647                           fsr0l	equ	0xFE9
  3648                           wreg	equ	0xFE8
  3649                           indf1	equ	0xFE7
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           indf2	equ	0xFDF
  3653                           fsr2h	equ	0xFDA
  3654                           fsr2l	equ	0xFD9
  3655                           status	equ	0xFD8
  3656                           
  3657 ;; *************** function _isdigit *****************
  3658 ;; Defined at:
  3659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  c               1    wreg     unsigned char 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  c               1    2[COMRAM] unsigned char 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3673 ;;      Params:         0       0       0       0       0       0       0       0       0
  3674 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3676 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3677 ;;Total ram usage:        3 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_atoi
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text20
  3687  0014AA                     __ptext20:
  3688                           	opt stack 0
  3689  0014AA                     _isdigit:
  3690                           	opt stack 24
  3691                           
  3692                           ;incstack = 0
  3693                           ;isdigit@c stored from wreg
  3694  0014AA  6E03               	movwf	isdigit@c,c
  3695  0014AC  0E00               	movlw	0
  3696  0014AE  6E02               	movwf	_isdigit$1328,c
  3697  0014B0  0E3A               	movlw	58
  3698  0014B2  5C03               	subwf	isdigit@c,w,c
  3699  0014B4  B0D8               	btfsc	status,0,c
  3700  0014B6  D005               	goto	i2l1592
  3701  0014B8  0E2F               	movlw	47
  3702  0014BA  6403               	cpfsgt	isdigit@c,c
  3703  0014BC  D002               	goto	i2l1592
  3704  0014BE  0E01               	movlw	1
  3705  0014C0  6E02               	movwf	_isdigit$1328,c
  3706  0014C2                     i2l1592:
  3707  0014C2  C002  F001         	movff	_isdigit$1328,??_isdigit
  3708  0014C6  3001               	rrcf	??_isdigit,w,c
  3709  0014C8  0012               	return	
  3710  0014CA                     __end_of_isdigit:
  3711                           	opt stack 0
  3712                           pclatu	equ	0xFFB
  3713                           pclath	equ	0xFFA
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           prodh	equ	0xFF4
  3719                           prodl	equ	0xFF3
  3720                           intcon	equ	0xFF2
  3721                           postinc0	equ	0xFEE
  3722                           fsr0h	equ	0xFEA
  3723                           fsr0l	equ	0xFE9
  3724                           wreg	equ	0xFE8
  3725                           indf1	equ	0xFE7
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           indf2	equ	0xFDF
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function ___wmul *****************
  3734 ;; Defined at:
  3735 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  multiplier      2    0[COMRAM] unsigned int 
  3738 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  product         2    4[COMRAM] unsigned int 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  2    0[COMRAM] unsigned int 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, prodl, prodh
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3750 ;;      Params:         4       0       0       0       0       0       0       0       0
  3751 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3753 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3754 ;;Total ram usage:        6 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_atoi
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text21
  3764  001464                     __ptext21:
  3765                           	opt stack 0
  3766  001464                     ___wmul:
  3767                           	opt stack 24
  3768                           
  3769                           ;incstack = 0
  3770  001464  5001               	movf	___wmul@multiplier,w,c
  3771  001466  0203               	mulwf	___wmul@multiplicand,c
  3772  001468  CFF3 F005          	movff	prodl,___wmul@product
  3773  00146C  CFF4 F006          	movff	prodh,___wmul@product+1
  3774  001470  5001               	movf	___wmul@multiplier,w,c
  3775  001472  0204               	mulwf	___wmul@multiplicand+1,c
  3776  001474  50F3               	movf	prodl,w,c
  3777  001476  2606               	addwf	___wmul@product+1,f,c
  3778  001478  5002               	movf	___wmul@multiplier+1,w,c
  3779  00147A  0203               	mulwf	___wmul@multiplicand,c
  3780  00147C  50F3               	movf	prodl,w,c
  3781  00147E  2606               	addwf	___wmul@product+1,f,c
  3782  001480  C005  F001         	movff	___wmul@product,?___wmul
  3783  001484  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3784  001488  0012               	return	
  3785  00148A                     __end_of___wmul:
  3786                           	opt stack 0
  3787                           pclatu	equ	0xFFB
  3788                           pclath	equ	0xFFA
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           postinc0	equ	0xFEE
  3797                           fsr0h	equ	0xFEA
  3798                           fsr0l	equ	0xFE9
  3799                           wreg	equ	0xFE8
  3800                           indf1	equ	0xFE7
  3801                           fsr1h	equ	0xFE2
  3802                           fsr1l	equ	0xFE1
  3803                           indf2	equ	0xFDF
  3804                           fsr2h	equ	0xFDA
  3805                           fsr2l	equ	0xFD9
  3806                           status	equ	0xFD8
  3807                           
  3808 ;; *************** function _ReadUSART *****************
  3809 ;; Defined at:
  3810 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  data            1    0[COMRAM] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      unsigned char 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3827 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        1 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_ISR
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text22
  3838  0014CA                     __ptext22:
  3839                           	opt stack 0
  3840  0014CA                     _ReadUSART:
  3841                           	opt stack 25
  3842                           
  3843                           ;incstack = 0
  3844  0014CA  0EF2               	movlw	242
  3845  0014CC  1643               	andwf	_USART_Status,f,c
  3846  0014CE  ACAB               	btfss	4011,6,c	;volatile
  3847  0014D0  D003               	goto	i2l271
  3848  0014D2  9043               	bcf	_USART_Status,0,c
  3849  0014D4  B0AB               	btfsc	4011,0,c	;volatile
  3850  0014D6  8043               	bsf	_USART_Status,0,c
  3851  0014D8                     i2l271:
  3852  0014D8  B4AB               	btfsc	4011,2,c	;volatile
  3853  0014DA  8443               	bsf	_USART_Status,2,c
  3854  0014DC  B2AB               	btfsc	4011,1,c	;volatile
  3855  0014DE  8643               	bsf	_USART_Status,3,c
  3856  0014E0  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  3857  0014E4  5001               	movf	ReadUSART@data,w,c
  3858  0014E6  0012               	return	
  3859  0014E8                     __end_of_ReadUSART:
  3860                           	opt stack 0
  3861                           pclatu	equ	0xFFB
  3862                           pclath	equ	0xFFA
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           prodh	equ	0xFF4
  3868                           prodl	equ	0xFF3
  3869                           intcon	equ	0xFF2
  3870                           postinc0	equ	0xFEE
  3871                           fsr0h	equ	0xFEA
  3872                           fsr0l	equ	0xFE9
  3873                           wreg	equ	0xFE8
  3874                           indf1	equ	0xFE7
  3875                           fsr1h	equ	0xFE2
  3876                           fsr1l	equ	0xFE1
  3877                           indf2	equ	0xFDF
  3878                           fsr2h	equ	0xFDA
  3879                           fsr2l	equ	0xFD9
  3880                           status	equ	0xFD8
  3881                           pclatu	equ	0xFFB
  3882                           pclath	equ	0xFFA
  3883                           tblptru	equ	0xFF8
  3884                           tblptrh	equ	0xFF7
  3885                           tblptrl	equ	0xFF6
  3886                           tablat	equ	0xFF5
  3887                           prodh	equ	0xFF4
  3888                           prodl	equ	0xFF3
  3889                           intcon	equ	0xFF2
  3890                           postinc0	equ	0xFEE
  3891                           fsr0h	equ	0xFEA
  3892                           fsr0l	equ	0xFE9
  3893                           wreg	equ	0xFE8
  3894                           indf1	equ	0xFE7
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           fsr2h	equ	0xFDA
  3899                           fsr2l	equ	0xFD9
  3900                           status	equ	0xFD8
  3901                           
  3902                           	psect	rparam
  3903  0000                     pclatu	equ	0xFFB
  3904                           pclath	equ	0xFFA
  3905                           tblptru	equ	0xFF8
  3906                           tblptrh	equ	0xFF7
  3907                           tblptrl	equ	0xFF6
  3908                           tablat	equ	0xFF5
  3909                           prodh	equ	0xFF4
  3910                           prodl	equ	0xFF3
  3911                           intcon	equ	0xFF2
  3912                           postinc0	equ	0xFEE
  3913                           fsr0h	equ	0xFEA
  3914                           fsr0l	equ	0xFE9
  3915                           wreg	equ	0xFE8
  3916                           indf1	equ	0xFE7
  3917                           fsr1h	equ	0xFE2
  3918                           fsr1l	equ	0xFE1
  3919                           indf2	equ	0xFDF
  3920                           fsr2h	equ	0xFDA
  3921                           fsr2l	equ	0xFD9
  3922                           status	equ	0xFD8


Data Sizes:
    Strings     57
    Constant    4
    Data        2
    BSS         650
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      76
    BANK0           160     19      37
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(2) Largest target is 200
		 -> MessageBuffer(BANK1[200]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 2047
		 -> STR_10(CODE[17]), STR_9(CODE[2]), STR_8(CODE[27]), STR_7(CODE[17]), 
		 -> STR_6(CODE[2]), RAM(DATA[2047]), STR_5(CODE[27]), STR_4(CODE[17]), 
		 -> STR_3(CODE[2]), STR_2(CODE[27]), DC_str(COMRAM[5]), MessageBuffer(BANK1[200]), 

    lcd_puts@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_putsUSART
    _putsUSART->_itoa
    _itoa->_utoa
    _utoa->i2___lwdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_lcd_putnum
    _lcd_puts->_lcd_gotoxy
    _lcd_putnum->_lcd_gotoxy
    _lcd_gotoxy->_lcd_write_byte
    _lcd_init->_lcd_write_byte
    _lcd_write_byte->_lcd_write_nibble

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   17538
                                             16 BANK0      3     3      0
                           _OpenPWM1
                          _OpenUSART
                          _SetDCPWM1
                         _lcd_gotoxy
                           _lcd_init
                         _lcd_putnum
                           _lcd_puts
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    4558
                                              8 BANK0      2     0      2
                         _lcd_gotoxy
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_putnum                                           8     3      5    5522
                                              8 BANK0      8     3      5
                            ___lwdiv
                         _lcd_gotoxy
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           3     2      1    2612
                                              5 BANK0      3     2      1
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     563
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2359
                                              5 BANK0      1     1      0
                     _lcd_write_byte
                   _lcd_write_nibble
 ---------------------------------------------------------------------------------
 (1) _lcd_write_byte                                       2     1      1    1742
                                              3 BANK0      2     1      1
                   _lcd_write_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_write_nibble                                     3     2      1     617
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _SetDCPWM1                                            6     4      2     253
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenPWM1                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0    3511
                                             28 COMRAM    14    14      0
                          _ReadUSART
                               _atoi
                               _itoa
                          _putsUSART
                            _strncpy
 ---------------------------------------------------------------------------------
 (6) _strncpy                                              8     2      6     333
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _putsUSART                                            4     2      2     898
                                             24 COMRAM     4     2      2
                         _WriteUSART
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    1610
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 9     3      6    1047
                                              7 COMRAM     9     3      6
                            ___lwmod
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2     647
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenPWM1
   _OpenUSART
   _SetDCPWM1
   _lcd_gotoxy
     _lcd_write_byte
       _lcd_write_nibble
   _lcd_init
     _lcd_write_byte
       _lcd_write_nibble
     _lcd_write_nibble
   _lcd_putnum
     ___lwdiv
     _lcd_gotoxy
       _lcd_write_byte
         _lcd_write_nibble
     _lcd_write_byte
       _lcd_write_nibble
   _lcd_puts
     _lcd_gotoxy
       _lcd_write_byte
         _lcd_write_nibble
     _lcd_write_byte
       _lcd_write_nibble
   _lcd_write_byte
     _lcd_write_nibble

 _ISR (ROOT)
   _ReadUSART
   _atoi
     ___wmul
     _isdigit
   _itoa
     _utoa
       ___lwmod
       i2___lwdiv
   _putsUSART
     _WriteUSART
     _itoa (ARG)
       _utoa
         ___lwmod
         i2___lwdiv
   _strncpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      25       5       23.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      4C       1       80.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C9      20        0.0%
DATA                 0      0     2C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jan 03 20:02:50 2017

                        _c 0044                          _i 003F                          _k 0041  
      ___wmul@multiplicand 0003         i2___lwdiv@dividend 0001                        l241 1062  
                      l145 11BA                        l250 10B4                        l148 1214  
                      l245 107C                        l246 107E                        l247 108A  
                      l248 108C                        l835 1124                        _PR2 000FCB  
                      _ISR 0008                        wreg 000FE8               __CFG_FOSC$HS 000000  
              lcd_gotoxy@x 0067                lcd_gotoxy@y 0065               __CFG_LVP$OFF 000000  
                     ?_ISR 0001               __CFG_WDT$OFF 000000                       l2120 1052  
                     l2106 1116                       l2210 100E                       l2202 0FD6  
                     l2212 1018                       l2206 0FF6                       l2214 101E  
                     l2128 1064                       l2232 119A                       l2218 1138  
                     l2094 10D4                       l2270 0BE0                       l2096 10E0  
                     l2098 10E6                       l2198 0FA6                       STR_1 0831  
                     STR_2 0805                       STR_3 082F                       STR_4 0820  
                     STR_5 0805                       STR_6 082F                       STR_7 0820  
                     STR_8 0805                       STR_9 082F                       u2007 0D0E  
                     u2017 0D2C                       u2027 0D4A                       u2037 0D68  
                     u2047 0E50                       u2057 0EEE                       u2067 0EF8  
                     u1715 13E8                       u1555 0E4C                       u1556 0E4E  
                     _PIE1 000F9D                       u1907 0C52                       u1917 0C64  
                     u1927 0C76                       u1937 11E2                       u1947 11F8  
                     _PEIE 007F96                       u1957 120E                       u1877 0BCC  
                     u1967 0C8C                       u1887 0C2E                       u1977 0CA8  
                     u1897 0C40                       u1987 0CC6                       _RCIE 007CED  
                     _RCIF 007CF5                       u1997 0CE4                       _RCIP 007CFD  
                     i2l97 0B1C     __end_of_lcd_write_byte 14AA                       _atoi 0D74  
                     _main 0B56                       _itoa 132E                       fsr0h 000FEA  
                     fsr1h 000FE2         i2___lwdiv@quotient 0005                       fsr0l 000FE9  
                     fsr2h 000FDA                       indf1 000FE7                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9                       _utoa 0F00  
              lcd_puts@str 0068                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 0018                lcd_putnum@r 006E  
              lcd_putnum@x 006B                lcd_putnum@y 006C              __CFG_MCLRE$ON 000000  
                    ??_ISR 001D                      ?_atoi 0007                      ?_main 0001  
                    ?_itoa 0011                      STR_10 0820                      ?_utoa 0008  
                    _T2CON 000FCA            __end_of___lwdiv 112E            __end_of___lwmod 1464  
                    i2l271 14D8                      i2l258 12D2                      i2l471 0E34  
                    i2l472 0E3C                      i2l741 0F80                      i2l835 13D0  
                    i2l845 145A                      _RCREG 000FAE                      _RCSTA 000FAB  
                    _SPBRG 000FAF                      _TRISC 000F94                      _TRISD 000F95  
                    _TXREG 000FAD                      _TXSTA 000FAC                      _lcd_x 0046  
                    _lcd_y 0047            __end_of_isdigit 14CA                      atoi@a 000C  
                    atoi@s 0007                      tablat 000FF5                      utoa@c 0010  
                    utoa@v 000E                      status 000FD8            ?_lcd_write_byte 0063  
          __end_of_strncpy 12D2         __size_ofi2___lwdiv 0052             WriteUSART@data 0001  
          __initialization 1216               __end_of_atoi 0E3E               __end_of_main 0C84  
             __end_of_itoa 1388               __end_of_utoa 0FA4           __end_of_OpenPWM1 14FC  
                   ??_atoi 0009                     ??_main 0070                     ??_itoa 0017  
                   ??_utoa 000E              __activetblptr 000002                     _CCPR1L 000FBE  
                   i2l2000 0B14                     i2l1520 1430                     i2l1522 1438  
                   i2l1524 143C                     i2l1540 13A6                     i2l1550 13C6  
                   i2l1542 13AA                     i2l1528 1450                     i2l1608 0F42  
                   i2l1538 139E                     i2l1802 12C0                     i2l1822 0DC8  
                   i2l1806 0D76                     i2l1592 14C2                     i2l1808 0D7A  
                   i2l1576 1508                     i2l1826 0E02                     i2l1818 0DB8  
                   i2l1930 093A                     i2l1940 096A                     i2l1598 0F08  
                   i2l1846 1362                     i2l1790 127E                     i2l1934 0954  
                   i2l1952 09DC                     i2l1928 092C                     i2l1954 09EA  
                   i2l1796 12A6                     i2l1964 0A1A                     i2l1798 12B0  
                   i2l1982 0AB6                     i2l1958 0A04                     i2l1976 0A8E  
                   i2l1992 0AD4                     i2l1994 0AE6                     i2l1978 0A9C  
                   i2l1988 0ACC                     i2l1998 0B00                     _DC_str 0048  
       __size_of_ReadUSART 001E                     _SPBRGH 000FB0         __size_of_SetDCPWM1 0048  
         __end_of_lcd_init 0D74         __size_of_OpenUSART 0080           __end_of_lcd_puts 1036  
                   ___wmul 1464   __end_of_lcd_write_nibble 0F00                  ??___lwdiv 0064  
                ??___lwmod 0005                     clear_0 121C                     clear_1 1228  
                   clear_2 1234                     clear_3 1240                     clear_4 124C  
                   itoa@cp 0017                  ??_isdigit 0001          __end_ofi2___lwdiv 13DA  
     _lcd_lower_row_buffer 0300               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8              lcd_putnum@dec 006D  
            lcd_putnum@len 006A              lcd_putnum@num 0068                  ??_strncpy 0007  
            _MessageBuffer 0100                 __accesstop 0060    __end_of__initialization 126A  
               _WriteUSART 14FC             __pcstackCOMRAM 0001               __pidataBANK0 150E  
        __end_of_ReadUSART 14E8          __end_of_SetDCPWM1 1422             lcd_gotoxy@addr 0066  
            ReadUSART@data 0001          __end_of_OpenUSART 10B6                 __pbssBANK0 0073  
               __pbssBANK1 0100                 __pbssBANK2 0200                 __pbssBANK3 0300  
                ?_OpenPWM1 0001                    ?___wmul 0001                    _CCP1CON 000FBD  
            putsUSART@data 0019                 _lcd_gotoxy 11A2         __size_of_putsUSART 005C  
         ??_lcd_write_byte 0064                 _lcd_putnum 112E                  ?_lcd_init 0001  
                ?_lcd_puts 0068                 ??_OpenPWM1 0060                    __Hparam 0000  
                  __Lparam 0000               _flag_newline 0045                ?_WriteUSART 0001  
          __size_of___wmul 0026                    ___lwdiv 10B6                    ___lwmod 1422  
             __psmallconst 0800      lcd_write_byte@is_data 0063                    __pcinit 1216  
                  __ramtop 0800                    __ptext0 0B56                    __ptext1 0FA4  
                  __ptext2 112E                    __ptext3 11A2                    __ptext4 10B6  
                  __ptext5 0C84                    __ptext6 148A                    __ptext7 0E3E  
                  __ptext8 13DA                    __ptext9 1036               __size_of_ISR 0B4E  
                _T2CONbits 000FCA         lcd_write_byte@byte 0064                    _isdigit 14AA  
     _lcd_upper_row_buffer 0200                 ??_lcd_init 0065             __pintcode_body 0840  
                  _strncpy 1274                 ??_lcd_puts 006A       end_of_initialization 126A  
         _cantidadLetrasUP 003D                    itoa@buf 0011                    itoa@val 0013  
            __Lmediumconst 0000                    int_func 0840                  _RCSTAbits 000FAB  
                  postinc0 000FEE          __end_of_putsUSART 132E                    utoa@buf 0008  
                  utoa@val 000A          ?_lcd_write_nibble 0060         ??_lcd_write_nibble 0061  
                _TRISCbits 000F94                ?_lcd_gotoxy 0065                ?_lcd_putnum 0068  
      __size_of_WriteUSART 0012          i2___lwdiv@divisor 0003                  i2___lwdiv 1388  
        i2___lwdiv@counter 0007                 main@config 0071                  _TXSTAbits 000FAC  
           __end_of___wmul 148A        start_initialization 1216                  _ReadUSART 14CA  
              __end_of_ISR 0B56                  _SetDCPWM1 13DA            SetDCPWM1@DCycle 0064  
                _DutyCycle 0083   _lcd_lower_display_buffer 002B                 ?i2___lwdiv 0001  
                _OpenUSART 1036          __size_of_OpenPWM1 0014        __size_of_lcd_gotoxy 0074  
                 ??___wmul 0005                __pdataBANK0 0083        __size_of_lcd_putnum 0074  
              __pbssCOMRAM 002B                 ?_ReadUSART 0001              __pcstackBANK0 0060  
               ?_SetDCPWM1 0060        __end_of__stringdata 083E               _isdigit$1328 0002  
               ?_OpenUSART 0060          __size_of_lcd_init 00F0          __size_of_lcd_puts 0092  
         ___lwdiv@dividend 0060               ??_WriteUSART 0001                  __pintcode 0008  
                 ?___lwdiv 0060                   ?___lwmod 0001                __smallconst 0800  
                 ?_isdigit 0001           ___lwdiv@quotient 0065            _LCD_ROW_ADDRESS 0801  
                 ?_strncpy 0001                ??i2___lwdiv 0005         __end_of_WriteUSART 150E  
           ___wmul@product 0005                   _LATDbits 000F8C                strncpy@from 0003  
                 _PIE1bits 000F9D                strncpy@size 0005                   i2u130_40 1326  
                 i2u130_47 131C                   i2u129_40 12F6                   i2u129_47 12EC  
                 _PIR1bits 000F9E   _lcd_upper_display_buffer 0073                  _putsUSART 12D2  
              __stringdata 0805          ___wmul@multiplier 0001                ??_ReadUSART 0001  
                main@spbrg 0072               ??_lcd_gotoxy 0066                ??_SetDCPWM1 0062  
             ??_lcd_putnum 006D  __size_of_lcd_write_nibble 00C2         _cantidadLetrasDOWN 003B  
              ??_OpenUSART 0062         SetDCPWM1@dutycycle 0060            OpenUSART@config 0065  
                 _OpenPWM1 14E8    __size_of_lcd_write_byte 0020                   __Hrparam 0000  
  lcd_write_nibble@is_data 0060                   __Lrparam 0000         __end_of_lcd_gotoxy 1216  
         __size_of___lwdiv 0078         __end_of_lcd_putnum 11A2           __size_of___lwmod 0042  
               ?_putsUSART 0019    __end_of_LCD_ROW_ADDRESS 0805             OpenPWM1@period 0060  
         __size_of_isdigit 0020            ___lwdiv@divisor 0062            ___lwdiv@counter 0064  
                 __ptext10 14E8                   __ptext20 14AA                   __ptext12 1274  
                 __ptext21 1464                   __ptext13 12D2                   __ptext22 14CA  
                 __ptext14 14FC                   __ptext15 132E                   __ptext16 0F00  
                 __ptext17 1388                   __ptext18 1422                   __ptext19 0D74  
                 _lcd_init 0C84                   _lcd_puts 0FA4           __size_of_strncpy 005E  
            __size_of_atoi 00CA              __size_of_main 012E              __size_of_itoa 005A  
            __size_of_utoa 00A4                   atoi@sign 000B                 _INTCONbits 000FF2  
           OpenUSART@spbrg 0060     lcd_write_nibble@nibble 0062                   itoa@base 0015  
                 isdigit@c 0003                   intlevel2 0000           ___lwmod@dividend 0001  
                strncpy@cp 0007                  strncpy@to 0001                ??_putsUSART 001B  
                 utoa@base 000C            ___lwmod@divisor 0003            ___lwmod@counter 0005  
         _lcd_write_nibble 0E3E               _USART_Status 0043             _lcd_write_byte 148A  
