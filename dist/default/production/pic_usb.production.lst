

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Jan 03 19:57:16 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataBANK0
    44  0014AA                     __pidataBANK0:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _DutyCycle
    48  0014AA  000A               	dw	10
    49                           
    50                           	psect	smallconst
    51  000800                     __psmallconst:
    52                           	opt stack 0
    53  000800  00                 	db	0
    54  000801                     _LCD_ROW_ADDRESS:
    55                           	opt stack 0
    56  000801  80                 	db	128
    57  000802  C0                 	db	192
    58  000803  94                 	db	148
    59  000804  D4                 	db	212
    60  000805                     __end_of_LCD_ROW_ADDRESS:
    61                           	opt stack 0
    62  0000                     _CCP1CON	set	4029
    63  0000                     _CCPR1L	set	4030
    64  0000                     _INTCONbits	set	4082
    65  0000                     _LATDbits	set	3980
    66  0000                     _PIE1	set	3997
    67  0000                     _PIE1bits	set	3997
    68  0000                     _PIR1bits	set	3998
    69  0000                     _PR2	set	4043
    70  0000                     _RCREG	set	4014
    71  0000                     _RCSTA	set	4011
    72  0000                     _RCSTAbits	set	4011
    73  0000                     _SPBRG	set	4015
    74  0000                     _SPBRGH	set	4016
    75  0000                     _T2CON	set	4042
    76  0000                     _T2CONbits	set	4042
    77  0000                     _TRISC	set	3988
    78  0000                     _TRISCbits	set	3988
    79  0000                     _TRISD	set	3989
    80  0000                     _TXREG	set	4013
    81  0000                     _TXSTA	set	4012
    82  0000                     _TXSTAbits	set	4012
    83  0000                     _PEIE	set	32662
    84  0000                     _RCIE	set	31981
    85  0000                     _RCIF	set	31989
    86  0000                     _RCIP	set	31997
    87  000805                     __stringdata:
    88                           	opt stack 0
    89  000805                     STR_2:
    90  000805  4D                 	db	77	;'M'
    91  000806  6F                 	db	111	;'o'
    92  000807  64                 	db	100	;'d'
    93  000808  69                 	db	105	;'i'
    94  000809  66                 	db	102	;'f'
    95  00080A  69                 	db	105	;'i'
    96  00080B  63                 	db	99	;'c'
    97  00080C  61                 	db	97	;'a'
    98  00080D  64                 	db	100	;'d'
    99  00080E  6F                 	db	111	;'o'
   100  00080F  20                 	db	32
   101  000810  65                 	db	101	;'e'
   102  000811  6C                 	db	108	;'l'
   103  000812  20                 	db	32
   104  000813  53                 	db	83	;'S'
   105  000814  65                 	db	101	;'e'
   106  000815  74                 	db	116	;'t'
   107  000816  50                 	db	80	;'P'
   108  000817  6F                 	db	111	;'o'
   109  000818  69                 	db	105	;'i'
   110  000819  6E                 	db	110	;'n'
   111  00081A  74                 	db	116	;'t'
   112  00081B  20                 	db	32
   113  00081C  61                 	db	97	;'a'
   114  00081D  3A                 	db	58	;':'
   115  00081E  20                 	db	32
   116  00081F  00                 	db	0
   117  000820                     STR_4:
   118  000820  45                 	db	69	;'E'
   119  000821  72                 	db	114	;'r'
   120  000822  72                 	db	114	;'r'
   121  000823  6F                 	db	111	;'o'
   122  000824  72                 	db	114	;'r'
   123  000825  20                 	db	32
   124  000826  6D                 	db	109	;'m'
   125  000827  61                 	db	97	;'a'
   126  000828  71                 	db	113	;'q'
   127  000829  75                 	db	117	;'u'
   128  00082A  69                 	db	105	;'i'
   129  00082B  6E                 	db	110	;'n'
   130  00082C  6F                 	db	111	;'o'
   131  00082D  6C                 	db	108	;'l'
   132  00082E  61                 	db	97	;'a'
   133  00082F  0A                 	db	10
   134  000830  00                 	db	0
   135  000831                     STR_1:
   136  000831  44                 	db	68	;'D'
   137  000832  75                 	db	117	;'u'
   138  000833  74                 	db	116	;'t'
   139  000834  79                 	db	121	;'y'
   140  000835  20                 	db	32
   141  000836  43                 	db	67	;'C'
   142  000837  79                 	db	121	;'y'
   143  000838  63                 	db	99	;'c'
   144  000839  6C                 	db	108	;'l'
   145  00083A  65                 	db	101	;'e'
   146  00083B  3A                 	db	58	;':'
   147  00083C  20                 	db	32
   148  00083D  00                 	db	0
   149  00083E                     __end_of__stringdata:
   150                           	opt stack 0
   151                           
   152                           ; #config settings
   153  00083E  00                 	db	0	; dummy byte at the end
   154  0000                     
   155                           	psect	cinit
   156  0011B2                     __pcinit:
   157                           	opt stack 0
   158  0011B2                     start_initialization:
   159                           	opt stack 0
   160  0011B2                     __initialization:
   161                           	opt stack 0
   162                           
   163                           ; Clear objects allocated to BANK3 (200 bytes)
   164  0011B2  EE03  F000         	lfsr	0,__pbssBANK3
   165  0011B6  0EC8               	movlw	200
   166  0011B8                     clear_0:
   167  0011B8  6AEE               	clrf	postinc0,c
   168  0011BA  06E8               	decf	wreg,f,c
   169  0011BC  E1FD               	bnz	clear_0
   170                           
   171                           ; Clear objects allocated to BANK2 (200 bytes)
   172  0011BE  EE02  F000         	lfsr	0,__pbssBANK2
   173  0011C2  0EC8               	movlw	200
   174  0011C4                     clear_1:
   175  0011C4  6AEE               	clrf	postinc0,c
   176  0011C6  06E8               	decf	wreg,f,c
   177  0011C8  E1FD               	bnz	clear_1
   178                           
   179                           ; Clear objects allocated to BANK1 (200 bytes)
   180  0011CA  EE01  F000         	lfsr	0,__pbssBANK1
   181  0011CE  0EC8               	movlw	200
   182  0011D0                     clear_2:
   183  0011D0  6AEE               	clrf	postinc0,c
   184  0011D2  06E8               	decf	wreg,f,c
   185  0011D4  E1FD               	bnz	clear_2
   186                           
   187                           ; Clear objects allocated to BANK0 (16 bytes)
   188  0011D6  EE00  F073         	lfsr	0,__pbssBANK0
   189  0011DA  0E10               	movlw	16
   190  0011DC                     clear_3:
   191  0011DC  6AEE               	clrf	postinc0,c
   192  0011DE  06E8               	decf	wreg,f,c
   193  0011E0  E1FD               	bnz	clear_3
   194                           
   195                           ; Clear objects allocated to COMRAM (34 bytes)
   196  0011E2  EE00  F02B         	lfsr	0,__pbssCOMRAM
   197  0011E6  0E22               	movlw	34
   198  0011E8                     clear_4:
   199  0011E8  6AEE               	clrf	postinc0,c
   200  0011EA  06E8               	decf	wreg,f,c
   201  0011EC  E1FD               	bnz	clear_4
   202                           
   203                           ; Initialize objects allocated to BANK0 (2 bytes)
   204                           ; load TBLPTR registers with __pidataBANK0
   205  0011EE  0EAA               	movlw	low __pidataBANK0
   206  0011F0  6EF6               	movwf	tblptrl,c
   207  0011F2  0E14               	movlw	high __pidataBANK0
   208  0011F4  6EF7               	movwf	tblptrh,c
   209  0011F6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   210  0011F8  6EF8               	movwf	tblptru,c
   211  0011FA  0009               	tblrd		*+	;fetch initializer
   212  0011FC  CFF5 F083          	movff	tablat,__pdataBANK0
   213  001200  0009               	tblrd		*+	;fetch initializer
   214  001202  CFF5 F084          	movff	tablat,__pdataBANK0+1
   215  001206                     end_of_initialization:
   216                           	opt stack 0
   217  001206                     __end_of__initialization:
   218                           	opt stack 0
   219  001206  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  001208  6EF8               	movwf	tblptru,c
   221  00120A  0100               	movlb	0
   222  00120C  EF79  F005         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           wreg	equ	0xFE8
   229                           
   230                           	psect	bssCOMRAM
   231  00002B                     __pbssCOMRAM:
   232                           	opt stack 0
   233  00002B                     _lcd_lower_display_buffer:
   234                           	opt stack 0
   235  00002B                     	ds	16
   236  00003B                     _cantidadLetrasDOWN:
   237                           	opt stack 0
   238  00003B                     	ds	2
   239  00003D                     _cantidadLetrasUP:
   240                           	opt stack 0
   241  00003D                     	ds	2
   242  00003F                     _i:
   243                           	opt stack 0
   244  00003F                     	ds	2
   245  000041                     _k:
   246                           	opt stack 0
   247  000041                     	ds	2
   248  000043                     _USART_Status:
   249                           	opt stack 0
   250  000043                     	ds	1
   251  000044                     _c:
   252                           	opt stack 0
   253  000044                     	ds	1
   254  000045                     _flag_newline:
   255                           	opt stack 0
   256  000045                     	ds	1
   257  000046                     _lcd_x:
   258                           	opt stack 0
   259  000046                     	ds	1
   260  000047                     _lcd_y:
   261                           	opt stack 0
   262  000047                     	ds	1
   263  000048                     _DC_str:
   264                           	opt stack 0
   265  000048                     	ds	5
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           
   273                           	psect	bssBANK0
   274  000073                     __pbssBANK0:
   275                           	opt stack 0
   276  000073                     _lcd_upper_display_buffer:
   277                           	opt stack 0
   278  000073                     	ds	16
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	dataBANK0
   287  000083                     __pdataBANK0:
   288                           	opt stack 0
   289  000083                     _DutyCycle:
   290                           	opt stack 0
   291  000083                     	ds	2
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	bssBANK1
   300  000100                     __pbssBANK1:
   301                           	opt stack 0
   302  000100                     _MessageBuffer:
   303                           	opt stack 0
   304  000100                     	ds	200
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           
   312                           	psect	bssBANK2
   313  000200                     __pbssBANK2:
   314                           	opt stack 0
   315  000200                     _lcd_upper_row_buffer:
   316                           	opt stack 0
   317  000200                     	ds	200
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           
   325                           	psect	bssBANK3
   326  000300                     __pbssBANK3:
   327                           	opt stack 0
   328  000300                     _lcd_lower_row_buffer:
   329                           	opt stack 0
   330  000300                     	ds	200
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           
   338                           	psect	cstackBANK0
   339  000060                     __pcstackBANK0:
   340                           	opt stack 0
   341  000060                     ?___lwdiv:
   342                           	opt stack 0
   343  000060                     lcd_write_nibble@is_data:
   344                           	opt stack 0
   345  000060                     OpenPWM1@period:
   346                           	opt stack 0
   347  000060                     SetDCPWM1@dutycycle:
   348                           	opt stack 0
   349  000060                     OpenUSART@spbrg:
   350                           	opt stack 0
   351  000060                     ___lwdiv@dividend:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x0
   355  000060                     	ds	1
   356  000061                     ??_lcd_write_nibble:
   357                           
   358                           ; 0 bytes @ 0x1
   359  000061                     	ds	1
   360  000062                     ??_OpenUSART:
   361  000062                     ??_SetDCPWM1:
   362  000062                     lcd_write_nibble@nibble:
   363                           	opt stack 0
   364  000062                     ___lwdiv@divisor:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000062                     	ds	1
   369  000063                     lcd_write_byte@is_data:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x3
   373  000063                     	ds	1
   374  000064                     lcd_write_byte@byte:
   375                           	opt stack 0
   376  000064                     ___lwdiv@counter:
   377                           	opt stack 0
   378  000064                     SetDCPWM1@DCycle:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x4
   382  000064                     	ds	1
   383  000065                     ??_lcd_init:
   384  000065                     lcd_gotoxy@y:
   385                           	opt stack 0
   386  000065                     OpenUSART@config:
   387                           	opt stack 0
   388  000065                     ___lwdiv@quotient:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x5
   392  000065                     	ds	1
   393  000066                     lcd_gotoxy@addr:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x6
   397  000066                     	ds	1
   398  000067                     lcd_gotoxy@x:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x7
   402  000067                     	ds	1
   403  000068                     lcd_putnum@num:
   404                           	opt stack 0
   405  000068                     lcd_puts@str:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x8
   409  000068                     	ds	2
   410  00006A                     lcd_putnum@len:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0xA
   414  00006A                     	ds	1
   415  00006B                     lcd_putnum@x:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0xB
   419  00006B                     	ds	1
   420  00006C                     lcd_putnum@y:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0xC
   424  00006C                     	ds	1
   425  00006D                     lcd_putnum@dec:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0xD
   429  00006D                     	ds	1
   430  00006E                     lcd_putnum@r:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xE
   434  00006E                     	ds	2
   435  000070                     ??_main:
   436                           
   437                           ; 0 bytes @ 0x10
   438  000070                     	ds	1
   439  000071                     main@config:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x11
   443  000071                     	ds	1
   444  000072                     main@spbrg:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x12
   448  000072                     	ds	1
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           
   456                           	psect	cstackCOMRAM
   457  000001                     __pcstackCOMRAM:
   458                           	opt stack 0
   459  000001                     ??_isdigit:
   460  000001                     ?___wmul:
   461                           	opt stack 0
   462  000001                     ?___lwmod:
   463                           	opt stack 0
   464  000001                     ?i2___lwdiv:
   465                           	opt stack 0
   466  000001                     ReadUSART@data:
   467                           	opt stack 0
   468  000001                     WriteUSART@data:
   469                           	opt stack 0
   470  000001                     ___wmul@multiplier:
   471                           	opt stack 0
   472  000001                     ___lwmod@dividend:
   473                           	opt stack 0
   474  000001                     strncpy@to:
   475                           	opt stack 0
   476  000001                     i2___lwdiv@dividend:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x0
   480  000001                     	ds	1
   481  000002                     _isdigit$1328:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x1
   485  000002                     	ds	1
   486  000003                     isdigit@c:
   487                           	opt stack 0
   488  000003                     ___wmul@multiplicand:
   489                           	opt stack 0
   490  000003                     ___lwmod@divisor:
   491                           	opt stack 0
   492  000003                     strncpy@from:
   493                           	opt stack 0
   494  000003                     i2___lwdiv@divisor:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x2
   498  000003                     	ds	2
   499  000005                     ___lwmod@counter:
   500                           	opt stack 0
   501  000005                     ___wmul@product:
   502                           	opt stack 0
   503  000005                     strncpy@size:
   504                           	opt stack 0
   505  000005                     i2___lwdiv@quotient:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x4
   509  000005                     	ds	2
   510  000007                     ?_atoi:
   511                           	opt stack 0
   512  000007                     i2___lwdiv@counter:
   513                           	opt stack 0
   514  000007                     atoi@s:
   515                           	opt stack 0
   516  000007                     strncpy@cp:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x6
   520  000007                     	ds	1
   521  000008                     utoa@buf:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x7
   525  000008                     	ds	1
   526  000009                     ??_atoi:
   527                           
   528                           ; 0 bytes @ 0x8
   529  000009                     	ds	1
   530  00000A                     utoa@val:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x9
   534  00000A                     	ds	1
   535  00000B                     atoi@sign:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0xA
   539  00000B                     	ds	1
   540  00000C                     atoi@a:
   541                           	opt stack 0
   542  00000C                     utoa@base:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0xB
   546  00000C                     	ds	2
   547  00000E                     utoa@v:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xD
   551  00000E                     	ds	2
   552  000010                     utoa@c:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0xF
   556  000010                     	ds	1
   557  000011                     ?_itoa:
   558                           	opt stack 0
   559  000011                     itoa@buf:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x10
   563  000011                     	ds	2
   564  000013                     itoa@val:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x12
   568  000013                     	ds	2
   569  000015                     itoa@base:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x14
   573  000015                     	ds	2
   574  000017                     itoa@cp:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x16
   578  000017                     	ds	2
   579  000019                     putsUSART@data:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x18
   583  000019                     	ds	2
   584  00001B                     ??_putsUSART:
   585                           
   586                           ; 0 bytes @ 0x1A
   587  00001B                     	ds	2
   588  00001D                     ??_ISR:
   589                           
   590                           ; 0 bytes @ 0x1C
   591  00001D                     	ds	14
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           
   599 ;;
   600 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   601 ;;
   602 ;; *************** function _main *****************
   603 ;; Defined at:
   604 ;;		line 46 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  spbrg           1   18[BANK0 ] unsigned char 
   609 ;;  config          1   17[BANK0 ] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;		None               void
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         0       2       0       0       0       0       0       0       0
   621 ;;      Temps:          0       1       0       0       0       0       0       0       0
   622 ;;      Totals:         0       3       0       0       0       0       0       0       0
   623 ;;Total ram usage:        3 bytes
   624 ;; Hardware stack levels required when called:    8
   625 ;; This function calls:
   626 ;;		_OpenPWM1
   627 ;;		_OpenUSART
   628 ;;		_SetDCPWM1
   629 ;;		_lcd_gotoxy
   630 ;;		_lcd_init
   631 ;;		_lcd_putnum
   632 ;;		_lcd_puts
   633 ;;		_lcd_write_byte
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640  000AF2                     __ptext0:
   641                           	opt stack 0
   642  000AF2                     _main:
   643                           	opt stack 23
   644                           
   645                           ;main.c: 48: unsigned char config = 0, spbrg = 0;
   646                           
   647                           ;incstack = 0
   648  000AF2  0E00               	movlw	0
   649  000AF4  0100               	movlb	0	; () banked
   650  000AF6  6F71               	movwf	main@config& (0+255),b
   651  000AF8  0E00               	movlw	0
   652  000AFA  0100               	movlb	0	; () banked
   653  000AFC  6F72               	movwf	main@spbrg& (0+255),b
   654                           
   655                           ;main.c: 50: TRISC = 0b10000000;
   656  000AFE  0E80               	movlw	128
   657  000B00  6E94               	movwf	3988,c	;volatile
   658                           
   659                           ;main.c: 51: TRISD = 0b00000000;
   660  000B02  0E00               	movlw	0
   661  000B04  6E95               	movwf	3989,c	;volatile
   662                           
   663                           ; BSR set to: 0
   664                           ;main.c: 56: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
   665  000B06  0E4F               	movlw	79
   666  000B08  16AB               	andwf	4011,f,c	;volatile
   667                           
   668                           ; BSR set to: 0
   669  000B0A  9AAC               	bcf	4012,5,c	;volatile
   670                           
   671                           ; BSR set to: 0
   672  000B0C  0ECF               	movlw	207
   673  000B0E  169D               	andwf	3997,f,c	;volatile
   674                           
   675                           ;main.c: 57: config = 0b01111111& 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111;
   676  000B10  0E7C               	movlw	124
   677  000B12  0100               	movlb	0	; () banked
   678  000B14  6F71               	movwf	main@config& (0+255),b
   679                           
   680                           ;main.c: 58: spbrg = 77;
   681  000B16  0E4D               	movlw	77
   682  000B18  0100               	movlb	0	; () banked
   683  000B1A  6F72               	movwf	main@spbrg& (0+255),b
   684                           
   685                           ; BSR set to: 0
   686                           ;main.c: 59: OpenUSART(config, spbrg);
   687  000B1C  0100               	movlb	0	; () banked
   688  000B1E  C072  F060         	movff	main@spbrg,OpenUSART@spbrg
   689  000B22  0100               	movlb	0	; () banked
   690  000B24  6B61               	clrf	(OpenUSART@spbrg+1)& (0+255),b
   691  000B26  0100               	movlb	0	; () banked
   692  000B28  5171               	movf	main@config& (0+255),w,b
   693  000B2A  ECE9  F007         	call	_OpenUSART
   694                           
   695                           ;main.c: 60: RCIF = 0;
   696  000B2E  9A9E               	bcf	3998,5,c	;volatile
   697                           
   698                           ;main.c: 61: RCIP = 0;
   699  000B30  9A9F               	bcf	3999,5,c	;volatile
   700                           
   701                           ;main.c: 62: RCIE = 1;
   702  000B32  8A9D               	bsf	3997,5,c	;volatile
   703                           
   704                           ;main.c: 63: PEIE = 1;
   705  000B34  8CF2               	bsf	intcon,6,c	;volatile
   706                           
   707                           ;main.c: 64: PIR1bits.RCIF = 0;
   708  000B36  9A9E               	bcf	3998,5,c	;volatile
   709                           
   710                           ;main.c: 65: (INTCONbits.GIE = 1);
   711  000B38  8EF2               	bsf	intcon,7,c	;volatile
   712                           
   713                           ;main.c: 69: T2CON = 0b00000111 ;
   714  000B3A  0E07               	movlw	7
   715  000B3C  6ECA               	movwf	4042,c	;volatile
   716                           
   717                           ;main.c: 70: OpenPWM1(0b10111011);
   718  000B3E  0EBB               	movlw	187
   719  000B40  EC42  F00A         	call	_OpenPWM1
   720                           
   721                           ;main.c: 72: SetDCPWM1(DutyCycle);
   722  000B44  C083  F060         	movff	_DutyCycle,SetDCPWM1@dutycycle
   723  000B48  C084  F061         	movff	_DutyCycle+1,SetDCPWM1@dutycycle+1
   724  000B4C  ECBB  F009         	call	_SetDCPWM1	;wreg free
   725                           
   726                           ;main.c: 75: lcd_init();
   727  000B50  EC10  F006         	call	_lcd_init	;wreg free
   728                           
   729                           ;main.c: 76: {lcd_write_byte(0x01, 0); { _delay((unsigned long)((5000)*(12000000/4000000
      +                          .0))); };};
   730  000B54  0E00               	movlw	0
   731  000B56  0100               	movlb	0	; () banked
   732  000B58  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
   733  000B5A  0E01               	movlw	1
   734  000B5C  EC13  F00A         	call	_lcd_write_byte
   735  000B60  0E14               	movlw	20
   736  000B62  0100               	movlb	0	; () banked
   737  000B64  6F70               	movwf	??_main& (0+255),b
   738  000B66  0E7A               	movlw	122
   739  000B68                     u1837:
   740  000B68  2EE8               	decfsz	wreg,f,c
   741  000B6A  D7FE               	goto	u1837
   742  000B6C  2F70               	decfsz	??_main& (0+255),f,b
   743  000B6E  D7FC               	goto	u1837
   744                           
   745                           ;main.c: 77: lcd_gotoxy(0,0);
   746  000B70  0E00               	movlw	0
   747  000B72  0100               	movlb	0	; () banked
   748  000B74  6F65               	movwf	lcd_gotoxy@y& (0+255),b
   749  000B76  0E00               	movlw	0
   750  000B78  EC9F  F008         	call	_lcd_gotoxy
   751  000B7C                     l2224:
   752                           
   753                           ;main.c: 79: {
   754                           ;main.c: 80: SetDCPWM1(DutyCycle);
   755  000B7C  C083  F060         	movff	_DutyCycle,SetDCPWM1@dutycycle
   756  000B80  C084  F061         	movff	_DutyCycle+1,SetDCPWM1@dutycycle+1
   757  000B84  ECBB  F009         	call	_SetDCPWM1	;wreg free
   758                           
   759                           ;main.c: 82: lcd_gotoxy(0,0);
   760  000B88  0E00               	movlw	0
   761  000B8A  0100               	movlb	0	; () banked
   762  000B8C  6F65               	movwf	lcd_gotoxy@y& (0+255),b
   763  000B8E  0E00               	movlw	0
   764  000B90  EC9F  F008         	call	_lcd_gotoxy
   765                           
   766                           ;main.c: 83: lcd_puts("Duty Cycle: ");
   767  000B94  0E08               	movlw	high STR_1
   768  000B96  0100               	movlb	0	; () banked
   769  000B98  6F69               	movwf	(lcd_puts@str+1)& (0+255),b
   770  000B9A  0E31               	movlw	low STR_1
   771  000B9C  0100               	movlb	0	; () banked
   772  000B9E  6F68               	movwf	lcd_puts@str& (0+255),b
   773  000BA0  ECA0  F007         	call	_lcd_puts	;wreg free
   774                           
   775                           ;main.c: 84: lcd_putnum(DutyCycle, 4, 0, 1);
   776  000BA4  C083  F068         	movff	_DutyCycle,lcd_putnum@num
   777  000BA8  C084  F069         	movff	_DutyCycle+1,lcd_putnum@num+1
   778  000BAC  0E04               	movlw	4
   779  000BAE  0100               	movlb	0	; () banked
   780  000BB0  6F6A               	movwf	lcd_putnum@len& (0+255),b
   781  000BB2  0E00               	movlw	0
   782  000BB4  0100               	movlb	0	; () banked
   783  000BB6  6F6B               	movwf	lcd_putnum@x& (0+255),b
   784  000BB8  0E01               	movlw	1
   785  000BBA  0100               	movlb	0	; () banked
   786  000BBC  6F6C               	movwf	lcd_putnum@y& (0+255),b
   787  000BBE  EC65  F008         	call	_lcd_putnum	;wreg free
   788                           
   789                           ;main.c: 85: _delay((unsigned long)((50)*(12000000/4000.0)));
   790  000BC2  0EC3               	movlw	195
   791  000BC4  0100               	movlb	0	; () banked
   792  000BC6  6F70               	movwf	??_main& (0+255),b
   793  000BC8  0ECD               	movlw	205
   794  000BCA                     u1847:
   795  000BCA  2EE8               	decfsz	wreg,f,c
   796  000BCC  D7FE               	goto	u1847
   797  000BCE  2F70               	decfsz	??_main& (0+255),f,b
   798  000BD0  D7FC               	goto	u1847
   799  000BD2  F000               	nop	
   800                           
   801                           ;main.c: 86: _delay((unsigned long)((50)*(12000000/4000.0)));
   802  000BD4  0EC3               	movlw	195
   803  000BD6  0100               	movlb	0	; () banked
   804  000BD8  6F70               	movwf	??_main& (0+255),b
   805  000BDA  0ECD               	movlw	205
   806  000BDC                     u1857:
   807  000BDC  2EE8               	decfsz	wreg,f,c
   808  000BDE  D7FE               	goto	u1857
   809  000BE0  2F70               	decfsz	??_main& (0+255),f,b
   810  000BE2  D7FC               	goto	u1857
   811  000BE4  F000               	nop	
   812                           
   813                           ;main.c: 87: _delay((unsigned long)((50)*(12000000/4000.0)));
   814  000BE6  0EC3               	movlw	195
   815  000BE8  0100               	movlb	0	; () banked
   816  000BEA  6F70               	movwf	??_main& (0+255),b
   817  000BEC  0ECD               	movlw	205
   818  000BEE                     u1867:
   819  000BEE  2EE8               	decfsz	wreg,f,c
   820  000BF0  D7FE               	goto	u1867
   821  000BF2  2F70               	decfsz	??_main& (0+255),f,b
   822  000BF4  D7FC               	goto	u1867
   823  000BF6  F000               	nop	
   824                           
   825                           ;main.c: 88: _delay((unsigned long)((50)*(12000000/4000.0)));
   826  000BF8  0EC3               	movlw	195
   827  000BFA  0100               	movlb	0	; () banked
   828  000BFC  6F70               	movwf	??_main& (0+255),b
   829  000BFE  0ECD               	movlw	205
   830  000C00                     u1877:
   831  000C00  2EE8               	decfsz	wreg,f,c
   832  000C02  D7FE               	goto	u1877
   833  000C04  2F70               	decfsz	??_main& (0+255),f,b
   834  000C06  D7FC               	goto	u1877
   835  000C08  F000               	nop	
   836                           
   837                           ;main.c: 89: _delay((unsigned long)((50)*(12000000/4000.0)));
   838  000C0A  0EC3               	movlw	195
   839  000C0C  0100               	movlb	0	; () banked
   840  000C0E  6F70               	movwf	??_main& (0+255),b
   841  000C10  0ECD               	movlw	205
   842  000C12                     u1887:
   843  000C12  2EE8               	decfsz	wreg,f,c
   844  000C14  D7FE               	goto	u1887
   845  000C16  2F70               	decfsz	??_main& (0+255),f,b
   846  000C18  D7FC               	goto	u1887
   847  000C1A  F000               	nop	
   848                           
   849                           ;main.c: 90: LATDbits.LATD0 =~ LATDbits.LATD0;
   850  000C1C  708C               	btg	3980,0,c	;volatile
   851  000C1E  D7AE               	goto	l2224
   852  000C20                     __end_of_main:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           intcon	equ	0xFF2
   859                           postinc0	equ	0xFEE
   860                           wreg	equ	0xFE8
   861                           
   862 ;; *************** function _lcd_puts *****************
   863 ;; Defined at:
   864 ;;		line 108 in file "lcd_driver.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  str             2    8[BANK0 ] PTR unsigned char 
   867 ;;		 -> STR_1(13), 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;		None               void
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   879 ;;      Params:         0       2       0       0       0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0
   882 ;;      Totals:         0       2       0       0       0       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    7
   886 ;; This function calls:
   887 ;;		_lcd_gotoxy
   888 ;;		_lcd_write_byte
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text1
   895  000F40                     __ptext1:
   896                           	opt stack 0
   897  000F40                     _lcd_puts:
   898                           	opt stack 23
   899                           
   900                           ;lcd_driver.c: 110: while (*str != 0)
   901                           
   902                           ;incstack = 0
   903  000F40  D03C               	goto	l2168
   904  000F42                     l2152:
   905                           
   906                           ;lcd_driver.c: 111: {
   907                           ;lcd_driver.c: 112: if (*str != '\n')
   908  000F42  0100               	movlb	0	; () banked
   909  000F44  C068  FFF6         	movff	lcd_puts@str,tblptrl
   910  000F48  0100               	movlb	0	; () banked
   911  000F4A  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
   912  000F4E                     	if	0	;tblptru may be non-zero
   913  000F4E                     	endif
   914  000F4E                     	if	0	;tblptru may be non-zero
   915  000F4E                     	endif
   916  000F4E  0008               	tblrd		*
   917  000F50  50F5               	movf	tablat,w,c
   918  000F52  0A0A               	xorlw	10
   919  000F54  B4D8               	btfsc	status,2,c
   920  000F56  D00D               	goto	l2156
   921                           
   922                           ; BSR set to: 0
   923                           ;lcd_driver.c: 113: {
   924                           ;lcd_driver.c: 114: {lcd_write_byte(*str, 1);};
   925  000F58  0E01               	movlw	1
   926  000F5A  0100               	movlb	0	; () banked
   927  000F5C  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
   928  000F5E  0100               	movlb	0	; () banked
   929  000F60  C068  FFF6         	movff	lcd_puts@str,tblptrl
   930  000F64  0100               	movlb	0	; () banked
   931  000F66  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
   932  000F6A                     	if	0	;tblptru may be non-zero
   933  000F6A                     	endif
   934  000F6A                     	if	0	;tblptru may be non-zero
   935  000F6A                     	endif
   936  000F6A  0008               	tblrd		*
   937  000F6C  50F5               	movf	tablat,w,c
   938  000F6E  EC13  F00A         	call	_lcd_write_byte
   939  000F72                     l2156:
   940                           
   941                           ;lcd_driver.c: 115: }
   942                           ;lcd_driver.c: 117: if ((++lcd_x == 16) || (*str == '\n'))
   943  000F72  2A46               	incf	_lcd_x,f,c
   944  000F74  5046               	movf	_lcd_x& (0+255),w,c
   945  000F76  0A10               	xorlw	16
   946  000F78  B4D8               	btfsc	status,2,c
   947  000F7A  D00B               	goto	l2160
   948  000F7C  0100               	movlb	0	; () banked
   949  000F7E  C068  FFF6         	movff	lcd_puts@str,tblptrl
   950  000F82  0100               	movlb	0	; () banked
   951  000F84  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
   952  000F88                     	if	0	;tblptru may be non-zero
   953  000F88                     	endif
   954  000F88                     	if	0	;tblptru may be non-zero
   955  000F88                     	endif
   956  000F88  0008               	tblrd		*
   957  000F8A  50F5               	movf	tablat,w,c
   958  000F8C  0A0A               	xorlw	10
   959  000F8E  A4D8               	btfss	status,2,c
   960  000F90  D011               	goto	l2166
   961  000F92                     l2160:
   962                           
   963                           ;lcd_driver.c: 118: {
   964                           ;lcd_driver.c: 119: if (++lcd_y == 2)
   965  000F92  2A47               	incf	_lcd_y,f,c
   966  000F94  5047               	movf	_lcd_y& (0+255),w,c
   967  000F96  0A02               	xorlw	2
   968  000F98  A4D8               	btfss	status,2,c
   969  000F9A  D007               	goto	l2164
   970                           
   971                           ;lcd_driver.c: 120: {
   972                           ;lcd_driver.c: 121: lcd_gotoxy(0,0);
   973  000F9C  0E00               	movlw	0
   974  000F9E  0100               	movlb	0	; () banked
   975  000FA0  6F65               	movwf	lcd_gotoxy@y& (0+255),b
   976  000FA2  0E00               	movlw	0
   977  000FA4  EC9F  F008         	call	_lcd_gotoxy
   978                           
   979                           ;lcd_driver.c: 122: }
   980  000FA8  D005               	goto	l2166
   981  000FAA                     l2164:
   982                           
   983                           ;lcd_driver.c: 123: else
   984                           ;lcd_driver.c: 124: {
   985                           ;lcd_driver.c: 125: lcd_gotoxy(0, lcd_y);
   986  000FAA  C047  F065         	movff	_lcd_y,lcd_gotoxy@y
   987  000FAE  0E00               	movlw	0
   988  000FB0  EC9F  F008         	call	_lcd_gotoxy
   989  000FB4                     l2166:
   990                           
   991                           ;lcd_driver.c: 126: }
   992                           ;lcd_driver.c: 127: }
   993                           ;lcd_driver.c: 128: str++;
   994  000FB4  0100               	movlb	0	; () banked
   995  000FB6  4B68               	infsnz	lcd_puts@str& (0+255),f,b
   996  000FB8  2B69               	incf	(lcd_puts@str+1)& (0+255),f,b
   997  000FBA                     l2168:
   998  000FBA  0100               	movlb	0	; () banked
   999  000FBC  C068  FFF6         	movff	lcd_puts@str,tblptrl
  1000  000FC0  0100               	movlb	0	; () banked
  1001  000FC2  C069  FFF7         	movff	lcd_puts@str+1,tblptrh
  1002  000FC6                     	if	0	;tblptru may be non-zero
  1003  000FC6                     	endif
  1004  000FC6                     	if	0	;tblptru may be non-zero
  1005  000FC6                     	endif
  1006  000FC6  0008               	tblrd		*
  1007  000FC8  50F5               	movf	tablat,w,c
  1008  000FCA  0900               	iorlw	0
  1009  000FCC  B4D8               	btfsc	status,2,c
  1010                           
  1011                           ; BSR set to: 0
  1012                           
  1013                           ; BSR set to: 0
  1014  000FCE  0012               	return	
  1015  000FD0  D7B8               	goto	l2152
  1016  000FD2                     __end_of_lcd_puts:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           intcon	equ	0xFF2
  1023                           postinc0	equ	0xFEE
  1024                           wreg	equ	0xFE8
  1025                           status	equ	0xFD8
  1026                           
  1027 ;; *************** function _lcd_putnum *****************
  1028 ;; Defined at:
  1029 ;;		line 87 in file "lcd_driver.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  num             2    8[BANK0 ] unsigned int 
  1032 ;;  len             1   10[BANK0 ] unsigned char 
  1033 ;;  x               1   11[BANK0 ] unsigned char 
  1034 ;;  y               1   12[BANK0 ] unsigned char 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  r               2   14[BANK0 ] unsigned int 
  1037 ;;  dec             1   13[BANK0 ] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;		None               void
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       5       0       0       0       0       0       0       0
  1048 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1050 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        8 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; Hardware stack levels required when called:    7
  1054 ;; This function calls:
  1055 ;;		___lwdiv
  1056 ;;		_lcd_gotoxy
  1057 ;;		_lcd_write_byte
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text2
  1064  0010CA                     __ptext2:
  1065                           	opt stack 0
  1066  0010CA                     _lcd_putnum:
  1067                           	opt stack 23
  1068                           
  1069                           ;lcd_driver.c: 92: uint16_t r;
  1070                           ;lcd_driver.c: 93: uint8_t dec;
  1071                           ;lcd_driver.c: 95: x+=len;
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;incstack = 0
  1075  0010CA  0100               	movlb	0	; () banked
  1076  0010CC  516A               	movf	lcd_putnum@len& (0+255),w,b
  1077  0010CE  0100               	movlb	0	; () banked
  1078  0010D0  276B               	addwf	lcd_putnum@x& (0+255),f,b
  1079                           
  1080                           ;lcd_driver.c: 96: while (len)
  1081  0010D2  D031               	goto	l2186
  1082  0010D4                     l2172:
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;lcd_driver.c: 97: {
  1086                           ;lcd_driver.c: 98: r = num/10;
  1087  0010D4  C068  F060         	movff	lcd_putnum@num,___lwdiv@dividend
  1088  0010D8  C069  F061         	movff	lcd_putnum@num+1,___lwdiv@dividend+1
  1089  0010DC  0E00               	movlw	0
  1090  0010DE  0100               	movlb	0	; () banked
  1091  0010E0  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1092  0010E2  0E0A               	movlw	10
  1093  0010E4  0100               	movlb	0	; () banked
  1094  0010E6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1095  0010E8  EC29  F008         	call	___lwdiv	;wreg free
  1096  0010EC  0100               	movlb	0	; () banked
  1097  0010EE  C060  F06E         	movff	?___lwdiv,lcd_putnum@r
  1098  0010F2  0100               	movlb	0	; () banked
  1099  0010F4  C061  F06F         	movff	?___lwdiv+1,lcd_putnum@r+1
  1100                           
  1101                           ; BSR set to: 0
  1102                           ;lcd_driver.c: 99: dec = num - r*10;
  1103  0010F8  0100               	movlb	0	; () banked
  1104  0010FA  516E               	movf	lcd_putnum@r& (0+255),w,b
  1105  0010FC  0D0A               	mullw	10
  1106  0010FE  50F3               	movf	prodl,w,c
  1107  001100  0800               	sublw	0
  1108  001102  0100               	movlb	0	; () banked
  1109  001104  2568               	addwf	lcd_putnum@num& (0+255),w,b
  1110  001106  0100               	movlb	0	; () banked
  1111  001108  6F6D               	movwf	lcd_putnum@dec& (0+255),b
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;lcd_driver.c: 100: x--;
  1115  00110A  0100               	movlb	0	; () banked
  1116  00110C  076B               	decf	lcd_putnum@x& (0+255),f,b
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;lcd_driver.c: 101: len--;
  1120  00110E  0100               	movlb	0	; () banked
  1121  001110  076A               	decf	lcd_putnum@len& (0+255),f,b
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;lcd_driver.c: 102: lcd_gotoxy(x,y);
  1125  001112  C06C  F065         	movff	lcd_putnum@y,lcd_gotoxy@y
  1126  001116  0100               	movlb	0	; () banked
  1127  001118  516B               	movf	lcd_putnum@x& (0+255),w,b
  1128  00111A  EC9F  F008         	call	_lcd_gotoxy
  1129                           
  1130                           ;lcd_driver.c: 103: {lcd_write_byte(dec + 0x30, 1);};
  1131  00111E  0E01               	movlw	1
  1132  001120  0100               	movlb	0	; () banked
  1133  001122  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1134  001124  0100               	movlb	0	; () banked
  1135  001126  516D               	movf	lcd_putnum@dec& (0+255),w,b
  1136  001128  0F30               	addlw	48
  1137  00112A  EC13  F00A         	call	_lcd_write_byte
  1138                           
  1139                           ;lcd_driver.c: 104: num = r;
  1140  00112E  C06E  F068         	movff	lcd_putnum@r,lcd_putnum@num
  1141  001132  C06F  F069         	movff	lcd_putnum@r+1,lcd_putnum@num+1
  1142  001136                     l2186:
  1143  001136  0100               	movlb	0	; () banked
  1144  001138  676A               	tstfsz	lcd_putnum@len& (0+255),b
  1145  00113A  D7CC               	goto	l2172
  1146                           
  1147                           ; BSR set to: 0
  1148                           
  1149                           ; BSR set to: 0
  1150  00113C  0012               	return	
  1151  00113E                     __end_of_lcd_putnum:
  1152                           	opt stack 0
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodl	equ	0xFF3
  1158                           intcon	equ	0xFF2
  1159                           postinc0	equ	0xFEE
  1160                           wreg	equ	0xFE8
  1161                           status	equ	0xFD8
  1162                           
  1163 ;; *************** function _lcd_gotoxy *****************
  1164 ;; Defined at:
  1165 ;;		line 54 in file "lcd_driver.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  x               1    wreg     unsigned char 
  1168 ;;  y               1    5[BANK0 ] unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  x               1    7[BANK0 ] unsigned char 
  1171 ;;  addr            1    6[BANK0 ] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;		None               void
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         0       1       0       0       0       0       0       0       0
  1182 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1184 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1185 ;;Total ram usage:        3 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    6
  1188 ;; This function calls:
  1189 ;;		_lcd_write_byte
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;;		_lcd_putnum
  1193 ;;		_lcd_puts
  1194 ;;		_lcd_put_blank
  1195 ;;		_lcd_puts_const
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text3
  1200  00113E                     __ptext3:
  1201                           	opt stack 0
  1202  00113E                     _lcd_gotoxy:
  1203                           	opt stack 23
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;incstack = 0
  1207                           ;lcd_gotoxy@x stored from wreg
  1208  00113E  0100               	movlb	0	; () banked
  1209  001140  6F67               	movwf	lcd_gotoxy@x& (0+255),b
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;lcd_driver.c: 57: uint8_t addr;
  1213                           ;lcd_driver.c: 59: if ((y > 3) || (x > 19))
  1214  001142  0E04               	movlw	4
  1215  001144  0100               	movlb	0	; () banked
  1216  001146  5D65               	subwf	lcd_gotoxy@y& (0+255),w,b
  1217  001148  B0D8               	btfsc	status,0,c
  1218  00114A  D032               	goto	l142
  1219                           
  1220                           ; BSR set to: 0
  1221  00114C  0E13               	movlw	19
  1222  00114E  0100               	movlb	0	; () banked
  1223  001150  6567               	cpfsgt	lcd_gotoxy@x& (0+255),b
  1224  001152  D001               	goto	l139
  1225  001154  D02D               	goto	l142
  1226  001156                     l139:
  1227                           
  1228                           ; BSR set to: 0
  1229                           ;lcd_driver.c: 62: }
  1230                           ;lcd_driver.c: 63: lcd_x = x;
  1231  001156  C067  F046         	movff	lcd_gotoxy@x,_lcd_x
  1232                           
  1233                           ;lcd_driver.c: 64: lcd_y = y;
  1234  00115A  C065  F047         	movff	lcd_gotoxy@y,_lcd_y
  1235                           
  1236                           ;lcd_driver.c: 65: addr = x;
  1237  00115E  C067  F066         	movff	lcd_gotoxy@x,lcd_gotoxy@addr
  1238                           
  1239                           ; BSR set to: 0
  1240                           ;lcd_driver.c: 66: addr += LCD_ROW_ADDRESS[y];
  1241  001162  0100               	movlb	0	; () banked
  1242  001164  5165               	movf	lcd_gotoxy@y& (0+255),w,b
  1243  001166  0D01               	mullw	1
  1244  001168  0E01               	movlw	low _LCD_ROW_ADDRESS
  1245  00116A  24F3               	addwf	prodl,w,c
  1246  00116C  6EF6               	movwf	tblptrl,c
  1247  00116E  0E08               	movlw	high _LCD_ROW_ADDRESS
  1248  001170  20F4               	addwfc	prodh,w,c
  1249  001172  6EF7               	movwf	tblptrh,c
  1250  001174                     	if	0	;There are less than 3 active tblptr bytes
  1251  001174                     	endif
  1252  001174  0008               	tblrd		*
  1253  001176  50F5               	movf	tablat,w,c
  1254  001178  0100               	movlb	0	; () banked
  1255  00117A  2766               	addwf	lcd_gotoxy@addr& (0+255),f,b
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;lcd_driver.c: 67: { _delay((unsigned long)((1000)*(4000000/4000000.0))); };
  1259  00117C  0EFA               	movlw	250
  1260  00117E                     u1897:
  1261  00117E  F000               	nop	
  1262  001180  2EE8               	decfsz	wreg,f,c
  1263  001182  D7FD               	goto	u1897
  1264                           
  1265                           ;lcd_driver.c: 68: lcd_write_byte(addr, 0);
  1266  001184  0E00               	movlw	0
  1267  001186  0100               	movlb	0	; () banked
  1268  001188  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1269  00118A  0100               	movlb	0	; () banked
  1270  00118C  5166               	movf	lcd_gotoxy@addr& (0+255),w,b
  1271  00118E  EC13  F00A         	call	_lcd_write_byte
  1272                           
  1273                           ;lcd_driver.c: 69: { _delay((unsigned long)((1000)*(4000000/4000000.0))); };
  1274  001192  0EFA               	movlw	250
  1275  001194                     u1907:
  1276  001194  F000               	nop	
  1277  001196  2EE8               	decfsz	wreg,f,c
  1278  001198  D7FD               	goto	u1907
  1279                           
  1280                           ;lcd_driver.c: 70: lcd_write_byte(addr, 0);
  1281  00119A  0E00               	movlw	0
  1282  00119C  0100               	movlb	0	; () banked
  1283  00119E  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1284  0011A0  0100               	movlb	0	; () banked
  1285  0011A2  5166               	movf	lcd_gotoxy@addr& (0+255),w,b
  1286  0011A4  EC13  F00A         	call	_lcd_write_byte
  1287                           
  1288                           ;lcd_driver.c: 71: { _delay((unsigned long)((1000)*(4000000/4000000.0))); };
  1289  0011A8  0EFA               	movlw	250
  1290  0011AA                     u1917:
  1291  0011AA  F000               	nop	
  1292  0011AC  2EE8               	decfsz	wreg,f,c
  1293  0011AE  D7FD               	goto	u1917
  1294  0011B0                     l142:
  1295  0011B0  0012               	return	
  1296  0011B2                     __end_of_lcd_gotoxy:
  1297                           	opt stack 0
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           prodh	equ	0xFF4
  1303                           prodl	equ	0xFF3
  1304                           intcon	equ	0xFF2
  1305                           postinc0	equ	0xFEE
  1306                           wreg	equ	0xFE8
  1307                           status	equ	0xFD8
  1308                           
  1309 ;; *************** function ___lwdiv *****************
  1310 ;; Defined at:
  1311 ;;		line 8 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  dividend        2    0[BANK0 ] unsigned int 
  1314 ;;  divisor         2    2[BANK0 ] unsigned int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  quotient        2    5[BANK0 ] unsigned int 
  1317 ;;  counter         1    4[BANK0 ] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2    0[BANK0 ] unsigned int 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1327 ;;      Params:         0       4       0       0       0       0       0       0       0
  1328 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1330 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1331 ;;Total ram usage:        7 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    4
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_lcd_putnum
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text4
  1342  001052                     __ptext4:
  1343                           	opt stack 0
  1344  001052                     ___lwdiv:
  1345                           	opt stack 25
  1346                           
  1347                           ;incstack = 0
  1348  001052  0E00               	movlw	0
  1349  001054  0100               	movlb	0	; () banked
  1350  001056  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1351  001058  0E00               	movlw	0
  1352  00105A  0100               	movlb	0	; () banked
  1353  00105C  6F65               	movwf	___lwdiv@quotient& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356  00105E  0100               	movlb	0	; () banked
  1357  001060  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1358  001062  1162               	iorwf	___lwdiv@divisor& (0+255),w,b
  1359  001064  B4D8               	btfsc	status,2,c
  1360  001066  D02C               	goto	l829
  1361                           
  1362                           ; BSR set to: 0
  1363  001068  0E01               	movlw	1
  1364  00106A  0100               	movlb	0	; () banked
  1365  00106C  6F64               	movwf	___lwdiv@counter& (0+255),b
  1366  00106E  D006               	goto	l2050
  1367  001070                     l2048:
  1368                           
  1369                           ; BSR set to: 0
  1370  001070  0100               	movlb	0	; () banked
  1371  001072  90D8               	bcf	status,0,c
  1372  001074  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  1373  001076  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1374  001078  0100               	movlb	0	; () banked
  1375  00107A  2B64               	incf	___lwdiv@counter& (0+255),f,b
  1376  00107C                     l2050:
  1377                           
  1378                           ; BSR set to: 0
  1379  00107C  0100               	movlb	0	; () banked
  1380  00107E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1381  001080  D7F7               	goto	l2048
  1382  001082                     l2052:
  1383                           
  1384                           ; BSR set to: 0
  1385  001082  0100               	movlb	0	; () banked
  1386  001084  90D8               	bcf	status,0,c
  1387  001086  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  1388  001088  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1389                           
  1390                           ; BSR set to: 0
  1391  00108A  0100               	movlb	0	; () banked
  1392  00108C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1393  00108E  0100               	movlb	0	; () banked
  1394  001090  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  1395  001092  0100               	movlb	0	; () banked
  1396  001094  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1397  001096  0100               	movlb	0	; () banked
  1398  001098  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1399  00109A  A0D8               	btfss	status,0,c
  1400  00109C  D00A               	goto	l2060
  1401                           
  1402                           ; BSR set to: 0
  1403  00109E  0100               	movlb	0	; () banked
  1404  0010A0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  1405  0010A2  0100               	movlb	0	; () banked
  1406  0010A4  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  1407  0010A6  0100               	movlb	0	; () banked
  1408  0010A8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1409  0010AA  0100               	movlb	0	; () banked
  1410  0010AC  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1411                           
  1412                           ; BSR set to: 0
  1413  0010AE  0100               	movlb	0	; () banked
  1414  0010B0  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  1415  0010B2                     l2060:
  1416                           
  1417                           ; BSR set to: 0
  1418  0010B2  0100               	movlb	0	; () banked
  1419  0010B4  90D8               	bcf	status,0,c
  1420  0010B6  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1421  0010B8  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  1422                           
  1423                           ; BSR set to: 0
  1424  0010BA  0100               	movlb	0	; () banked
  1425  0010BC  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  1426  0010BE  D7E1               	goto	l2052
  1427  0010C0                     l829:
  1428                           
  1429                           ; BSR set to: 0
  1430  0010C0  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  1431  0010C4  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1432                           
  1433                           ; BSR set to: 0
  1434  0010C8  0012               	return	
  1435  0010CA                     __end_of___lwdiv:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           prodh	equ	0xFF4
  1442                           prodl	equ	0xFF3
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function _lcd_init *****************
  1449 ;; Defined at:
  1450 ;;		line 11 in file "lcd_driver.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;		None               void
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1464 ;;      Params:         0       0       0       0       0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1466 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1467 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1468 ;;Total ram usage:        1 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    6
  1471 ;; This function calls:
  1472 ;;		_lcd_write_byte
  1473 ;;		_lcd_write_nibble
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text5
  1480  000C20                     __ptext5:
  1481                           	opt stack 0
  1482  000C20                     _lcd_init:
  1483                           	opt stack 24
  1484                           
  1485                           ;lcd_driver.c: 15: { _delay((unsigned long)((15000)*(4000000/4000000.0))); };
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;incstack = 0
  1489  000C20  0E14               	movlw	20
  1490  000C22  0100               	movlb	0	; () banked
  1491  000C24  6F65               	movwf	??_lcd_init& (0+255),b
  1492  000C26  0E7A               	movlw	122
  1493  000C28                     u1927:
  1494  000C28  2EE8               	decfsz	wreg,f,c
  1495  000C2A  D7FE               	goto	u1927
  1496  000C2C  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1497  000C2E  D7FC               	goto	u1927
  1498                           
  1499                           ;lcd_driver.c: 18: lcd_write_nibble(0x3, 0);
  1500  000C30  0E00               	movlw	0
  1501  000C32  0100               	movlb	0	; () banked
  1502  000C34  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1503  000C36  0E03               	movlw	3
  1504  000C38  ECED  F006         	call	_lcd_write_nibble
  1505                           
  1506                           ;lcd_driver.c: 20: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1507  000C3C  0E07               	movlw	7
  1508  000C3E  0100               	movlb	0	; () banked
  1509  000C40  6F65               	movwf	??_lcd_init& (0+255),b
  1510  000C42  0E7D               	movlw	125
  1511  000C44                     u1937:
  1512  000C44  2EE8               	decfsz	wreg,f,c
  1513  000C46  D7FE               	goto	u1937
  1514  000C48  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1515  000C4A  D7FC               	goto	u1937
  1516  000C4C  F000               	nop	
  1517                           
  1518                           ;lcd_driver.c: 22: lcd_write_nibble(0x3, 0);
  1519  000C4E  0E00               	movlw	0
  1520  000C50  0100               	movlb	0	; () banked
  1521  000C52  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1522  000C54  0E03               	movlw	3
  1523  000C56  ECED  F006         	call	_lcd_write_nibble
  1524                           
  1525                           ;lcd_driver.c: 24: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1526  000C5A  0E07               	movlw	7
  1527  000C5C  0100               	movlb	0	; () banked
  1528  000C5E  6F65               	movwf	??_lcd_init& (0+255),b
  1529  000C60  0E7D               	movlw	125
  1530  000C62                     u1947:
  1531  000C62  2EE8               	decfsz	wreg,f,c
  1532  000C64  D7FE               	goto	u1947
  1533  000C66  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1534  000C68  D7FC               	goto	u1947
  1535  000C6A  F000               	nop	
  1536                           
  1537                           ;lcd_driver.c: 26: lcd_write_nibble(0x3, 0);
  1538  000C6C  0E00               	movlw	0
  1539  000C6E  0100               	movlb	0	; () banked
  1540  000C70  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1541  000C72  0E03               	movlw	3
  1542  000C74  ECED  F006         	call	_lcd_write_nibble
  1543                           
  1544                           ;lcd_driver.c: 28: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1545  000C78  0E07               	movlw	7
  1546  000C7A  0100               	movlb	0	; () banked
  1547  000C7C  6F65               	movwf	??_lcd_init& (0+255),b
  1548  000C7E  0E7D               	movlw	125
  1549  000C80                     u1957:
  1550  000C80  2EE8               	decfsz	wreg,f,c
  1551  000C82  D7FE               	goto	u1957
  1552  000C84  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1553  000C86  D7FC               	goto	u1957
  1554  000C88  F000               	nop	
  1555                           
  1556                           ;lcd_driver.c: 30: lcd_write_nibble(0x2, 0);
  1557  000C8A  0E00               	movlw	0
  1558  000C8C  0100               	movlb	0	; () banked
  1559  000C8E  6F60               	movwf	lcd_write_nibble@is_data& (0+255),b
  1560  000C90  0E02               	movlw	2
  1561  000C92  ECED  F006         	call	_lcd_write_nibble
  1562                           
  1563                           ;lcd_driver.c: 39: lcd_write_byte(0x28, 0);
  1564  000C96  0E00               	movlw	0
  1565  000C98  0100               	movlb	0	; () banked
  1566  000C9A  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1567  000C9C  0E28               	movlw	40
  1568  000C9E  EC13  F00A         	call	_lcd_write_byte
  1569                           
  1570                           ;lcd_driver.c: 40: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1571  000CA2  0E07               	movlw	7
  1572  000CA4  0100               	movlb	0	; () banked
  1573  000CA6  6F65               	movwf	??_lcd_init& (0+255),b
  1574  000CA8  0E7D               	movlw	125
  1575  000CAA                     u1967:
  1576  000CAA  2EE8               	decfsz	wreg,f,c
  1577  000CAC  D7FE               	goto	u1967
  1578  000CAE  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1579  000CB0  D7FC               	goto	u1967
  1580  000CB2  F000               	nop	
  1581                           
  1582                           ;lcd_driver.c: 42: lcd_write_byte(0x0c, 0);
  1583  000CB4  0E00               	movlw	0
  1584  000CB6  0100               	movlb	0	; () banked
  1585  000CB8  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1586  000CBA  0E0C               	movlw	12
  1587  000CBC  EC13  F00A         	call	_lcd_write_byte
  1588                           
  1589                           ;lcd_driver.c: 43: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1590  000CC0  0E07               	movlw	7
  1591  000CC2  0100               	movlb	0	; () banked
  1592  000CC4  6F65               	movwf	??_lcd_init& (0+255),b
  1593  000CC6  0E7D               	movlw	125
  1594  000CC8                     u1977:
  1595  000CC8  2EE8               	decfsz	wreg,f,c
  1596  000CCA  D7FE               	goto	u1977
  1597  000CCC  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1598  000CCE  D7FC               	goto	u1977
  1599  000CD0  F000               	nop	
  1600                           
  1601                           ;lcd_driver.c: 45: lcd_write_byte(0x01, 0);
  1602  000CD2  0E00               	movlw	0
  1603  000CD4  0100               	movlb	0	; () banked
  1604  000CD6  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1605  000CD8  0E01               	movlw	1
  1606  000CDA  EC13  F00A         	call	_lcd_write_byte
  1607                           
  1608                           ;lcd_driver.c: 46: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1609  000CDE  0E07               	movlw	7
  1610  000CE0  0100               	movlb	0	; () banked
  1611  000CE2  6F65               	movwf	??_lcd_init& (0+255),b
  1612  000CE4  0E7D               	movlw	125
  1613  000CE6                     u1987:
  1614  000CE6  2EE8               	decfsz	wreg,f,c
  1615  000CE8  D7FE               	goto	u1987
  1616  000CEA  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1617  000CEC  D7FC               	goto	u1987
  1618  000CEE  F000               	nop	
  1619                           
  1620                           ;lcd_driver.c: 48: lcd_write_byte(0x6, 0);
  1621  000CF0  0E00               	movlw	0
  1622  000CF2  0100               	movlb	0	; () banked
  1623  000CF4  6F63               	movwf	lcd_write_byte@is_data& (0+255),b
  1624  000CF6  0E06               	movlw	6
  1625  000CF8  EC13  F00A         	call	_lcd_write_byte
  1626                           
  1627                           ;lcd_driver.c: 49: { _delay((unsigned long)((5000)*(4000000/4000000.0))); };
  1628  000CFC  0E07               	movlw	7
  1629  000CFE  0100               	movlb	0	; () banked
  1630  000D00  6F65               	movwf	??_lcd_init& (0+255),b
  1631  000D02  0E7D               	movlw	125
  1632  000D04                     u1997:
  1633  000D04  2EE8               	decfsz	wreg,f,c
  1634  000D06  D7FE               	goto	u1997
  1635  000D08  2F65               	decfsz	??_lcd_init& (0+255),f,b
  1636  000D0A  D7FC               	goto	u1997
  1637  000D0C  F000               	nop	
  1638  000D0E  0012               	return	
  1639  000D10                     __end_of_lcd_init:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           intcon	equ	0xFF2
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _lcd_write_byte *****************
  1653 ;; Defined at:
  1654 ;;		line 185 in file "lcd_driver.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  byte            1    wreg     unsigned char 
  1657 ;;  is_data         1    3[BANK0 ] unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  byte            1    4[BANK0 ] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;		None               void
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1669 ;;      Params:         0       1       0       0       0       0       0       0       0
  1670 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1672 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1673 ;;Total ram usage:        2 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    5
  1676 ;; This function calls:
  1677 ;;		_lcd_write_nibble
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;;		_lcd_init
  1681 ;;		_lcd_gotoxy
  1682 ;;		_lcd_putnum
  1683 ;;		_lcd_puts
  1684 ;;		_lcd_put_blank
  1685 ;;		_lcd_puts_const
  1686 ;;		_lcd_set_cgram
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text6
  1691  001426                     __ptext6:
  1692                           	opt stack 0
  1693  001426                     _lcd_write_byte:
  1694                           	opt stack 25
  1695                           
  1696                           ;incstack = 0
  1697                           ;lcd_write_byte@byte stored from wreg
  1698  001426  0100               	movlb	0	; () banked
  1699  001428  6F64               	movwf	lcd_write_byte@byte& (0+255),b
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;lcd_driver.c: 188: lcd_write_nibble(byte >> 4, is_data);
  1703  00142A  C063  F060         	movff	lcd_write_byte@is_data,lcd_write_nibble@is_data
  1704  00142E  0100               	movlb	0	; () banked
  1705  001430  3964               	swapf	lcd_write_byte@byte& (0+255),w,b
  1706  001432  0B0F               	andlw	15
  1707  001434  ECED  F006         	call	_lcd_write_nibble
  1708                           
  1709                           ;lcd_driver.c: 189: lcd_write_nibble(byte, is_data);
  1710  001438  C063  F060         	movff	lcd_write_byte@is_data,lcd_write_nibble@is_data
  1711  00143C  0100               	movlb	0	; () banked
  1712  00143E  5164               	movf	lcd_write_byte@byte& (0+255),w,b
  1713  001440  ECED  F006         	call	_lcd_write_nibble
  1714  001444  0012               	return	
  1715  001446                     __end_of_lcd_write_byte:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           prodh	equ	0xFF4
  1722                           prodl	equ	0xFF3
  1723                           intcon	equ	0xFF2
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           status	equ	0xFD8
  1727                           
  1728 ;; *************** function _lcd_write_nibble *****************
  1729 ;; Defined at:
  1730 ;;		line 176 in file "lcd_driver.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;  nibble          1    wreg     unsigned char 
  1733 ;;  is_data         1    0[BANK0 ] unsigned char 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  nibble          1    2[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;		None               void
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1745 ;;      Params:         0       1       0       0       0       0       0       0       0
  1746 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1747 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1748 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1749 ;;Total ram usage:        3 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    4
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_lcd_init
  1756 ;;		_lcd_write_byte
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text7
  1761  000DDA                     __ptext7:
  1762                           	opt stack 0
  1763  000DDA                     _lcd_write_nibble:
  1764                           	opt stack 25
  1765                           
  1766                           ;incstack = 0
  1767                           ;lcd_write_nibble@nibble stored from wreg
  1768  000DDA  0100               	movlb	0	; () banked
  1769  000DDC  6F62               	movwf	lcd_write_nibble@nibble& (0+255),b
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;lcd_driver.c: 179: { LATDbits.LATD2 = is_data; };
  1773  000DDE  0100               	movlb	0	; () banked
  1774  000DE0  B160               	btfsc	lcd_write_nibble@is_data& (0+255),0,b
  1775  000DE2  D002               	bra	u1515
  1776  000DE4  948C               	bcf	3980,2,c	;volatile
  1777  000DE6  D001               	bra	u1516
  1778  000DE8                     u1515:
  1779  000DE8  848C               	bsf	3980,2,c	;volatile
  1780  000DEA                     u1516:
  1781                           
  1782                           ;lcd_driver.c: 180: { _delay((unsigned long)((100)*(4000000/4000000.0))); };
  1783  000DEA  0E21               	movlw	33
  1784  000DEC                     u2007:
  1785  000DEC  2EE8               	decfsz	wreg,f,c
  1786  000DEE  D7FE               	goto	u2007
  1787  000DF0  F000               	nop	
  1788                           
  1789                           ;lcd_driver.c: 181: { LATDbits.LATD4 = nibble & 1; LATDbits.LATD5 = (nibble & 2) >> 1; L
      +                          ATDbits.LATD6 = (nibble & 4) >> 2; LATDbits.LATD7 = (nibble & 8) >> 3; };
  1790  000DF2  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1791  000DF6  0E01               	movlw	1
  1792  000DF8  0100               	movlb	0	; () banked
  1793  000DFA  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1794  000DFC  0100               	movlb	0	; () banked
  1795  000DFE  3B61               	swapf	??_lcd_write_nibble& (0+255),f,b
  1796  000E00  508C               	movf	3980,w,c	;volatile
  1797  000E02  0100               	movlb	0	; () banked
  1798  000E04  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1799  000E06  0BEF               	andlw	-17
  1800  000E08  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1801  000E0A  6E8C               	movwf	3980,c	;volatile
  1802                           
  1803                           ; BSR set to: 0
  1804  000E0C  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1805  000E10  0100               	movlb	0	; () banked
  1806  000E12  90D8               	bcf	status,0,c
  1807  000E14  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1808  000E16  0E01               	movlw	1
  1809  000E18  0100               	movlb	0	; () banked
  1810  000E1A  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1811  000E1C  0100               	movlb	0	; () banked
  1812  000E1E  3B61               	swapf	??_lcd_write_nibble& (0+255),f,b
  1813  000E20  4761               	rlncf	??_lcd_write_nibble& (0+255),f,b
  1814  000E22  508C               	movf	3980,w,c	;volatile
  1815  000E24  0100               	movlb	0	; () banked
  1816  000E26  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1817  000E28  0BDF               	andlw	-33
  1818  000E2A  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1819  000E2C  6E8C               	movwf	3980,c	;volatile
  1820                           
  1821                           ; BSR set to: 0
  1822  000E2E  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1823  000E32  0100               	movlb	0	; () banked
  1824  000E34  90D8               	bcf	status,0,c
  1825  000E36  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1826  000E38  0100               	movlb	0	; () banked
  1827  000E3A  90D8               	bcf	status,0,c
  1828  000E3C  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1829  000E3E  0E01               	movlw	1
  1830  000E40  0100               	movlb	0	; () banked
  1831  000E42  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1832  000E44  0100               	movlb	0	; () banked
  1833  000E46  3B61               	swapf	??_lcd_write_nibble& (0+255),f,b
  1834  000E48  4761               	rlncf	??_lcd_write_nibble& (0+255),f,b
  1835  000E4A  4761               	rlncf	??_lcd_write_nibble& (0+255),f,b
  1836  000E4C  508C               	movf	3980,w,c	;volatile
  1837  000E4E  0100               	movlb	0	; () banked
  1838  000E50  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1839  000E52  0BBF               	andlw	-65
  1840  000E54  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1841  000E56  6E8C               	movwf	3980,c	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844  000E58  C062  F061         	movff	lcd_write_nibble@nibble,??_lcd_write_nibble
  1845  000E5C  0100               	movlb	0	; () banked
  1846  000E5E  90D8               	bcf	status,0,c
  1847  000E60  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1848  000E62  0100               	movlb	0	; () banked
  1849  000E64  90D8               	bcf	status,0,c
  1850  000E66  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1851  000E68  0100               	movlb	0	; () banked
  1852  000E6A  90D8               	bcf	status,0,c
  1853  000E6C  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1854  000E6E  0E01               	movlw	1
  1855  000E70  0100               	movlb	0	; () banked
  1856  000E72  1761               	andwf	??_lcd_write_nibble& (0+255),f,b
  1857  000E74  0100               	movlb	0	; () banked
  1858  000E76  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1859  000E78  3361               	rrcf	??_lcd_write_nibble& (0+255),f,b
  1860  000E7A  508C               	movf	3980,w,c	;volatile
  1861  000E7C  0100               	movlb	0	; () banked
  1862  000E7E  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1863  000E80  0B7F               	andlw	-129
  1864  000E82  1961               	xorwf	??_lcd_write_nibble& (0+255),w,b
  1865  000E84  6E8C               	movwf	3980,c	;volatile
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;lcd_driver.c: 182: { LATDbits.LATD3 = 1; { _delay((unsigned long)((200)*(4000000/400000
      +                          0.0))); }; LATDbits.LATD3 = 0; { _delay((unsigned long)((500)*(4000000/4000000.0))); }; 
      +                          };
  1869  000E86  868C               	bsf	3980,3,c	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872  000E88  0E42               	movlw	66
  1873  000E8A                     u2017:
  1874  000E8A  2EE8               	decfsz	wreg,f,c
  1875  000E8C  D7FE               	goto	u2017
  1876  000E8E  D000               	nop2		;nop
  1877  000E90  968C               	bcf	3980,3,c	;volatile
  1878  000E92  0EA6               	movlw	166
  1879  000E94                     u2027:
  1880  000E94  2EE8               	decfsz	wreg,f,c
  1881  000E96  D7FE               	goto	u2027
  1882  000E98  D000               	nop2		;nop
  1883  000E9A  0012               	return	
  1884  000E9C                     __end_of_lcd_write_nibble:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           intcon	equ	0xFF2
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           status	equ	0xFD8
  1896                           
  1897 ;; *************** function _SetDCPWM1 *****************
  1898 ;; Defined at:
  1899 ;;		line 7 in file "I:\Programas\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  1904 ;; Return value:  Size  Location     Type
  1905 ;;		None               void
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1913 ;;      Params:         0       2       0       0       0       0       0       0       0
  1914 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1915 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1916 ;;      Totals:         0       6       0       0       0       0       0       0       0
  1917 ;;Total ram usage:        6 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    4
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text8
  1928  001376                     __ptext8:
  1929                           	opt stack 0
  1930  001376                     _SetDCPWM1:
  1931                           	opt stack 26
  1932                           
  1933                           ;incstack = 0
  1934  001376  0100               	movlb	0	; () banked
  1935  001378  C060  F062         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  1936  00137C  0100               	movlb	0	; () banked
  1937  00137E  C061  F063         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  1938  001382  0E06               	movlw	6
  1939  001384                     u1675:
  1940  001384  90D8               	bcf	status,0,c
  1941  001386  0100               	movlb	0	; () banked
  1942  001388  3762               	rlcf	??_SetDCPWM1& (0+255),f,b
  1943  00138A  3763               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  1944  00138C  2EE8               	decfsz	wreg,f,c
  1945  00138E  D7FA               	goto	u1675
  1946  001390  C062  F064         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  1947  001394  C063  F065         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  1948                           
  1949                           ; BSR set to: 0
  1950  001398  C065  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  1951  00139C  C064  F062         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  1952  0013A0  0100               	movlb	0	; () banked
  1953  0013A2  90D8               	bcf	status,0,c
  1954  0013A4  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  1955  0013A6  0100               	movlb	0	; () banked
  1956  0013A8  90D8               	bcf	status,0,c
  1957  0013AA  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  1958  0013AC  0E30               	movlw	48
  1959  0013AE  0100               	movlb	0	; () banked
  1960  0013B0  1762               	andwf	??_SetDCPWM1& (0+255),f,b
  1961  0013B2  50BD               	movf	4029,w,c	;volatile
  1962  0013B4  0BCF               	andlw	207
  1963  0013B6  0100               	movlb	0	; () banked
  1964  0013B8  1162               	iorwf	??_SetDCPWM1& (0+255),w,b
  1965  0013BA  6EBD               	movwf	4029,c	;volatile
  1966                           
  1967                           ; BSR set to: 0
  1968  0013BC  0012               	return	
  1969  0013BE                     __end_of_SetDCPWM1:
  1970                           	opt stack 0
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           prodh	equ	0xFF4
  1976                           prodl	equ	0xFF3
  1977                           intcon	equ	0xFF2
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function _OpenUSART *****************
  1983 ;; Defined at:
  1984 ;;		line 73 in file "I:\Programas\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  config          1    wreg     unsigned char 
  1987 ;;  spbrg           2    0[BANK0 ] unsigned int 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  config          1    5[BANK0 ] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		wreg, status,2
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1999 ;;      Params:         0       2       0       0       0       0       0       0       0
  2000 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2001 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2002 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2003 ;;Total ram usage:        6 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    4
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text9
  2014  000FD2                     __ptext9:
  2015                           	opt stack 0
  2016  000FD2                     _OpenUSART:
  2017                           	opt stack 26
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;incstack = 0
  2021                           ;OpenUSART@config stored from wreg
  2022  000FD2  0100               	movlb	0	; () banked
  2023  000FD4  6F65               	movwf	OpenUSART@config& (0+255),b
  2024                           
  2025                           ; BSR set to: 0
  2026  000FD6  0E00               	movlw	0
  2027  000FD8  6EAC               	movwf	4012,c	;volatile
  2028  000FDA  0E00               	movlw	0
  2029  000FDC  6EAB               	movwf	4011,c	;volatile
  2030                           
  2031                           ; BSR set to: 0
  2032  000FDE  0100               	movlb	0	; () banked
  2033  000FE0  B165               	btfsc	OpenUSART@config& (0+255),0,b
  2034                           
  2035                           ; BSR set to: 0
  2036  000FE2  88AC               	bsf	4012,4,c	;volatile
  2037                           
  2038                           ; BSR set to: 0
  2039                           
  2040                           ; BSR set to: 0
  2041  000FE4  0100               	movlb	0	; () banked
  2042  000FE6  A365               	btfss	OpenUSART@config& (0+255),1,b
  2043  000FE8  D002               	goto	l2074
  2044                           
  2045                           ; BSR set to: 0
  2046  000FEA  8CAC               	bsf	4012,6,c	;volatile
  2047  000FEC  8CAB               	bsf	4011,6,c	;volatile
  2048  000FEE                     l2074:
  2049                           
  2050                           ; BSR set to: 0
  2051  000FEE  0100               	movlb	0	; () banked
  2052  000FF0  B565               	btfsc	OpenUSART@config& (0+255),2,b
  2053                           
  2054                           ; BSR set to: 0
  2055  000FF2  8EAC               	bsf	4012,7,c	;volatile
  2056                           
  2057                           ; BSR set to: 0
  2058                           
  2059                           ; BSR set to: 0
  2060  000FF4  0100               	movlb	0	; () banked
  2061  000FF6  A765               	btfss	OpenUSART@config& (0+255),3,b
  2062  000FF8  D002               	goto	l235
  2063                           
  2064                           ; BSR set to: 0
  2065  000FFA  88AB               	bsf	4011,4,c	;volatile
  2066  000FFC  D001               	goto	l2082
  2067  000FFE                     l235:
  2068                           
  2069                           ; BSR set to: 0
  2070  000FFE  8AAB               	bsf	4011,5,c	;volatile
  2071  001000                     l2082:
  2072                           
  2073                           ; BSR set to: 0
  2074  001000  0100               	movlb	0	; () banked
  2075  001002  B965               	btfsc	OpenUSART@config& (0+255),4,b
  2076                           
  2077                           ; BSR set to: 0
  2078  001004  84AC               	bsf	4012,2,c	;volatile
  2079                           
  2080                           ; BSR set to: 0
  2081  001006  989E               	bcf	3998,4,c	;volatile
  2082                           
  2083                           ; BSR set to: 0
  2084  001008  0100               	movlb	0	; () banked
  2085  00100A  BB65               	btfsc	OpenUSART@config& (0+255),5,b
  2086                           
  2087                           ; BSR set to: 0
  2088  00100C  86AB               	bsf	4011,3,c	;volatile
  2089                           
  2090                           ; BSR set to: 0
  2091                           
  2092                           ; BSR set to: 0
  2093  00100E  0100               	movlb	0	; () banked
  2094  001010  AD65               	btfss	OpenUSART@config& (0+255),6,b
  2095  001012  D002               	goto	l239
  2096                           
  2097                           ; BSR set to: 0
  2098  001014  8A9D               	bsf	3997,5,c	;volatile
  2099  001016  D001               	goto	l240
  2100  001018                     l239:
  2101                           
  2102                           ; BSR set to: 0
  2103  001018  9A9D               	bcf	3997,5,c	;volatile
  2104  00101A                     l240:
  2105                           
  2106                           ; BSR set to: 0
  2107  00101A  9A9E               	bcf	3998,5,c	;volatile
  2108                           
  2109                           ; BSR set to: 0
  2110  00101C  0100               	movlb	0	; () banked
  2111  00101E  AF65               	btfss	OpenUSART@config& (0+255),7,b
  2112  001020  D002               	goto	l241
  2113                           
  2114                           ; BSR set to: 0
  2115  001022  889D               	bsf	3997,4,c	;volatile
  2116  001024  D001               	goto	l242
  2117  001026                     l241:
  2118                           
  2119                           ; BSR set to: 0
  2120  001026  989D               	bcf	3997,4,c	;volatile
  2121  001028                     l242:
  2122                           
  2123                           ; BSR set to: 0
  2124  001028  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  2125                           
  2126                           ; BSR set to: 0
  2127  00102C  0100               	movlb	0	; () banked
  2128  00102E  C061  F062         	movff	OpenUSART@spbrg+1,??_OpenUSART
  2129  001032  C062  F063         	movff	??_OpenUSART,??_OpenUSART+1
  2130  001036  0100               	movlb	0	; () banked
  2131  001038  6B64               	clrf	(??_OpenUSART+2)& (0+255),b
  2132  00103A  0100               	movlb	0	; () banked
  2133  00103C  5163               	movf	(??_OpenUSART+1)& (0+255),w,b
  2134  00103E  6EB0               	movwf	4016,c	;volatile
  2135                           
  2136                           ; BSR set to: 0
  2137  001040  8AAC               	bsf	4012,5,c	;volatile
  2138                           
  2139                           ; BSR set to: 0
  2140  001042  8EAB               	bsf	4011,7,c	;volatile
  2141                           
  2142                           ; BSR set to: 0
  2143  001044  9C94               	bcf	3988,6,c	;volatile
  2144                           
  2145                           ; BSR set to: 0
  2146  001046  8E94               	bsf	3988,7,c	;volatile
  2147                           
  2148                           ; BSR set to: 0
  2149  001048  B8AC               	btfsc	4012,4,c	;volatile
  2150                           
  2151                           ; BSR set to: 0
  2152  00104A  BEAC               	btfsc	4012,7,c	;volatile
  2153  00104C  D001               	goto	l244
  2154                           
  2155                           ; BSR set to: 0
  2156  00104E  8C94               	bsf	3988,6,c	;volatile
  2157  001050                     l244:
  2158                           
  2159                           ; BSR set to: 0
  2160  001050  0012               	return	
  2161  001052                     __end_of_OpenUSART:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           prodh	equ	0xFF4
  2168                           prodl	equ	0xFF3
  2169                           intcon	equ	0xFF2
  2170                           postinc0	equ	0xFEE
  2171                           wreg	equ	0xFE8
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _OpenPWM1 *****************
  2175 ;; Defined at:
  2176 ;;		line 8 in file "I:\Programas\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  period          1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  period          1    0[BANK0 ] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0
  2191 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2193 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2194 ;;Total ram usage:        1 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    4
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text10
  2205  001484                     __ptext10:
  2206                           	opt stack 0
  2207  001484                     _OpenPWM1:
  2208                           	opt stack 26
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;incstack = 0
  2212                           ;OpenPWM1@period stored from wreg
  2213  001484  0100               	movlb	0	; () banked
  2214  001486  6F60               	movwf	OpenPWM1@period& (0+255),b
  2215                           
  2216                           ; BSR set to: 0
  2217  001488  0E0C               	movlw	12
  2218  00148A  12BD               	iorwf	4029,f,c	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221  00148C  9494               	bcf	3988,2,c	;volatile
  2222                           
  2223                           ; BSR set to: 0
  2224  00148E  94CA               	bcf	4042,2,c	;volatile
  2225                           
  2226                           ; BSR set to: 0
  2227  001490  C060  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2228                           
  2229                           ; BSR set to: 0
  2230  001494  84CA               	bsf	4042,2,c	;volatile
  2231                           
  2232                           ; BSR set to: 0
  2233  001496  0012               	return	
  2234  001498                     __end_of_OpenPWM1:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodh	equ	0xFF4
  2241                           prodl	equ	0xFF3
  2242                           intcon	equ	0xFF2
  2243                           postinc0	equ	0xFEE
  2244                           wreg	equ	0xFE8
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _ISR *****************
  2248 ;; Defined at:
  2249 ;;		line 96 in file "main.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;		None
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;		None
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0
  2264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2265 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2266 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2267 ;;Total ram usage:       14 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    3
  2270 ;; This function calls:
  2271 ;;		_ReadUSART
  2272 ;;		_atoi
  2273 ;;		_itoa
  2274 ;;		_putsUSART
  2275 ;;		_strncpy
  2276 ;; This function is called by:
  2277 ;;		Interrupt level 2
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	intcode
  2282  000008                     __pintcode:
  2283                           	opt stack 0
  2284  000008                     _ISR:
  2285                           	opt stack 23
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;incstack = 0
  2289  000008  CFFA F01D          	movff	pclath,??_ISR
  2290  00000C  CFFB F01E          	movff	pclatu,??_ISR+1
  2291  000010  CFE9 F01F          	movff	fsr0l,??_ISR+2
  2292  000014  ED20  F004         	call	int_func,f	;refresh shadow registers
  2293                           pclatu	equ	0xFFB
  2294                           pclath	equ	0xFFA
  2295                           tblptru	equ	0xFF8
  2296                           tblptrh	equ	0xFF7
  2297                           tblptrl	equ	0xFF6
  2298                           tablat	equ	0xFF5
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           intcon	equ	0xFF2
  2302                           postinc0	equ	0xFEE
  2303                           fsr0l	equ	0xFE9
  2304                           wreg	equ	0xFE8
  2305                           status	equ	0xFD8
  2306                           
  2307                           	psect	intcode_body
  2308  000840                     __pintcode_body:
  2309                           	opt stack 23
  2310  000840                     int_func:
  2311                           	opt stack 23
  2312  000840  0006               	pop		; remove dummy address from shadow register refresh
  2313  000842  CFEA F020          	movff	fsr0h,??_ISR+3
  2314  000846  CFE1 F021          	movff	fsr1l,??_ISR+4
  2315  00084A  CFE2 F022          	movff	fsr1h,??_ISR+5
  2316  00084E  CFD9 F023          	movff	fsr2l,??_ISR+6
  2317  000852  CFDA F024          	movff	fsr2h,??_ISR+7
  2318  000856  CFF3 F025          	movff	prodl,??_ISR+8
  2319  00085A  CFF4 F026          	movff	prodh,??_ISR+9
  2320  00085E  CFF6 F027          	movff	tblptrl,??_ISR+10
  2321  000862  CFF7 F028          	movff	tblptrh,??_ISR+11
  2322  000866  CFF8 F029          	movff	tblptru,??_ISR+12
  2323  00086A  CFF5 F02A          	movff	tablat,??_ISR+13
  2324                           
  2325                           ;main.c: 99: if(PIR1bits.RCIF == 1)
  2326  00086E  AA9E               	btfss	3998,5,c	;volatile
  2327  000870  D123               	goto	i2l97
  2328                           
  2329                           ;main.c: 100: {
  2330                           ;main.c: 101: if(i<200)
  2331  000872  5040               	movf	_i+1,w,c
  2332  000874  0A80               	xorlw	128
  2333  000876  6EF3               	movwf	prodl,c
  2334  000878  0E80               	movlw	128
  2335  00087A  5CF3               	subwf	prodl,w,c
  2336  00087C  0EC8               	movlw	200
  2337  00087E  B4D8               	btfsc	status,2,c
  2338  000880  5C3F               	subwf	_i,w,c
  2339  000882  B0D8               	btfsc	status,0,c
  2340  000884  D0F5               	goto	i2l1946
  2341                           
  2342                           ;main.c: 102: {
  2343                           ;main.c: 103: MessageBuffer[i] = ReadUSART();
  2344  000886  0101               	movlb	1	; () banked
  2345  000888  0E00               	movlw	low _MessageBuffer
  2346  00088A  243F               	addwf	_i,w,c
  2347  00088C  6ED9               	movwf	fsr2l,c
  2348  00088E  0101               	movlb	1	; () banked
  2349  000890  0E01               	movlw	high _MessageBuffer
  2350  000892  2040               	addwfc	_i+1,w,c
  2351  000894  6EDA               	movwf	fsr2h,c
  2352  000896  EC33  F00A         	call	_ReadUSART	;wreg free
  2353  00089A  6EDF               	movwf	indf2,c
  2354                           
  2355                           ;main.c: 104: if(MessageBuffer[i] == 0x0D)
  2356  00089C  0101               	movlb	1	; () banked
  2357  00089E  0E00               	movlw	low _MessageBuffer
  2358  0008A0  243F               	addwf	_i,w,c
  2359  0008A2  6ED9               	movwf	fsr2l,c
  2360  0008A4  0101               	movlb	1	; () banked
  2361  0008A6  0E01               	movlw	high _MessageBuffer
  2362  0008A8  2040               	addwfc	_i+1,w,c
  2363  0008AA  6EDA               	movwf	fsr2h,c
  2364  0008AC  0E0D               	movlw	13
  2365  0008AE  62DF               	cpfseq	indf2,c
  2366  0008B0  D05C               	goto	i2l1914
  2367                           
  2368                           ; BSR set to: 1
  2369                           ;main.c: 105: {
  2370                           ;main.c: 106: strncpy(DC_str, MessageBuffer,4);
  2371  0008B2  0E00               	movlw	high _DC_str
  2372  0008B4  6E02               	movwf	strncpy@to+1,c
  2373  0008B6  0E48               	movlw	low _DC_str
  2374  0008B8  6E01               	movwf	strncpy@to,c
  2375  0008BA  0101               	movlb	1	; () banked
  2376  0008BC  0E01               	movlw	high _MessageBuffer
  2377  0008BE  6E04               	movwf	strncpy@from+1,c
  2378  0008C0  0101               	movlb	1	; () banked
  2379  0008C2  0E00               	movlw	low _MessageBuffer
  2380  0008C4  6E03               	movwf	strncpy@from,c
  2381  0008C6  0E00               	movlw	0
  2382  0008C8  6E06               	movwf	strncpy@size+1,c
  2383  0008CA  0E04               	movlw	4
  2384  0008CC  6E05               	movwf	strncpy@size,c
  2385  0008CE  EC08  F009         	call	_strncpy	;wreg free
  2386                           
  2387                           ;main.c: 107: k = atoi(DC_str);
  2388  0008D2  0E00               	movlw	high _DC_str
  2389  0008D4  6E08               	movwf	atoi@s+1,c
  2390  0008D6  0E48               	movlw	low _DC_str
  2391  0008D8  6E07               	movwf	atoi@s,c
  2392  0008DA  EC88  F006         	call	_atoi	;wreg free
  2393  0008DE  C007  F041         	movff	?_atoi,_k
  2394  0008E2  C008  F042         	movff	?_atoi+1,_k+1
  2395                           
  2396                           ;main.c: 108: if(k >= 0 && k <= 1023)
  2397  0008E6  BE42               	btfsc	_k+1,7,c
  2398  0008E8  D021               	goto	i2l1902
  2399  0008EA  5042               	movf	_k+1,w,c
  2400  0008EC  0A80               	xorlw	128
  2401  0008EE  6EF3               	movwf	prodl,c
  2402  0008F0  0E84               	movlw	132
  2403  0008F2  5CF3               	subwf	prodl,w,c
  2404  0008F4  0E00               	movlw	0
  2405  0008F6  B4D8               	btfsc	status,2,c
  2406  0008F8  5C41               	subwf	_k,w,c
  2407  0008FA  B0D8               	btfsc	status,0,c
  2408  0008FC  D017               	goto	i2l1902
  2409                           
  2410                           ;main.c: 109: {
  2411                           ;main.c: 110: DutyCycle = k;
  2412  0008FE  C041  F083         	movff	_k,_DutyCycle
  2413  000902  C042  F084         	movff	_k+1,_DutyCycle+1
  2414                           
  2415                           ;main.c: 111: putsUSART("Modificado el SetPoint a: ");
  2416  000906  0E08               	movlw	high STR_2
  2417  000908  6E1A               	movwf	putsUSART@data+1,c
  2418  00090A  0E05               	movlw	low STR_2
  2419  00090C  6E19               	movwf	putsUSART@data,c
  2420  00090E  EC37  F009         	call	_putsUSART	;wreg free
  2421                           
  2422                           ;main.c: 112: putsUSART(DC_str);
  2423  000912  0E00               	movlw	high _DC_str
  2424  000914  6E1A               	movwf	putsUSART@data+1,c
  2425  000916  0E48               	movlw	low _DC_str
  2426  000918  6E19               	movwf	putsUSART@data,c
  2427  00091A  EC37  F009         	call	_putsUSART	;wreg free
  2428                           
  2429                           ;main.c: 113: putsUSART("\n");
  2430  00091E  0E08               	movlw	high (STR_4+15)
  2431  000920  6E1A               	movwf	putsUSART@data+1,c
  2432  000922  0E2F               	movlw	low (STR_4+15)
  2433  000924  6E19               	movwf	putsUSART@data,c
  2434  000926  EC37  F009         	call	_putsUSART	;wreg free
  2435                           
  2436                           ;main.c: 114: }
  2437  00092A  D014               	goto	i2l1908
  2438  00092C                     i2l1902:
  2439                           
  2440                           ;main.c: 115: else
  2441                           ;main.c: 116: {
  2442                           ;main.c: 117: putsUSART("Error maquinola\n");
  2443  00092C  0E08               	movlw	high STR_4
  2444  00092E  6E1A               	movwf	putsUSART@data+1,c
  2445  000930  0E20               	movlw	low STR_4
  2446  000932  6E19               	movwf	putsUSART@data,c
  2447  000934  EC37  F009         	call	_putsUSART	;wreg free
  2448  000938  D00D               	goto	i2l1908
  2449  00093A                     i2l1904:
  2450                           
  2451                           ;main.c: 121: MessageBuffer[i] = 0x00;
  2452  00093A  0101               	movlb	1	; () banked
  2453  00093C  0E00               	movlw	low _MessageBuffer
  2454  00093E  243F               	addwf	_i,w,c
  2455  000940  6ED9               	movwf	fsr2l,c
  2456  000942  0101               	movlb	1	; () banked
  2457  000944  0E01               	movlw	high _MessageBuffer
  2458  000946  2040               	addwfc	_i+1,w,c
  2459  000948  6EDA               	movwf	fsr2h,c
  2460  00094A  0E00               	movlw	0
  2461  00094C  6EDF               	movwf	indf2,c
  2462                           
  2463                           ; BSR set to: 1
  2464  00094E  063F               	decf	_i,f,c
  2465  000950  A0D8               	btfss	status,0,c
  2466  000952  0640               	decf	_i+1,f,c
  2467  000954                     i2l1908:
  2468  000954  5040               	movf	_i+1,w,c
  2469  000956  0A80               	xorlw	128
  2470  000958  6EF3               	movwf	prodl,c
  2471  00095A  0E80               	movlw	128
  2472  00095C  5CF3               	subwf	prodl,w,c
  2473  00095E  0E01               	movlw	1
  2474  000960  B4D8               	btfsc	status,2,c
  2475  000962  5C3F               	subwf	_i,w,c
  2476  000964  B0D8               	btfsc	status,0,c
  2477  000966  D7E9               	goto	i2l1904
  2478  000968  D0A3               	goto	i2l1954
  2479  00096A                     i2l1914:
  2480                           
  2481                           ;main.c: 124: }
  2482                           ;main.c: 125: if(MessageBuffer[i] == 0x2B)
  2483  00096A  0101               	movlb	1	; () banked
  2484  00096C  0E00               	movlw	low _MessageBuffer
  2485  00096E  243F               	addwf	_i,w,c
  2486  000970  6ED9               	movwf	fsr2l,c
  2487  000972  0101               	movlb	1	; () banked
  2488  000974  0E01               	movlw	high _MessageBuffer
  2489  000976  2040               	addwfc	_i+1,w,c
  2490  000978  6EDA               	movwf	fsr2h,c
  2491  00097A  0E2B               	movlw	43
  2492  00097C  62DF               	cpfseq	indf2,c
  2493  00097E  D034               	goto	i2l1928
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;main.c: 126: {
  2497                           ;main.c: 127: if(DutyCycle >= 0 && DutyCycle <= 1023)
  2498  000980  0E00               	movlw	0
  2499  000982  0100               	movlb	0	; () banked
  2500  000984  5D83               	subwf	_DutyCycle& (0+255),w,b
  2501  000986  0E04               	movlw	4
  2502  000988  0100               	movlb	0	; () banked
  2503  00098A  5984               	subwfb	(_DutyCycle+1)& (0+255),w,b
  2504  00098C  B0D8               	btfsc	status,0,c
  2505  00098E  D026               	goto	i2l1926
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;main.c: 128: {
  2509                           ;main.c: 129: DutyCycle++;
  2510  000990  0100               	movlb	0	; () banked
  2511  000992  4B83               	infsnz	_DutyCycle& (0+255),f,b
  2512  000994  2B84               	incf	(_DutyCycle+1)& (0+255),f,b
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;main.c: 131: putsUSART("Modificado el SetPoint a: ");
  2516  000996  0E08               	movlw	high STR_2
  2517  000998  6E1A               	movwf	putsUSART@data+1,c
  2518  00099A  0E05               	movlw	low STR_2
  2519  00099C  6E19               	movwf	putsUSART@data,c
  2520  00099E  EC37  F009         	call	_putsUSART	;wreg free
  2521                           
  2522                           ;main.c: 132: putsUSART(itoa(DutyCycle, DC_str, 10));
  2523  0009A2  0100               	movlb	0	; () banked
  2524  0009A4  C084  F012         	movff	_DutyCycle+1,itoa@buf+1
  2525  0009A8  0100               	movlb	0	; () banked
  2526  0009AA  C083  F011         	movff	_DutyCycle,itoa@buf
  2527  0009AE  0E00               	movlw	high _DC_str
  2528  0009B0  6E14               	movwf	itoa@val+1,c
  2529  0009B2  0E48               	movlw	low _DC_str
  2530  0009B4  6E13               	movwf	itoa@val,c
  2531  0009B6  0E00               	movlw	0
  2532  0009B8  6E16               	movwf	itoa@base+1,c
  2533  0009BA  0E0A               	movlw	10
  2534  0009BC  6E15               	movwf	itoa@base,c
  2535  0009BE  EC65  F009         	call	_itoa	;wreg free
  2536  0009C2  C011  F019         	movff	?_itoa,putsUSART@data
  2537  0009C6  C012  F01A         	movff	?_itoa+1,putsUSART@data+1
  2538  0009CA  EC37  F009         	call	_putsUSART	;wreg free
  2539                           
  2540                           ;main.c: 133: putsUSART("\n");
  2541  0009CE  0E08               	movlw	high (STR_4+15)
  2542  0009D0  6E1A               	movwf	putsUSART@data+1,c
  2543  0009D2  0E2F               	movlw	low (STR_4+15)
  2544  0009D4  6E19               	movwf	putsUSART@data,c
  2545  0009D6  EC37  F009         	call	_putsUSART	;wreg free
  2546                           
  2547                           ;main.c: 134: }
  2548  0009DA  D006               	goto	i2l1928
  2549  0009DC                     i2l1926:
  2550                           
  2551                           ;main.c: 135: else
  2552                           ;main.c: 136: {
  2553                           ;main.c: 137: putsUSART("Error maquinola\n");
  2554  0009DC  0E08               	movlw	high STR_4
  2555  0009DE  6E1A               	movwf	putsUSART@data+1,c
  2556  0009E0  0E20               	movlw	low STR_4
  2557  0009E2  6E19               	movwf	putsUSART@data,c
  2558  0009E4  EC37  F009         	call	_putsUSART	;wreg free
  2559  0009E8                     i2l1928:
  2560                           
  2561                           ;main.c: 138: }
  2562                           ;main.c: 139: }
  2563                           ;main.c: 140: if(MessageBuffer[i] == 0x2D)
  2564  0009E8  0101               	movlb	1	; () banked
  2565  0009EA  0E00               	movlw	low _MessageBuffer
  2566  0009EC  243F               	addwf	_i,w,c
  2567  0009EE  6ED9               	movwf	fsr2l,c
  2568  0009F0  0101               	movlb	1	; () banked
  2569  0009F2  0E01               	movlw	high _MessageBuffer
  2570  0009F4  2040               	addwfc	_i+1,w,c
  2571  0009F6  6EDA               	movwf	fsr2h,c
  2572  0009F8  0E2D               	movlw	45
  2573  0009FA  62DF               	cpfseq	indf2,c
  2574  0009FC  D035               	goto	i2l1942
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;main.c: 141: {
  2578                           ;main.c: 142: if(DutyCycle >= 0 && DutyCycle <= 1023)
  2579  0009FE  0E00               	movlw	0
  2580  000A00  0100               	movlb	0	; () banked
  2581  000A02  5D83               	subwf	_DutyCycle& (0+255),w,b
  2582  000A04  0E04               	movlw	4
  2583  000A06  0100               	movlb	0	; () banked
  2584  000A08  5984               	subwfb	(_DutyCycle+1)& (0+255),w,b
  2585  000A0A  B0D8               	btfsc	status,0,c
  2586  000A0C  D027               	goto	i2l1940
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;main.c: 143: {
  2590                           ;main.c: 144: DutyCycle--;
  2591  000A0E  0100               	movlb	0	; () banked
  2592  000A10  0783               	decf	_DutyCycle& (0+255),f,b
  2593  000A12  A0D8               	btfss	status,0,c
  2594  000A14  0784               	decf	(_DutyCycle+1)& (0+255),f,b
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;main.c: 146: putsUSART("Modificado el SetPoint a: ");
  2598  000A16  0E08               	movlw	high STR_2
  2599  000A18  6E1A               	movwf	putsUSART@data+1,c
  2600  000A1A  0E05               	movlw	low STR_2
  2601  000A1C  6E19               	movwf	putsUSART@data,c
  2602  000A1E  EC37  F009         	call	_putsUSART	;wreg free
  2603                           
  2604                           ;main.c: 147: putsUSART(itoa(DutyCycle, DC_str, 10));
  2605  000A22  0100               	movlb	0	; () banked
  2606  000A24  C084  F012         	movff	_DutyCycle+1,itoa@buf+1
  2607  000A28  0100               	movlb	0	; () banked
  2608  000A2A  C083  F011         	movff	_DutyCycle,itoa@buf
  2609  000A2E  0E00               	movlw	high _DC_str
  2610  000A30  6E14               	movwf	itoa@val+1,c
  2611  000A32  0E48               	movlw	low _DC_str
  2612  000A34  6E13               	movwf	itoa@val,c
  2613  000A36  0E00               	movlw	0
  2614  000A38  6E16               	movwf	itoa@base+1,c
  2615  000A3A  0E0A               	movlw	10
  2616  000A3C  6E15               	movwf	itoa@base,c
  2617  000A3E  EC65  F009         	call	_itoa	;wreg free
  2618  000A42  C011  F019         	movff	?_itoa,putsUSART@data
  2619  000A46  C012  F01A         	movff	?_itoa+1,putsUSART@data+1
  2620  000A4A  EC37  F009         	call	_putsUSART	;wreg free
  2621                           
  2622                           ;main.c: 148: putsUSART("\n");
  2623  000A4E  0E08               	movlw	high (STR_4+15)
  2624  000A50  6E1A               	movwf	putsUSART@data+1,c
  2625  000A52  0E2F               	movlw	low (STR_4+15)
  2626  000A54  6E19               	movwf	putsUSART@data,c
  2627  000A56  EC37  F009         	call	_putsUSART	;wreg free
  2628                           
  2629                           ;main.c: 149: }
  2630  000A5A  D006               	goto	i2l1942
  2631  000A5C                     i2l1940:
  2632                           
  2633                           ;main.c: 150: else
  2634                           ;main.c: 151: {
  2635                           ;main.c: 152: putsUSART("Error maquinola\n");
  2636  000A5C  0E08               	movlw	high STR_4
  2637  000A5E  6E1A               	movwf	putsUSART@data+1,c
  2638  000A60  0E20               	movlw	low STR_4
  2639  000A62  6E19               	movwf	putsUSART@data,c
  2640  000A64  EC37  F009         	call	_putsUSART	;wreg free
  2641  000A68                     i2l1942:
  2642                           
  2643                           ;main.c: 153: }
  2644                           ;main.c: 154: }
  2645                           ;main.c: 155: i++;
  2646  000A68  4A3F               	infsnz	_i,f,c
  2647  000A6A  2A40               	incf	_i+1,f,c
  2648                           
  2649                           ;main.c: 156: PIR1bits.RCIF = 0;
  2650  000A6C  9A9E               	bcf	3998,5,c	;volatile
  2651                           
  2652                           ;main.c: 157: }
  2653  000A6E  D024               	goto	i2l97
  2654  000A70                     i2l1946:
  2655                           
  2656                           ;main.c: 158: else
  2657                           ;main.c: 159: {
  2658                           ;main.c: 160: putsUSART(MessageBuffer);
  2659  000A70  0101               	movlb	1	; () banked
  2660  000A72  0E01               	movlw	high _MessageBuffer
  2661  000A74  6E1A               	movwf	putsUSART@data+1,c
  2662  000A76  0101               	movlb	1	; () banked
  2663  000A78  0E00               	movlw	low _MessageBuffer
  2664  000A7A  6E19               	movwf	putsUSART@data,c
  2665  000A7C  EC37  F009         	call	_putsUSART	;wreg free
  2666                           
  2667                           ;main.c: 161: for(;i>0;i--)
  2668  000A80  D00D               	goto	i2l1952
  2669  000A82                     i2l1948:
  2670                           
  2671                           ;main.c: 162: MessageBuffer[i] = 0x00;
  2672  000A82  0101               	movlb	1	; () banked
  2673  000A84  0E00               	movlw	low _MessageBuffer
  2674  000A86  243F               	addwf	_i,w,c
  2675  000A88  6ED9               	movwf	fsr2l,c
  2676  000A8A  0101               	movlb	1	; () banked
  2677  000A8C  0E01               	movlw	high _MessageBuffer
  2678  000A8E  2040               	addwfc	_i+1,w,c
  2679  000A90  6EDA               	movwf	fsr2h,c
  2680  000A92  0E00               	movlw	0
  2681  000A94  6EDF               	movwf	indf2,c
  2682                           
  2683                           ; BSR set to: 1
  2684  000A96  063F               	decf	_i,f,c
  2685  000A98  A0D8               	btfss	status,0,c
  2686  000A9A  0640               	decf	_i+1,f,c
  2687  000A9C                     i2l1952:
  2688  000A9C  5040               	movf	_i+1,w,c
  2689  000A9E  0A80               	xorlw	128
  2690  000AA0  6EF3               	movwf	prodl,c
  2691  000AA2  0E80               	movlw	128
  2692  000AA4  5CF3               	subwf	prodl,w,c
  2693  000AA6  0E01               	movlw	1
  2694  000AA8  B4D8               	btfsc	status,2,c
  2695  000AAA  5C3F               	subwf	_i,w,c
  2696  000AAC  B0D8               	btfsc	status,0,c
  2697  000AAE  D7E9               	goto	i2l1948
  2698  000AB0                     i2l1954:
  2699                           
  2700                           ;main.c: 163: i=0;
  2701  000AB0  0E00               	movlw	0
  2702  000AB2  6E40               	movwf	_i+1,c
  2703  000AB4  0E00               	movlw	0
  2704  000AB6  6E3F               	movwf	_i,c
  2705  000AB8                     i2l97:
  2706  000AB8  C02A  FFF5         	movff	??_ISR+13,tablat
  2707  000ABC  C029  FFF8         	movff	??_ISR+12,tblptru
  2708  000AC0  C028  FFF7         	movff	??_ISR+11,tblptrh
  2709  000AC4  C027  FFF6         	movff	??_ISR+10,tblptrl
  2710  000AC8  C026  FFF4         	movff	??_ISR+9,prodh
  2711  000ACC  C025  FFF3         	movff	??_ISR+8,prodl
  2712  000AD0  C024  FFDA         	movff	??_ISR+7,fsr2h
  2713  000AD4  C023  FFD9         	movff	??_ISR+6,fsr2l
  2714  000AD8  C022  FFE2         	movff	??_ISR+5,fsr1h
  2715  000ADC  C021  FFE1         	movff	??_ISR+4,fsr1l
  2716  000AE0  C020  FFEA         	movff	??_ISR+3,fsr0h
  2717  000AE4  C01F  FFE9         	movff	??_ISR+2,fsr0l
  2718  000AE8  C01E  FFFB         	movff	??_ISR+1,pclatu
  2719  000AEC  C01D  FFFA         	movff	??_ISR,pclath
  2720  000AF0  0011               	retfie		f
  2721  000AF2                     __end_of_ISR:
  2722                           	opt stack 0
  2723                           pclatu	equ	0xFFB
  2724                           pclath	equ	0xFFA
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           intcon	equ	0xFF2
  2732                           postinc0	equ	0xFEE
  2733                           fsr0h	equ	0xFEA
  2734                           fsr0l	equ	0xFE9
  2735                           wreg	equ	0xFE8
  2736                           fsr1h	equ	0xFE2
  2737                           fsr1l	equ	0xFE1
  2738                           indf2	equ	0xFDF
  2739                           fsr2h	equ	0xFDA
  2740                           fsr2l	equ	0xFD9
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _strncpy *****************
  2744 ;; Defined at:
  2745 ;;		line 8 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\strncpy.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  to              2    0[COMRAM] PTR unsigned char 
  2748 ;;		 -> DC_str(5), 
  2749 ;;  from            2    2[COMRAM] PTR const unsigned char 
  2750 ;;		 -> MessageBuffer(200), 
  2751 ;;  size            2    4[COMRAM] unsigned int 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  cp              2    6[COMRAM] PTR unsigned char 
  2754 ;;		 -> DC_str(5), 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2    0[COMRAM] PTR unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2764 ;;      Params:         6       0       0       0       0       0       0       0       0
  2765 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2767 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2768 ;;Total ram usage:        8 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_ISR
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text12
  2778  001210                     __ptext12:
  2779                           	opt stack 0
  2780  001210                     _strncpy:
  2781                           	opt stack 25
  2782                           
  2783                           ;incstack = 0
  2784  001210  C002  F008         	movff	strncpy@to+1,strncpy@cp+1
  2785  001214  C001  F007         	movff	strncpy@to,strncpy@cp
  2786  001218  D014               	goto	i2l1770
  2787  00121A                     i2l1764:
  2788  00121A  0605               	decf	strncpy@size,f,c
  2789  00121C  A0D8               	btfss	status,0,c
  2790  00121E  0606               	decf	strncpy@size+1,f,c
  2791  001220  C003  FFD9         	movff	strncpy@from,fsr2l
  2792  001224  C004  FFDA         	movff	strncpy@from+1,fsr2h
  2793  001228  4A03               	infsnz	strncpy@from,f,c
  2794  00122A  2A04               	incf	strncpy@from+1,f,c
  2795  00122C  C007  FFE1         	movff	strncpy@cp,fsr1l
  2796  001230  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  2797  001234  4A07               	infsnz	strncpy@cp,f,c
  2798  001236  2A08               	incf	strncpy@cp+1,f,c
  2799  001238  CFDF FFE7          	movff	indf2,indf1
  2800  00123C  50E7               	movf	indf1,w,c
  2801  00123E  B4D8               	btfsc	status,2,c
  2802  001240  D00D               	goto	i2l1776
  2803  001242                     i2l1770:
  2804  001242  5006               	movf	strncpy@size+1,w,c
  2805  001244  1005               	iorwf	strncpy@size,w,c
  2806  001246  B4D8               	btfsc	status,2,c
  2807  001248  D009               	goto	i2l1776
  2808  00124A  D7E7               	goto	i2l1764
  2809  00124C                     i2l1772:
  2810  00124C  C007  FFD9         	movff	strncpy@cp,fsr2l
  2811  001250  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  2812  001254  0E00               	movlw	0
  2813  001256  6EDF               	movwf	indf2,c
  2814  001258  4A07               	infsnz	strncpy@cp,f,c
  2815  00125A  2A08               	incf	strncpy@cp+1,f,c
  2816  00125C                     i2l1776:
  2817  00125C  0605               	decf	strncpy@size,f,c
  2818  00125E  A0D8               	btfss	status,0,c
  2819  001260  0606               	decf	strncpy@size+1,f,c
  2820  001262  2805               	incf	strncpy@size& (0+255),w,c
  2821  001264  B4D8               	btfsc	status,2,c
  2822  001266  2806               	incf	(strncpy@size+1)& (0+255),w,c
  2823  001268  B4D8               	btfsc	status,2,c
  2824                           
  2825                           ;	Return value of _strncpy is never used
  2826  00126A  0012               	return	
  2827  00126C  D7EF               	goto	i2l1772
  2828  00126E                     __end_of_strncpy:
  2829                           	opt stack 0
  2830                           pclatu	equ	0xFFB
  2831                           pclath	equ	0xFFA
  2832                           tblptru	equ	0xFF8
  2833                           tblptrh	equ	0xFF7
  2834                           tblptrl	equ	0xFF6
  2835                           tablat	equ	0xFF5
  2836                           prodh	equ	0xFF4
  2837                           prodl	equ	0xFF3
  2838                           intcon	equ	0xFF2
  2839                           postinc0	equ	0xFEE
  2840                           fsr0h	equ	0xFEA
  2841                           fsr0l	equ	0xFE9
  2842                           wreg	equ	0xFE8
  2843                           indf1	equ	0xFE7
  2844                           fsr1h	equ	0xFE2
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _putsUSART *****************
  2852 ;; Defined at:
  2853 ;;		line 14 in file "I:\Programas\Microchip\xc8\v1.33\sources\pic18\plib\USART\uputs.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  data            2   24[COMRAM] PTR unsigned char 
  2856 ;;		 -> STR_10(17), STR_9(2), STR_8(27), STR_7(17), 
  2857 ;;		 -> STR_6(2), RAM(2047), STR_5(27), STR_4(17), 
  2858 ;;		 -> STR_3(2), STR_2(27), DC_str(5), MessageBuffer(200), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;		None               void
  2863 ;; Registers used:
  2864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:         2       0       0       0       0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2872 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2874 ;;Total ram usage:        4 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    1
  2877 ;; This function calls:
  2878 ;;		_WriteUSART
  2879 ;; This function is called by:
  2880 ;;		_ISR
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text13
  2885  00126E                     __ptext13:
  2886                           	opt stack 0
  2887  00126E                     _putsUSART:
  2888                           	opt stack 24
  2889  00126E                     i2l252:
  2890  00126E  A2AC               	btfss	4012,1,c	;volatile
  2891  001270  D7FE               	goto	i2l252
  2892  001272  C019  FFF6         	movff	putsUSART@data,tblptrl
  2893  001276  C01A  FFF7         	movff	putsUSART@data+1,tblptrh
  2894  00127A  6AF8               	clrf	tblptru,c
  2895  00127C  0E07               	movlw	(high __ramtop+-1)
  2896  00127E  64F7               	cpfsgt	tblptrh,c
  2897  001280  D003               	bra	i2u127_47
  2898  001282  0008               	tblrd		*
  2899  001284  50F5               	movf	tablat,w,c
  2900  001286  D005               	bra	i2u127_40
  2901  001288                     i2u127_47:
  2902  001288  CFF6 FFE1          	movff	tblptrl,fsr1l
  2903  00128C  CFF7 FFE2          	movff	tblptrh,fsr1h
  2904  001290  50E7               	movf	indf1,w,c
  2905  001292                     i2u127_40:
  2906  001292  EC4C  F00A         	call	_WriteUSART
  2907  001296  5019               	movf	putsUSART@data,w,c
  2908  001298  6E1B               	movwf	??_putsUSART& (0+255),c
  2909  00129A  501A               	movf	putsUSART@data+1,w,c
  2910  00129C  6E1C               	movwf	(??_putsUSART+1)& (0+255),c
  2911  00129E  4A19               	infsnz	putsUSART@data,f,c
  2912  0012A0  2A1A               	incf	putsUSART@data+1,f,c
  2913  0012A2  C01B  FFF6         	movff	??_putsUSART,tblptrl
  2914  0012A6  C01C  FFF7         	movff	??_putsUSART+1,tblptrh
  2915  0012AA  6AF8               	clrf	tblptru,c
  2916  0012AC  0E07               	movlw	(high __ramtop+-1)
  2917  0012AE  64F7               	cpfsgt	tblptrh,c
  2918  0012B0  D003               	bra	i2u128_47
  2919  0012B2  0008               	tblrd		*
  2920  0012B4  50F5               	movf	tablat,w,c
  2921  0012B6  D005               	bra	i2u128_40
  2922  0012B8                     i2u128_47:
  2923  0012B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  2924  0012BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  2925  0012C0  50E7               	movf	indf1,w,c
  2926  0012C2                     i2u128_40:
  2927  0012C2  0900               	iorlw	0
  2928  0012C4  B4D8               	btfsc	status,2,c
  2929  0012C6  0012               	return	
  2930  0012C8  D7D2               	goto	i2l252
  2931  0012CA                     __end_of_putsUSART:
  2932                           	opt stack 0
  2933                           pclatu	equ	0xFFB
  2934                           pclath	equ	0xFFA
  2935                           tblptru	equ	0xFF8
  2936                           tblptrh	equ	0xFF7
  2937                           tblptrl	equ	0xFF6
  2938                           tablat	equ	0xFF5
  2939                           prodh	equ	0xFF4
  2940                           prodl	equ	0xFF3
  2941                           intcon	equ	0xFF2
  2942                           postinc0	equ	0xFEE
  2943                           fsr0h	equ	0xFEA
  2944                           fsr0l	equ	0xFE9
  2945                           wreg	equ	0xFE8
  2946                           indf1	equ	0xFE7
  2947                           fsr1h	equ	0xFE2
  2948                           fsr1l	equ	0xFE1
  2949                           indf2	equ	0xFDF
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _WriteUSART *****************
  2955 ;; Defined at:
  2956 ;;		line 13 in file "I:\Programas\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  data            1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  data            1    0[COMRAM] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        1 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_putsUSART
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text14
  2984  001498                     __ptext14:
  2985                           	opt stack 0
  2986  001498                     _WriteUSART:
  2987                           	opt stack 24
  2988                           
  2989                           ;incstack = 0
  2990                           ;WriteUSART@data stored from wreg
  2991  001498  6E01               	movwf	WriteUSART@data,c
  2992  00149A  ACAC               	btfss	4012,6,c	;volatile
  2993  00149C  D003               	goto	i2l1550
  2994  00149E  90AC               	bcf	4012,0,c	;volatile
  2995  0014A0  B243               	btfsc	_USART_Status,1,c
  2996  0014A2  80AC               	bsf	4012,0,c	;volatile
  2997  0014A4                     i2l1550:
  2998  0014A4  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  2999  0014A8  0012               	return	
  3000  0014AA                     __end_of_WriteUSART:
  3001                           	opt stack 0
  3002                           pclatu	equ	0xFFB
  3003                           pclath	equ	0xFFA
  3004                           tblptru	equ	0xFF8
  3005                           tblptrh	equ	0xFF7
  3006                           tblptrl	equ	0xFF6
  3007                           tablat	equ	0xFF5
  3008                           prodh	equ	0xFF4
  3009                           prodl	equ	0xFF3
  3010                           intcon	equ	0xFF2
  3011                           postinc0	equ	0xFEE
  3012                           fsr0h	equ	0xFEA
  3013                           fsr0l	equ	0xFE9
  3014                           wreg	equ	0xFE8
  3015                           indf1	equ	0xFE7
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           indf2	equ	0xFDF
  3019                           fsr2h	equ	0xFDA
  3020                           fsr2l	equ	0xFD9
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _itoa *****************
  3024 ;; Defined at:
  3025 ;;		line 4 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\itoa.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  buf             2   16[COMRAM] PTR unsigned char 
  3028 ;;		 -> RAM(2047), 
  3029 ;;  val             2   18[COMRAM] int 
  3030 ;;  base            2   20[COMRAM] int 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  cp              2   22[COMRAM] PTR unsigned char 
  3033 ;;		 -> RAM(2047), 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2   16[COMRAM] PTR unsigned char 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, cstack
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3043 ;;      Params:         6       0       0       0       0       0       0       0       0
  3044 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3046 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3047 ;;Total ram usage:        8 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; Hardware stack levels required when called:    2
  3050 ;; This function calls:
  3051 ;;		_utoa
  3052 ;; This function is called by:
  3053 ;;		_ISR
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text15
  3058  0012CA                     __ptext15:
  3059                           	opt stack 0
  3060  0012CA                     _itoa:
  3061                           	opt stack 23
  3062                           
  3063                           ;incstack = 0
  3064  0012CA  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  3065  0012CE  C011  F017         	movff	itoa@buf,itoa@cp
  3066  0012D2  5014               	movf	itoa@val+1,w,c
  3067  0012D4  0A80               	xorlw	128
  3068  0012D6  6EF3               	movwf	prodl,c
  3069  0012D8  0E80               	movlw	128
  3070  0012DA  5CF3               	subwf	prodl,w,c
  3071  0012DC  0E00               	movlw	0
  3072  0012DE  B4D8               	btfsc	status,2,c
  3073  0012E0  5C13               	subwf	itoa@val,w,c
  3074  0012E2  B0D8               	btfsc	status,0,c
  3075  0012E4  D00C               	goto	i2l1820
  3076  0012E6  C011  FFD9         	movff	itoa@buf,fsr2l
  3077  0012EA  C012  FFDA         	movff	itoa@buf+1,fsr2h
  3078  0012EE  0E2D               	movlw	45
  3079  0012F0  6EDF               	movwf	indf2,c
  3080  0012F2  4A11               	infsnz	itoa@buf,f,c
  3081  0012F4  2A12               	incf	itoa@buf+1,f,c
  3082  0012F6  6C13               	negf	itoa@val,c
  3083  0012F8  1E14               	comf	itoa@val+1,f,c
  3084  0012FA  B0D8               	btfsc	status,0,c
  3085  0012FC  2A14               	incf	itoa@val+1,f,c
  3086  0012FE                     i2l1820:
  3087  0012FE  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  3088  001302  C011  F008         	movff	itoa@buf,utoa@buf
  3089  001306  C013  F00A         	movff	itoa@val,utoa@val
  3090  00130A  C014  F00B         	movff	itoa@val+1,utoa@val+1
  3091  00130E  C015  F00C         	movff	itoa@base,utoa@base
  3092  001312  C016  F00D         	movff	itoa@base+1,utoa@base+1
  3093  001316  EC4E  F007         	call	_utoa	;wreg free
  3094  00131A  C018  F012         	movff	itoa@cp+1,?_itoa+1
  3095  00131E  C017  F011         	movff	itoa@cp,?_itoa
  3096  001322  0012               	return	
  3097  001324                     __end_of_itoa:
  3098                           	opt stack 0
  3099                           pclatu	equ	0xFFB
  3100                           pclath	equ	0xFFA
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           prodh	equ	0xFF4
  3106                           prodl	equ	0xFF3
  3107                           intcon	equ	0xFF2
  3108                           postinc0	equ	0xFEE
  3109                           fsr0h	equ	0xFEA
  3110                           fsr0l	equ	0xFE9
  3111                           wreg	equ	0xFE8
  3112                           indf1	equ	0xFE7
  3113                           fsr1h	equ	0xFE2
  3114                           fsr1l	equ	0xFE1
  3115                           indf2	equ	0xFDF
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function _utoa *****************
  3121 ;; Defined at:
  3122 ;;		line 17 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\itoa.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  buf             2    7[COMRAM] PTR unsigned char 
  3125 ;;		 -> RAM(2047), 
  3126 ;;  val             2    9[COMRAM] unsigned int 
  3127 ;;  base            2   11[COMRAM] int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  v               2   13[COMRAM] unsigned int 
  3130 ;;  c               1   15[COMRAM] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2    7[COMRAM] PTR unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3140 ;;      Params:         6       0       0       0       0       0       0       0       0
  3141 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3143 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3144 ;;Total ram usage:        9 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    1
  3147 ;; This function calls:
  3148 ;;		___lwmod
  3149 ;;		i2___lwdiv
  3150 ;; This function is called by:
  3151 ;;		_itoa
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text16
  3156  000E9C                     __ptext16:
  3157                           	opt stack 0
  3158  000E9C                     _utoa:
  3159                           	opt stack 23
  3160                           
  3161                           ;incstack = 0
  3162  000E9C  C00A  F00E         	movff	utoa@val,utoa@v
  3163  000EA0  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  3164  000EA4                     i2l1572:
  3165  000EA4  C00E  F001         	movff	utoa@v,i2___lwdiv@dividend
  3166  000EA8  C00F  F002         	movff	utoa@v+1,i2___lwdiv@dividend+1
  3167  000EAC  C00C  F003         	movff	utoa@base,i2___lwdiv@divisor
  3168  000EB0  C00D  F004         	movff	utoa@base+1,i2___lwdiv@divisor+1
  3169  000EB4  EC92  F009         	call	i2___lwdiv	;wreg free
  3170  000EB8  C001  F00E         	movff	?i2___lwdiv,utoa@v
  3171  000EBC  C002  F00F         	movff	?i2___lwdiv+1,utoa@v+1
  3172  000EC0  4A08               	infsnz	utoa@buf,f,c
  3173  000EC2  2A09               	incf	utoa@buf+1,f,c
  3174  000EC4  500F               	movf	utoa@v+1,w,c
  3175  000EC6  100E               	iorwf	utoa@v,w,c
  3176  000EC8  A4D8               	btfss	status,2,c
  3177  000ECA  D7EC               	goto	i2l1572
  3178  000ECC  C008  FFD9         	movff	utoa@buf,fsr2l
  3179  000ED0  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3180  000ED4  0E00               	movlw	0
  3181  000ED6  6EDF               	movwf	indf2,c
  3182  000ED8  0608               	decf	utoa@buf,f,c
  3183  000EDA  A0D8               	btfss	status,0,c
  3184  000EDC  0609               	decf	utoa@buf+1,f,c
  3185  000EDE                     i2l1582:
  3186  000EDE  C00A  F001         	movff	utoa@val,___lwmod@dividend
  3187  000EE2  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  3188  000EE6  C00C  F003         	movff	utoa@base,___lwmod@divisor
  3189  000EEA  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  3190  000EEE  ECDF  F009         	call	___lwmod	;wreg free
  3191  000EF2  5001               	movf	?___lwmod,w,c
  3192  000EF4  6E10               	movwf	utoa@c,c
  3193  000EF6  C00A  F001         	movff	utoa@val,i2___lwdiv@dividend
  3194  000EFA  C00B  F002         	movff	utoa@val+1,i2___lwdiv@dividend+1
  3195  000EFE  C00C  F003         	movff	utoa@base,i2___lwdiv@divisor
  3196  000F02  C00D  F004         	movff	utoa@base+1,i2___lwdiv@divisor+1
  3197  000F06  EC92  F009         	call	i2___lwdiv	;wreg free
  3198  000F0A  C001  F00A         	movff	?i2___lwdiv,utoa@val
  3199  000F0E  C002  F00B         	movff	?i2___lwdiv+1,utoa@val+1
  3200  000F12  0E09               	movlw	9
  3201  000F14  6410               	cpfsgt	utoa@c,c
  3202  000F16  D002               	goto	i2l735
  3203  000F18  0E07               	movlw	7
  3204  000F1A  2610               	addwf	utoa@c,f,c
  3205  000F1C                     i2l735:
  3206  000F1C  0E30               	movlw	48
  3207  000F1E  2610               	addwf	utoa@c,f,c
  3208  000F20  C008  FFD9         	movff	utoa@buf,fsr2l
  3209  000F24  C009  FFDA         	movff	utoa@buf+1,fsr2h
  3210  000F28  C010  FFDF         	movff	utoa@c,indf2
  3211  000F2C  0608               	decf	utoa@buf,f,c
  3212  000F2E  A0D8               	btfss	status,0,c
  3213  000F30  0609               	decf	utoa@buf+1,f,c
  3214  000F32  500B               	movf	utoa@val+1,w,c
  3215  000F34  100A               	iorwf	utoa@val,w,c
  3216  000F36  A4D8               	btfss	status,2,c
  3217  000F38  D7D2               	goto	i2l1582
  3218                           
  3219                           ;	Return value of _utoa is never used
  3220  000F3A  4A08               	infsnz	utoa@buf,f,c
  3221  000F3C  2A09               	incf	utoa@buf+1,f,c
  3222  000F3E  0012               	return	
  3223  000F40                     __end_of_utoa:
  3224                           	opt stack 0
  3225                           pclatu	equ	0xFFB
  3226                           pclath	equ	0xFFA
  3227                           tblptru	equ	0xFF8
  3228                           tblptrh	equ	0xFF7
  3229                           tblptrl	equ	0xFF6
  3230                           tablat	equ	0xFF5
  3231                           prodh	equ	0xFF4
  3232                           prodl	equ	0xFF3
  3233                           intcon	equ	0xFF2
  3234                           postinc0	equ	0xFEE
  3235                           fsr0h	equ	0xFEA
  3236                           fsr0l	equ	0xFE9
  3237                           wreg	equ	0xFE8
  3238                           indf1	equ	0xFE7
  3239                           fsr1h	equ	0xFE2
  3240                           fsr1l	equ	0xFE1
  3241                           indf2	equ	0xFDF
  3242                           fsr2h	equ	0xFDA
  3243                           fsr2l	equ	0xFD9
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function i2___lwdiv *****************
  3247 ;; Defined at:
  3248 ;;		line 8 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;  dividend        2    0[COMRAM] unsigned int 
  3251 ;;  divisor         2    2[COMRAM] unsigned int 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  3254 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  2    0[COMRAM] unsigned int 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3264 ;;      Params:         4       0       0       0       0       0       0       0       0
  3265 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3267 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3268 ;;Total ram usage:        7 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_utoa
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277                           	psect	text17
  3278  001324                     __ptext17:
  3279                           	opt stack 0
  3280  001324                     i2___lwdiv:
  3281                           	opt stack 23
  3282                           
  3283                           ;incstack = 0
  3284  001324  0E00               	movlw	0
  3285  001326  6E06               	movwf	i2___lwdiv@quotient+1,c
  3286  001328  0E00               	movlw	0
  3287  00132A  6E05               	movwf	i2___lwdiv@quotient,c
  3288  00132C  5004               	movf	i2___lwdiv@divisor+1,w,c
  3289  00132E  1003               	iorwf	i2___lwdiv@divisor,w,c
  3290  001330  B4D8               	btfsc	status,2,c
  3291  001332  D01C               	goto	i2l829
  3292  001334  0E01               	movlw	1
  3293  001336  6E07               	movwf	i2___lwdiv@counter,c
  3294  001338  D004               	goto	i2l1514
  3295  00133A                     i2l1512:
  3296  00133A  90D8               	bcf	status,0,c
  3297  00133C  3603               	rlcf	i2___lwdiv@divisor,f,c
  3298  00133E  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  3299  001340  2A07               	incf	i2___lwdiv@counter,f,c
  3300  001342                     i2l1514:
  3301  001342  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  3302  001344  D7FA               	goto	i2l1512
  3303  001346                     i2l1516:
  3304  001346  90D8               	bcf	status,0,c
  3305  001348  3605               	rlcf	i2___lwdiv@quotient,f,c
  3306  00134A  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  3307  00134C  5003               	movf	i2___lwdiv@divisor,w,c
  3308  00134E  5C01               	subwf	i2___lwdiv@dividend,w,c
  3309  001350  5004               	movf	i2___lwdiv@divisor+1,w,c
  3310  001352  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  3311  001354  A0D8               	btfss	status,0,c
  3312  001356  D005               	goto	i2l1524
  3313  001358  5003               	movf	i2___lwdiv@divisor,w,c
  3314  00135A  5E01               	subwf	i2___lwdiv@dividend,f,c
  3315  00135C  5004               	movf	i2___lwdiv@divisor+1,w,c
  3316  00135E  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  3317  001360  8005               	bsf	i2___lwdiv@quotient,0,c
  3318  001362                     i2l1524:
  3319  001362  90D8               	bcf	status,0,c
  3320  001364  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  3321  001366  3203               	rrcf	i2___lwdiv@divisor,f,c
  3322  001368  2E07               	decfsz	i2___lwdiv@counter,f,c
  3323  00136A  D7ED               	goto	i2l1516
  3324  00136C                     i2l829:
  3325  00136C  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  3326  001370  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  3327  001374  0012               	return	
  3328  001376                     __end_ofi2___lwdiv:
  3329                           	opt stack 0
  3330                           pclatu	equ	0xFFB
  3331                           pclath	equ	0xFFA
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           prodh	equ	0xFF4
  3337                           prodl	equ	0xFF3
  3338                           intcon	equ	0xFF2
  3339                           postinc0	equ	0xFEE
  3340                           fsr0h	equ	0xFEA
  3341                           fsr0l	equ	0xFE9
  3342                           wreg	equ	0xFE8
  3343                           indf1	equ	0xFE7
  3344                           fsr1h	equ	0xFE2
  3345                           fsr1l	equ	0xFE1
  3346                           indf2	equ	0xFDF
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function ___lwmod *****************
  3352 ;; Defined at:
  3353 ;;		line 8 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  dividend        2    0[COMRAM] unsigned int 
  3356 ;;  divisor         2    2[COMRAM] unsigned int 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  counter         1    4[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  2    0[COMRAM] unsigned int 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         4       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        5 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_utoa
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text18
  3382  0013BE                     __ptext18:
  3383                           	opt stack 0
  3384  0013BE                     ___lwmod:
  3385                           	opt stack 23
  3386                           
  3387                           ;incstack = 0
  3388  0013BE  5004               	movf	___lwmod@divisor+1,w,c
  3389  0013C0  1003               	iorwf	___lwmod@divisor,w,c
  3390  0013C2  B4D8               	btfsc	status,2,c
  3391  0013C4  D018               	goto	i2l839
  3392  0013C6  0E01               	movlw	1
  3393  0013C8  6E05               	movwf	___lwmod@counter,c
  3394  0013CA  D004               	goto	i2l1496
  3395  0013CC                     i2l1494:
  3396  0013CC  90D8               	bcf	status,0,c
  3397  0013CE  3603               	rlcf	___lwmod@divisor,f,c
  3398  0013D0  3604               	rlcf	___lwmod@divisor+1,f,c
  3399  0013D2  2A05               	incf	___lwmod@counter,f,c
  3400  0013D4                     i2l1496:
  3401  0013D4  AE04               	btfss	___lwmod@divisor+1,7,c
  3402  0013D6  D7FA               	goto	i2l1494
  3403  0013D8                     i2l1498:
  3404  0013D8  5003               	movf	___lwmod@divisor,w,c
  3405  0013DA  5C01               	subwf	___lwmod@dividend,w,c
  3406  0013DC  5004               	movf	___lwmod@divisor+1,w,c
  3407  0013DE  5802               	subwfb	___lwmod@dividend+1,w,c
  3408  0013E0  A0D8               	btfss	status,0,c
  3409  0013E2  D004               	goto	i2l1502
  3410  0013E4  5003               	movf	___lwmod@divisor,w,c
  3411  0013E6  5E01               	subwf	___lwmod@dividend,f,c
  3412  0013E8  5004               	movf	___lwmod@divisor+1,w,c
  3413  0013EA  5A02               	subwfb	___lwmod@dividend+1,f,c
  3414  0013EC                     i2l1502:
  3415  0013EC  90D8               	bcf	status,0,c
  3416  0013EE  3204               	rrcf	___lwmod@divisor+1,f,c
  3417  0013F0  3203               	rrcf	___lwmod@divisor,f,c
  3418  0013F2  2E05               	decfsz	___lwmod@counter,f,c
  3419  0013F4  D7F1               	goto	i2l1498
  3420  0013F6                     i2l839:
  3421  0013F6  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3422  0013FA  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3423  0013FE  0012               	return	
  3424  001400                     __end_of___lwmod:
  3425                           	opt stack 0
  3426                           pclatu	equ	0xFFB
  3427                           pclath	equ	0xFFA
  3428                           tblptru	equ	0xFF8
  3429                           tblptrh	equ	0xFF7
  3430                           tblptrl	equ	0xFF6
  3431                           tablat	equ	0xFF5
  3432                           prodh	equ	0xFF4
  3433                           prodl	equ	0xFF3
  3434                           intcon	equ	0xFF2
  3435                           postinc0	equ	0xFEE
  3436                           fsr0h	equ	0xFEA
  3437                           fsr0l	equ	0xFE9
  3438                           wreg	equ	0xFE8
  3439                           indf1	equ	0xFE7
  3440                           fsr1h	equ	0xFE2
  3441                           fsr1l	equ	0xFE1
  3442                           indf2	equ	0xFDF
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function _atoi *****************
  3448 ;; Defined at:
  3449 ;;		line 5 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\atoi.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3452 ;;		 -> DC_str(5), 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  a               2   11[COMRAM] int 
  3455 ;;  sign            1   10[COMRAM] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2    6[COMRAM] int 
  3458 ;; Registers used:
  3459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3465 ;;      Params:         2       0       0       0       0       0       0       0       0
  3466 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3467 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3468 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3469 ;;Total ram usage:        7 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    1
  3472 ;; This function calls:
  3473 ;;		___wmul
  3474 ;;		_isdigit
  3475 ;; This function is called by:
  3476 ;;		_ISR
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text19
  3481  000D10                     __ptext19:
  3482                           	opt stack 0
  3483  000D10                     _atoi:
  3484                           	opt stack 24
  3485                           
  3486                           ;incstack = 0
  3487  000D10  D002               	goto	i2l1782
  3488  000D12                     i2l1780:
  3489  000D12  4A07               	infsnz	atoi@s,f,c
  3490  000D14  2A08               	incf	atoi@s+1,f,c
  3491  000D16                     i2l1782:
  3492  000D16  C007  FFD9         	movff	atoi@s,fsr2l
  3493  000D1A  C008  FFDA         	movff	atoi@s+1,fsr2h
  3494  000D1E  50DF               	movf	indf2,w,c
  3495  000D20  0A20               	xorlw	32
  3496  000D22  B4D8               	btfsc	status,2,c
  3497  000D24  D7F6               	goto	i2l1780
  3498  000D26  C007  FFD9         	movff	atoi@s,fsr2l
  3499  000D2A  C008  FFDA         	movff	atoi@s+1,fsr2h
  3500  000D2E  50DF               	movf	indf2,w,c
  3501  000D30  0A09               	xorlw	9
  3502  000D32  B4D8               	btfsc	status,2,c
  3503  000D34  D7EE               	goto	i2l1780
  3504  000D36  0E00               	movlw	0
  3505  000D38  6E0D               	movwf	atoi@a+1,c
  3506  000D3A  0E00               	movlw	0
  3507  000D3C  6E0C               	movwf	atoi@a,c
  3508  000D3E  0E00               	movlw	0
  3509  000D40  6E0B               	movwf	atoi@sign,c
  3510  000D42  0E2D               	movlw	45
  3511  000D44  C007  FFD9         	movff	atoi@s,fsr2l
  3512  000D48  C008  FFDA         	movff	atoi@s+1,fsr2h
  3513  000D4C  62DF               	cpfseq	indf2,c
  3514  000D4E  D002               	goto	i2l1792
  3515  000D50  2A0B               	incf	atoi@sign,f,c
  3516  000D52  D023               	goto	L1
  3517  000D54                     i2l1792:
  3518  000D54  0E2B               	movlw	43
  3519  000D56  C007  FFD9         	movff	atoi@s,fsr2l
  3520  000D5A  C008  FFDA         	movff	atoi@s+1,fsr2h
  3521  000D5E  62DF               	cpfseq	indf2,c
  3522  000D60  D01E               	goto	i2l1800
  3523  000D62  D01B               	goto	L1
  3524  000D64                     i2l1796:
  3525  000D64  C00C  F001         	movff	atoi@a,___wmul@multiplier
  3526  000D68  C00D  F002         	movff	atoi@a+1,___wmul@multiplier+1
  3527  000D6C  0E00               	movlw	0
  3528  000D6E  6E04               	movwf	___wmul@multiplicand+1,c
  3529  000D70  0E0A               	movlw	10
  3530  000D72  6E03               	movwf	___wmul@multiplicand,c
  3531  000D74  EC00  F00A         	call	___wmul	;wreg free
  3532  000D78  C007  FFD9         	movff	atoi@s,fsr2l
  3533  000D7C  C008  FFDA         	movff	atoi@s+1,fsr2h
  3534  000D80  50DF               	movf	indf2,w,c
  3535  000D82  6E09               	movwf	??_atoi& (0+255),c
  3536  000D84  6A0A               	clrf	(??_atoi+1)& (0+255),c
  3537  000D86  5001               	movf	?___wmul,w,c
  3538  000D88  2609               	addwf	??_atoi,f,c
  3539  000D8A  5002               	movf	?___wmul+1,w,c
  3540  000D8C  220A               	addwfc	??_atoi+1,f,c
  3541  000D8E  0ED0               	movlw	208
  3542  000D90  2409               	addwf	??_atoi,w,c
  3543  000D92  6E0C               	movwf	atoi@a,c
  3544  000D94  0EFF               	movlw	255
  3545  000D96  200A               	addwfc	??_atoi+1,w,c
  3546  000D98  6E0D               	movwf	atoi@a+1,c
  3547  000D9A                     L1:
  3548  000D9A  4A07               	infsnz	atoi@s,f,c
  3549  000D9C  2A08               	incf	atoi@s+1,f,c
  3550  000D9E                     i2l1800:
  3551  000D9E  C007  FFD9         	movff	atoi@s,fsr2l
  3552  000DA2  C008  FFDA         	movff	atoi@s+1,fsr2h
  3553  000DA6  50DF               	movf	indf2,w,c
  3554  000DA8  EC23  F00A         	call	_isdigit
  3555  000DAC  B0D8               	btfsc	status,0,c
  3556  000DAE  D7DA               	goto	i2l1796
  3557  000DB0  500B               	movf	atoi@sign,w,c
  3558  000DB2  B4D8               	btfsc	status,2,c
  3559  000DB4  D00D               	goto	i2l465
  3560  000DB6  C00C  F009         	movff	atoi@a,??_atoi
  3561  000DBA  C00D  F00A         	movff	atoi@a+1,??_atoi+1
  3562  000DBE  1E09               	comf	??_atoi,f,c
  3563  000DC0  1E0A               	comf	??_atoi+1,f,c
  3564  000DC2  4A09               	infsnz	??_atoi,f,c
  3565  000DC4  2A0A               	incf	??_atoi+1,f,c
  3566  000DC6  C009  F007         	movff	??_atoi,?_atoi
  3567  000DCA  C00A  F008         	movff	??_atoi+1,?_atoi+1
  3568  000DCE  D004               	goto	i2l466
  3569  000DD0                     i2l465:
  3570  000DD0  C00C  F007         	movff	atoi@a,?_atoi
  3571  000DD4  C00D  F008         	movff	atoi@a+1,?_atoi+1
  3572  000DD8                     i2l466:
  3573  000DD8  0012               	return	
  3574  000DDA                     __end_of_atoi:
  3575                           	opt stack 0
  3576                           pclatu	equ	0xFFB
  3577                           pclath	equ	0xFFA
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           intcon	equ	0xFF2
  3585                           postinc0	equ	0xFEE
  3586                           fsr0h	equ	0xFEA
  3587                           fsr0l	equ	0xFE9
  3588                           wreg	equ	0xFE8
  3589                           indf1	equ	0xFE7
  3590                           fsr1h	equ	0xFE2
  3591                           fsr1l	equ	0xFE1
  3592                           indf2	equ	0xFDF
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _isdigit *****************
  3598 ;; Defined at:
  3599 ;;		line 8 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\isdigit.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  c               1    wreg     unsigned char 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  c               1    2[COMRAM] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;		None               void
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0
  3614 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3615 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3616 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3617 ;;Total ram usage:        3 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_atoi
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text20
  3627  001446                     __ptext20:
  3628                           	opt stack 0
  3629  001446                     _isdigit:
  3630                           	opt stack 24
  3631                           
  3632                           ;incstack = 0
  3633                           ;isdigit@c stored from wreg
  3634  001446  6E03               	movwf	isdigit@c,c
  3635  001448  0E00               	movlw	0
  3636  00144A  6E02               	movwf	_isdigit$1328,c
  3637  00144C  0E3A               	movlw	58
  3638  00144E  5C03               	subwf	isdigit@c,w,c
  3639  001450  B0D8               	btfsc	status,0,c
  3640  001452  D005               	goto	i2l1566
  3641  001454  0E2F               	movlw	47
  3642  001456  6403               	cpfsgt	isdigit@c,c
  3643  001458  D002               	goto	i2l1566
  3644  00145A  0E01               	movlw	1
  3645  00145C  6E02               	movwf	_isdigit$1328,c
  3646  00145E                     i2l1566:
  3647  00145E  C002  F001         	movff	_isdigit$1328,??_isdigit
  3648  001462  3001               	rrcf	??_isdigit,w,c
  3649  001464  0012               	return	
  3650  001466                     __end_of_isdigit:
  3651                           	opt stack 0
  3652                           pclatu	equ	0xFFB
  3653                           pclath	equ	0xFFA
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           intcon	equ	0xFF2
  3661                           postinc0	equ	0xFEE
  3662                           fsr0h	equ	0xFEA
  3663                           fsr0l	equ	0xFE9
  3664                           wreg	equ	0xFE8
  3665                           indf1	equ	0xFE7
  3666                           fsr1h	equ	0xFE2
  3667                           fsr1l	equ	0xFE1
  3668                           indf2	equ	0xFDF
  3669                           fsr2h	equ	0xFDA
  3670                           fsr2l	equ	0xFD9
  3671                           status	equ	0xFD8
  3672                           
  3673 ;; *************** function ___wmul *****************
  3674 ;; Defined at:
  3675 ;;		line 15 in file "I:\Programas\Microchip\xc8\v1.33\sources\common\Umul16.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  multiplier      2    0[COMRAM] unsigned int 
  3678 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  product         2    4[COMRAM] unsigned int 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  2    0[COMRAM] unsigned int 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, prodl, prodh
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3690 ;;      Params:         4       0       0       0       0       0       0       0       0
  3691 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3693 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3694 ;;Total ram usage:        6 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_atoi
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text21
  3704  001400                     __ptext21:
  3705                           	opt stack 0
  3706  001400                     ___wmul:
  3707                           	opt stack 24
  3708                           
  3709                           ;incstack = 0
  3710  001400  5001               	movf	___wmul@multiplier,w,c
  3711  001402  0203               	mulwf	___wmul@multiplicand,c
  3712  001404  CFF3 F005          	movff	prodl,___wmul@product
  3713  001408  CFF4 F006          	movff	prodh,___wmul@product+1
  3714  00140C  5001               	movf	___wmul@multiplier,w,c
  3715  00140E  0204               	mulwf	___wmul@multiplicand+1,c
  3716  001410  50F3               	movf	prodl,w,c
  3717  001412  2606               	addwf	___wmul@product+1,f,c
  3718  001414  5002               	movf	___wmul@multiplier+1,w,c
  3719  001416  0203               	mulwf	___wmul@multiplicand,c
  3720  001418  50F3               	movf	prodl,w,c
  3721  00141A  2606               	addwf	___wmul@product+1,f,c
  3722  00141C  C005  F001         	movff	___wmul@product,?___wmul
  3723  001420  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3724  001424  0012               	return	
  3725  001426                     __end_of___wmul:
  3726                           	opt stack 0
  3727                           pclatu	equ	0xFFB
  3728                           pclath	equ	0xFFA
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           intcon	equ	0xFF2
  3736                           postinc0	equ	0xFEE
  3737                           fsr0h	equ	0xFEA
  3738                           fsr0l	equ	0xFE9
  3739                           wreg	equ	0xFE8
  3740                           indf1	equ	0xFE7
  3741                           fsr1h	equ	0xFE2
  3742                           fsr1l	equ	0xFE1
  3743                           indf2	equ	0xFDF
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _ReadUSART *****************
  3749 ;; Defined at:
  3750 ;;		line 15 in file "I:\Programas\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  data            1    0[COMRAM] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0
  3765 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3767 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3768 ;;Total ram usage:        1 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_ISR
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text22
  3778  001466                     __ptext22:
  3779                           	opt stack 0
  3780  001466                     _ReadUSART:
  3781                           	opt stack 25
  3782                           
  3783                           ;incstack = 0
  3784  001466  0EF2               	movlw	242
  3785  001468  1643               	andwf	_USART_Status,f,c
  3786  00146A  ACAB               	btfss	4011,6,c	;volatile
  3787  00146C  D003               	goto	i2l265
  3788  00146E  9043               	bcf	_USART_Status,0,c
  3789  001470  B0AB               	btfsc	4011,0,c	;volatile
  3790  001472  8043               	bsf	_USART_Status,0,c
  3791  001474                     i2l265:
  3792  001474  B4AB               	btfsc	4011,2,c	;volatile
  3793  001476  8443               	bsf	_USART_Status,2,c
  3794  001478  B2AB               	btfsc	4011,1,c	;volatile
  3795  00147A  8643               	bsf	_USART_Status,3,c
  3796  00147C  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  3797  001480  5001               	movf	ReadUSART@data,w,c
  3798  001482  0012               	return	
  3799  001484                     __end_of_ReadUSART:
  3800                           	opt stack 0
  3801                           pclatu	equ	0xFFB
  3802                           pclath	equ	0xFFA
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           prodh	equ	0xFF4
  3808                           prodl	equ	0xFF3
  3809                           intcon	equ	0xFF2
  3810                           postinc0	equ	0xFEE
  3811                           fsr0h	equ	0xFEA
  3812                           fsr0l	equ	0xFE9
  3813                           wreg	equ	0xFE8
  3814                           indf1	equ	0xFE7
  3815                           fsr1h	equ	0xFE2
  3816                           fsr1l	equ	0xFE1
  3817                           indf2	equ	0xFDF
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8
  3821                           pclatu	equ	0xFFB
  3822                           pclath	equ	0xFFA
  3823                           tblptru	equ	0xFF8
  3824                           tblptrh	equ	0xFF7
  3825                           tblptrl	equ	0xFF6
  3826                           tablat	equ	0xFF5
  3827                           prodh	equ	0xFF4
  3828                           prodl	equ	0xFF3
  3829                           intcon	equ	0xFF2
  3830                           postinc0	equ	0xFEE
  3831                           fsr0h	equ	0xFEA
  3832                           fsr0l	equ	0xFE9
  3833                           wreg	equ	0xFE8
  3834                           indf1	equ	0xFE7
  3835                           fsr1h	equ	0xFE2
  3836                           fsr1l	equ	0xFE1
  3837                           indf2	equ	0xFDF
  3838                           fsr2h	equ	0xFDA
  3839                           fsr2l	equ	0xFD9
  3840                           status	equ	0xFD8
  3841                           
  3842                           	psect	rparam
  3843  0000                     pclatu	equ	0xFFB
  3844                           pclath	equ	0xFFA
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           prodh	equ	0xFF4
  3850                           prodl	equ	0xFF3
  3851                           intcon	equ	0xFF2
  3852                           postinc0	equ	0xFEE
  3853                           fsr0h	equ	0xFEA
  3854                           fsr0l	equ	0xFE9
  3855                           wreg	equ	0xFE8
  3856                           indf1	equ	0xFE7
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8


Data Sizes:
    Strings     57
    Constant    4
    Data        2
    BSS         650
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      76
    BANK0           160     19      37
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncpy@from	PTR const unsigned char  size(2) Largest target is 200
		 -> MessageBuffer(BANK1[200]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 2047
		 -> STR_10(CODE[17]), STR_9(CODE[2]), STR_8(CODE[27]), STR_7(CODE[17]), 
		 -> STR_6(CODE[2]), RAM(DATA[2047]), STR_5(CODE[27]), STR_4(CODE[17]), 
		 -> STR_3(CODE[2]), STR_2(CODE[27]), DC_str(COMRAM[5]), MessageBuffer(BANK1[200]), 

    lcd_puts@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 5
		 -> DC_str(COMRAM[5]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_putsUSART
    _putsUSART->_itoa
    _itoa->_utoa
    _utoa->i2___lwdiv
    _atoi->___wmul

Critical Paths under _main in BANK0

    _main->_lcd_putnum
    _lcd_puts->_lcd_gotoxy
    _lcd_putnum->_lcd_gotoxy
    _lcd_gotoxy->_lcd_write_byte
    _lcd_init->_lcd_write_byte
    _lcd_write_byte->_lcd_write_nibble

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   17538
                                             16 BANK0      3     3      0
                           _OpenPWM1
                          _OpenUSART
                          _SetDCPWM1
                         _lcd_gotoxy
                           _lcd_init
                         _lcd_putnum
                           _lcd_puts
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    4558
                                              8 BANK0      2     0      2
                         _lcd_gotoxy
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_putnum                                           8     3      5    5522
                                              8 BANK0      8     3      5
                            ___lwdiv
                         _lcd_gotoxy
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           3     2      1    2612
                                              5 BANK0      3     2      1
                     _lcd_write_byte
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     563
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    2359
                                              5 BANK0      1     1      0
                     _lcd_write_byte
                   _lcd_write_nibble
 ---------------------------------------------------------------------------------
 (1) _lcd_write_byte                                       2     1      1    1742
                                              3 BANK0      2     1      1
                   _lcd_write_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_write_nibble                                     3     2      1     617
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _SetDCPWM1                                            6     4      2     253
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenPWM1                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0    3511
                                             28 COMRAM    14    14      0
                          _ReadUSART
                               _atoi
                               _itoa
                          _putsUSART
                            _strncpy
 ---------------------------------------------------------------------------------
 (6) _strncpy                                              8     2      6     333
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _putsUSART                                            4     2      2     898
                                             24 COMRAM     4     2      2
                         _WriteUSART
                               _itoa (ARG)
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    1610
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (7) _utoa                                                 9     3      6    1047
                                              7 COMRAM     9     3      6
                            ___lwmod
                          i2___lwdiv
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2     647
                                              6 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenPWM1
   _OpenUSART
   _SetDCPWM1
   _lcd_gotoxy
     _lcd_write_byte
       _lcd_write_nibble
   _lcd_init
     _lcd_write_byte
       _lcd_write_nibble
     _lcd_write_nibble
   _lcd_putnum
     ___lwdiv
     _lcd_gotoxy
       _lcd_write_byte
         _lcd_write_nibble
     _lcd_write_byte
       _lcd_write_nibble
   _lcd_puts
     _lcd_gotoxy
       _lcd_write_byte
         _lcd_write_nibble
     _lcd_write_byte
       _lcd_write_nibble
   _lcd_write_byte
     _lcd_write_nibble

 _ISR (ROOT)
   _ReadUSART
   _atoi
     ___wmul
     _isdigit
   _itoa
     _utoa
       ___lwmod
       i2___lwdiv
   _putsUSART
     _WriteUSART
     _itoa (ARG)
       _utoa
         ___lwmod
         i2___lwdiv
   _strncpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      25       5       23.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2A      4C       1       80.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C9      20        0.0%
DATA                 0      0     2C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Jan 03 19:57:16 2017

                        _c 0044                          _i 003F                          _k 0041  
      ___wmul@multiplicand 0003         i2___lwdiv@dividend 0001                        l142 11B0  
                      l240 101A                        l241 1026                        l242 1028  
                      l235 0FFE                        l139 1156                        l244 1050  
                      l239 1018                        l829 10C0                        _PR2 000FCB  
                      _ISR 0008                        wreg 000FE8               __CFG_FOSC$HS 000000  
              lcd_gotoxy@x 0067                lcd_gotoxy@y 0065               __CFG_LVP$OFF 000000  
                     ?_ISR 0001               __CFG_WDT$OFF 000000                       l2050 107C  
                     l2060 10B2                       l2052 1082                       l2048 1070  
                     l2160 0F92                       l2152 0F42                       l2224 0B7C  
                     l2082 1000                       l2074 0FEE                       l2172 10D4  
                     l2164 0FAA                       l2156 0F72                       l2166 0FB4  
                     l2168 0FBA                       l2186 1136                       STR_1 0831  
                     STR_2 0805                       STR_3 082F                       STR_4 0820  
                     STR_5 0805                       STR_6 082F                       STR_7 0820  
                     STR_8 0805                       STR_9 082F                       u2007 0DEC  
                     u2017 0E8A                       u2027 0E94                       u1515 0DE8  
                     u1516 0DEA                       _PIE1 000F9D                       u1675 1384  
                     u1907 1194                       u1917 11AA                       u1837 0B68  
                     u1927 0C28                       u1847 0BCA                       u1937 0C44  
                     u1857 0BDC                       u1947 0C62                       u1867 0BEE  
                     _PEIE 007F96                       u1957 0C80                       u1877 0C00  
                     u1967 0CAA                       u1887 0C12                       u1977 0CC8  
                     u1897 117E                       u1987 0CE6                       _RCIE 007CED  
                     _RCIF 007CF5                       u1997 0D04                       _RCIP 007CFD  
                     i2l97 0AB8     __end_of_lcd_write_byte 1446                       _atoi 0D10  
                     _main 0AF2                       _itoa 12CA                       fsr0h 000FEA  
                     fsr1h 000FE2         i2___lwdiv@quotient 0005                       fsr0l 000FE9  
                     fsr2h 000FDA                       indf1 000FE7                       fsr1l 000FE1  
                     indf2 000FDF                       fsr2l 000FD9                       _utoa 0E9C  
              lcd_puts@str 0068                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 0018                lcd_putnum@r 006E  
              lcd_putnum@x 006B                lcd_putnum@y 006C              __CFG_MCLRE$ON 000000  
                    ??_ISR 001D                      ?_atoi 0007                      ?_main 0001  
                    ?_itoa 0011                      STR_10 0820                      ?_utoa 0008  
                    _T2CON 000FCA            __end_of___lwdiv 10CA            __end_of___lwmod 1400  
                    i2l252 126E                      i2l265 1474                      i2l465 0DD0  
                    i2l466 0DD8                      i2l735 0F1C                      i2l829 136C  
                    i2l839 13F6                      _RCREG 000FAE                      _RCSTA 000FAB  
                    _SPBRG 000FAF                      _TRISC 000F94                      _TRISD 000F95  
                    _TXREG 000FAD                      _TXSTA 000FAC                      _lcd_x 0046  
                    _lcd_y 0047            __end_of_isdigit 1466                      atoi@a 000C  
                    atoi@s 0007                      tablat 000FF5                      utoa@c 0010  
                    utoa@v 000E                      status 000FD8            ?_lcd_write_byte 0063  
          __end_of_strncpy 126E         __size_ofi2___lwdiv 0052             WriteUSART@data 0001  
          __initialization 11B2               __end_of_atoi 0DDA               __end_of_main 0C20  
             __end_of_itoa 1324               __end_of_utoa 0F40           __end_of_OpenPWM1 1498  
                   ??_atoi 0009                     ??_main 0070                     ??_itoa 0017  
                   ??_utoa 000E              __activetblptr 000002                     _CCPR1L 000FBE  
                   i2l1502 13EC                     i2l1512 133A                     i2l1514 1342  
                   i2l1524 1362                     i2l1516 1346                     i2l1550 14A4  
                   i2l1800 0D9E                     i2l1572 0EA4                     i2l1820 12FE  
                   i2l1566 145E                     i2l1494 13CC                     i2l1582 0EDE  
                   i2l1902 092C                     i2l1496 13D4                     i2l1904 093A  
                   i2l1498 13D8                     i2l1770 1242                     i2l1914 096A  
                   i2l1780 0D12                     i2l1772 124C                     i2l1764 121A  
                   i2l1940 0A5C                     i2l1908 0954                     i2l1782 0D16  
                   i2l1942 0A68                     i2l1926 09DC                     i2l1792 0D54  
                   i2l1776 125C                     i2l1952 0A9C                     i2l1928 09E8  
                   i2l1954 0AB0                     i2l1946 0A70                     i2l1796 0D64  
                   i2l1948 0A82                     _DC_str 0048         __size_of_ReadUSART 001E  
                   _SPBRGH 000FB0         __size_of_SetDCPWM1 0048           __end_of_lcd_init 0D10  
       __size_of_OpenUSART 0080           __end_of_lcd_puts 0FD2                     ___wmul 1400  
 __end_of_lcd_write_nibble 0E9C                  ??___lwdiv 0064                  ??___lwmod 0005  
                   clear_0 11B8                     clear_1 11C4                     clear_2 11D0  
                   clear_3 11DC                     clear_4 11E8                     itoa@cp 0017  
                ??_isdigit 0001          __end_ofi2___lwdiv 1376       _lcd_lower_row_buffer 0300  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8              lcd_putnum@dec 006D              lcd_putnum@len 006A  
            lcd_putnum@num 0068                  ??_strncpy 0007              _MessageBuffer 0100  
               __accesstop 0060    __end_of__initialization 1206                 _WriteUSART 1498  
           __pcstackCOMRAM 0001               __pidataBANK0 14AA          __end_of_ReadUSART 1484  
        __end_of_SetDCPWM1 13BE             lcd_gotoxy@addr 0066              ReadUSART@data 0001  
        __end_of_OpenUSART 1052                 __pbssBANK0 0073                 __pbssBANK1 0100  
               __pbssBANK2 0200                 __pbssBANK3 0300                  ?_OpenPWM1 0001  
                  ?___wmul 0001                    _CCP1CON 000FBD              putsUSART@data 0019  
               _lcd_gotoxy 113E         __size_of_putsUSART 005C           ??_lcd_write_byte 0064  
               _lcd_putnum 10CA                  ?_lcd_init 0001                  ?_lcd_puts 0068  
               ??_OpenPWM1 0060                    __Hparam 0000                    __Lparam 0000  
             _flag_newline 0045                ?_WriteUSART 0001            __size_of___wmul 0026  
                  ___lwdiv 1052                    ___lwmod 13BE               __psmallconst 0800  
    lcd_write_byte@is_data 0063                    __pcinit 11B2                    __ramtop 0800  
                  __ptext0 0AF2                    __ptext1 0F40                    __ptext2 10CA  
                  __ptext3 113E                    __ptext4 1052                    __ptext5 0C20  
                  __ptext6 1426                    __ptext7 0DDA                    __ptext8 1376  
                  __ptext9 0FD2               __size_of_ISR 0AEA                  _T2CONbits 000FCA  
       lcd_write_byte@byte 0064                    _isdigit 1446       _lcd_upper_row_buffer 0200  
               ??_lcd_init 0065             __pintcode_body 0840                    _strncpy 1210  
               ??_lcd_puts 006A       end_of_initialization 1206           _cantidadLetrasUP 003D  
                  itoa@buf 0011                    itoa@val 0013              __Lmediumconst 0000  
                  int_func 0840                  _RCSTAbits 000FAB                    postinc0 000FEE  
        __end_of_putsUSART 12CA                    utoa@buf 0008                    utoa@val 000A  
        ?_lcd_write_nibble 0060         ??_lcd_write_nibble 0061                  _TRISCbits 000F94  
              ?_lcd_gotoxy 0065                ?_lcd_putnum 0068        __size_of_WriteUSART 0012  
        i2___lwdiv@divisor 0003                  i2___lwdiv 1324          i2___lwdiv@counter 0007  
               main@config 0071                  _TXSTAbits 000FAC             __end_of___wmul 1426  
      start_initialization 11B2                  _ReadUSART 1466                __end_of_ISR 0AF2  
                _SetDCPWM1 1376            SetDCPWM1@DCycle 0064                  _DutyCycle 0083  
 _lcd_lower_display_buffer 002B                 ?i2___lwdiv 0001                  _OpenUSART 0FD2  
        __size_of_OpenPWM1 0014        __size_of_lcd_gotoxy 0074                   ??___wmul 0005  
              __pdataBANK0 0083        __size_of_lcd_putnum 0074                __pbssCOMRAM 002B  
               ?_ReadUSART 0001              __pcstackBANK0 0060                 ?_SetDCPWM1 0060  
      __end_of__stringdata 083E               _isdigit$1328 0002                 ?_OpenUSART 0060  
        __size_of_lcd_init 00F0          __size_of_lcd_puts 0092           ___lwdiv@dividend 0060  
             ??_WriteUSART 0001                  __pintcode 0008                   ?___lwdiv 0060  
                 ?___lwmod 0001                __smallconst 0800                   ?_isdigit 0001  
         ___lwdiv@quotient 0065            _LCD_ROW_ADDRESS 0801                   ?_strncpy 0001  
              ??i2___lwdiv 0005         __end_of_WriteUSART 14AA             ___wmul@product 0005  
                 _LATDbits 000F8C                strncpy@from 0003                   _PIE1bits 000F9D  
              strncpy@size 0005                   i2u127_40 1292                   i2u127_47 1288  
                 i2u128_40 12C2                   i2u128_47 12B8                   _PIR1bits 000F9E  
 _lcd_upper_display_buffer 0073                  _putsUSART 126E                __stringdata 0805  
        ___wmul@multiplier 0001                ??_ReadUSART 0001                  main@spbrg 0072  
             ??_lcd_gotoxy 0066                ??_SetDCPWM1 0062               ??_lcd_putnum 006D  
__size_of_lcd_write_nibble 00C2         _cantidadLetrasDOWN 003B                ??_OpenUSART 0062  
       SetDCPWM1@dutycycle 0060            OpenUSART@config 0065                   _OpenPWM1 1484  
  __size_of_lcd_write_byte 0020                   __Hrparam 0000    lcd_write_nibble@is_data 0060  
                 __Lrparam 0000         __end_of_lcd_gotoxy 11B2           __size_of___lwdiv 0078  
       __end_of_lcd_putnum 113E           __size_of___lwmod 0042                 ?_putsUSART 0019  
  __end_of_LCD_ROW_ADDRESS 0805             OpenPWM1@period 0060           __size_of_isdigit 0020  
          ___lwdiv@divisor 0062            ___lwdiv@counter 0064                   __ptext10 1484  
                 __ptext20 1446                   __ptext12 1210                   __ptext21 1400  
                 __ptext13 126E                   __ptext22 1466                   __ptext14 1498  
                 __ptext15 12CA                   __ptext16 0E9C                   __ptext17 1324  
                 __ptext18 13BE                   __ptext19 0D10                   _lcd_init 0C20  
                 _lcd_puts 0F40           __size_of_strncpy 005E              __size_of_atoi 00CA  
            __size_of_main 012E              __size_of_itoa 005A              __size_of_utoa 00A4  
                 atoi@sign 000B                 _INTCONbits 000FF2             OpenUSART@spbrg 0060  
   lcd_write_nibble@nibble 0062                   itoa@base 0015                   isdigit@c 0003  
                 intlevel2 0000           ___lwmod@dividend 0001                  strncpy@cp 0007  
                strncpy@to 0001                ??_putsUSART 001B                   utoa@base 000C  
          ___lwmod@divisor 0003            ___lwmod@counter 0005           _lcd_write_nibble 0DDA  
             _USART_Status 0043             _lcd_write_byte 1426  
